{
  "links": "https://www.ycombinator.com/companies/axar-ai",
  "name": "AXAR AI",
  "headline": "Runtime for building reliable LLM apps",
  "batch": "W21",
  "description": null,
  "activity_status": "Active",
  "website": "https://axar.ai/",
  "founded_date": 2025.0,
  "team_size": 3.0,
  "location": "Mountain View",
  "group_partner": null,
  "group_partner_yc": null,
  "company_linkedin": null,
  "company_twitter": null,
  "tags": "industry:artificial-intelligence; industry:developer-tools; industry:open-source; location:san-francisco-bay-area",
  "founders": [
    {
      "name": "Anupom Syam, Founder",
      "description": "Led teams in Data/ML Infrastructure, Distributed Systems, Data Storage Optimization. Previously at Netflix, Evernote, Disney, MIT Media Lab.",
      "linkedin": "https://linkedin.com/in/anupom"
    }
  ],
  "status": true,
  "markdown": "raw_markdown=\"![AXAR Logo](https://axar.ai/axar-logo.svg)\\nOpen main menu\\n[Docs](https://axar.ai/<https:/axar-ai.gitbook.io/axar>)[ ](https://axar.ai/<https:/github.com/axar-ai/axar>)[Get Started](https://axar.ai/<https:/axar-ai.gitbook.io/axar/getting-started/quickstart>)\\n# Runtime for real-time agents\\nShip real-time AI agents faster. We handle socket communication, agent routing, and persistent state. So you focus on building product, not managing infra.\\n$ npm i @axarai/axar\\n[Start building](https://axar.ai/<https:/github.com/axar-ai/axar>)[Read documentation →](https://axar.ai/<https:/axar-ai.gitbook.io/axar/>)\\naxar.platform()\\nEverything between your users and agents.\\nBuilt-in persistent messaging\\nReal-time memory updates\\nContext-aware message classification\\nUltra-fast multi-agent coordination\\nDeveloper-first SDK\\n## Build agents\\ncore()\\nA super-lightweight framework for building real-time AI agents your way.\\n```\\n\\n@model('openai:gpt-4o-mini')\\n@systemPrompt('Help customers with billing issues')\\nclass BillingAgent extends Agent<string, string> {\\n constructor(routes: Routes) {\\n  // Subscribe to relevant conversation routes\\n  subscribe([routes.billing, routes.payment])\\n }\\n \\n run(input: string): string {\\n  return super.run(input);\\n }\\n}\\n  \\n```\\n\\n![core\\\\(\\\\)](https://axar.ai/core.svg)\\n## Connect users\\nproxy()\\nOut-of-the-box client/server comms with low-latency semantic routing powered by Rust.\\n```\\n\\nimport { connect } from '@axarai/proxy';\\n// Establish a persistent socket connection \\nconst channel = connect('axar.ai/v1', auth, conversation);\\n// Send a test message\\nchannel.send({ type: 'ping' })\\n// Set up an event listener to handle incoming messages\\nchannel.on('message', (msg: string) => {\\n  console.log('Received:', msg);\\n});\\n  \\n```\\n\\n![proxy\\\\(\\\\)](https://axar.ai/proxy.svg)\\n## Manage state\\nmemory()\\nPersistent context storage for seamless state management across interactions.\\n```\\n\\nimport { context } from '@axarai/memory';\\n// Retrieve all previous messages from a conversation\\nconst messages = context.get(conversation);\\n// Get a summary of user context\\nconst summary = context.summary(user);\\n// Query specific information about the user\\nconst result = context.query(user, ['user name']);\\n  \\n```\\n\\n![memory\\\\(\\\\)](https://axar.ai/memory.svg)\\n## Ready to set up your agents? Let us help you go live.\\n[Talk to us](https://axar.ai/<https:/cal.com/axar-ai/30min>)[Learn more →](https://axar.ai/<https:/axar-ai.gitbook.io/axar>)\\n![AXAR AI](https://axar.ai/axar-teal-square.svg)\\nBacked by\\n![Y Combinator](https://axar.ai/ycombinator.png)\\nSimplifying real-time AI with elegant, efficient, and scalable infrastructure.\\n[X](https://axar.ai/<https:/x.com/axar_ai_>)[GitHub](https://axar.ai/<https:/github.com/axar-ai>)[Discord](https://axar.ai/<https:/discord.gg/ZHA8BFxQ>)[LinkedIn](https://axar.ai/<https:/www.linkedin.com/company/axar-ai/>)\\n### Company\\n  * [Documentation](https://axar.ai/<https:/axar-ai.gitbook.io/axar>)\\n  * [Open source](https://axar.ai/<https:/github.com/axar-ai>)\\n  * [Community](https://axar.ai/<https:/discord.gg/ZHA8BFxQ>)\\n\\n\\n\" markdown_with_citations=\"![AXAR Logo⟨1⟩]\\nOpen main menu\\nDocs⟨2⟩ ⟨3⟩Get Started⟨4⟩\\n# Runtime for real-time agents\\nShip real-time AI agents faster. We handle socket communication, agent routing, and persistent state. So you focus on building product, not managing infra.\\n$ npm i @axarai/axar\\nStart building⟨3⟩Read documentation →⟨5⟩\\naxar.platform()\\nEverything between your users and agents.\\nBuilt-in persistent messaging\\nReal-time memory updates\\nContext-aware message classification\\nUltra-fast multi-agent coordination\\nDeveloper-first SDK\\n## Build agents\\ncore()\\nA super-lightweight framework for building real-time AI agents your way.\\n```\\n\\n@model('openai:gpt-4o-mini')\\n@systemPrompt('Help customers with billing issues')\\nclass BillingAgent extends Agent<string, string> {\\n constructor(routes: Routes) {\\n  // Subscribe to relevant conversation routes\\n  subscribe([routes.billing, routes.payment])\\n }\\n \\n run(input: string): string {\\n  return super.run(input);\\n }\\n}\\n  \\n```\\n\\n![core\\\\(\\\\)⟨6⟩]\\n## Connect users\\nproxy()\\nOut-of-the-box client/server comms with low-latency semantic routing powered by Rust.\\n```\\n\\nimport { connect } from '@axarai/proxy';\\n// Establish a persistent socket connection \\nconst channel = connect('axar.ai/v1', auth, conversation);\\n// Send a test message\\nchannel.send({ type: 'ping' })\\n// Set up an event listener to handle incoming messages\\nchannel.on('message', (msg: string) => {\\n  console.log('Received:', msg);\\n});\\n  \\n```\\n\\n![proxy\\\\(\\\\)⟨7⟩]\\n## Manage state\\nmemory()\\nPersistent context storage for seamless state management across interactions.\\n```\\n\\nimport { context } from '@axarai/memory';\\n// Retrieve all previous messages from a conversation\\nconst messages = context.get(conversation);\\n// Get a summary of user context\\nconst summary = context.summary(user);\\n// Query specific information about the user\\nconst result = context.query(user, ['user name']);\\n  \\n```\\n\\n![memory\\\\(\\\\)⟨8⟩]\\n## Ready to set up your agents? Let us help you go live.\\nTalk to us⟨9⟩Learn more →⟨2⟩\\n![AXAR AI⟨10⟩]\\nBacked by\\n![Y Combinator⟨11⟩]\\nSimplifying real-time AI with elegant, efficient, and scalable infrastructure.\\nX⟨12⟩GitHub⟨13⟩Discord⟨14⟩LinkedIn⟨15⟩\\n### Company\\n  * Documentation⟨2⟩\\n  * Open source⟨13⟩\\n  * Community⟨14⟩\\n\\n\\n\" references_markdown='\\n\\n## References\\n\\n⟨1⟩ https://axar.ai/axar-logo.svg: AXAR Logo\\n⟨2⟩ https://axar.ai/<https:/axar-ai.gitbook.io/axar>: Docs\\n⟨3⟩ https://axar.ai/<https:/github.com/axar-ai/axar>:  \\n⟨4⟩ https://axar.ai/<https:/axar-ai.gitbook.io/axar/getting-started/quickstart>: Get Started\\n⟨5⟩ https://axar.ai/<https:/axar-ai.gitbook.io/axar/>: Read documentation →\\n⟨6⟩ https://axar.ai/core.svg: core\\\\(\\\\)\\n⟨7⟩ https://axar.ai/proxy.svg: proxy\\\\(\\\\)\\n⟨8⟩ https://axar.ai/memory.svg: memory\\\\(\\\\)\\n⟨9⟩ https://axar.ai/<https:/cal.com/axar-ai/30min>: Talk to us\\n⟨10⟩ https://axar.ai/axar-teal-square.svg: AXAR AI\\n⟨11⟩ https://axar.ai/ycombinator.png: Y Combinator\\n⟨12⟩ https://axar.ai/<https:/x.com/axar_ai_>: X\\n⟨13⟩ https://axar.ai/<https:/github.com/axar-ai>: GitHub\\n⟨14⟩ https://axar.ai/<https:/discord.gg/ZHA8BFxQ>: Discord\\n⟨15⟩ https://axar.ai/<https:/www.linkedin.com/company/axar-ai/>: LinkedIn\\n' fit_markdown='' fit_html=''",
  "generated_description": "**AXAR AI: Simplifying Real-Time AI with Elegance**\n\nFounded in 2025 and part of Y Combinator Batch W21, AXAR AI is a promising startup located in the heart of Silicon Valley, Mountain View. With a lean team of three, they focus on delivering a robust runtime for building reliable, real-time AI applications. Their mission? To enable developers to concentrate on building products without the hassle of managing the underlying infrastructure.\n\nTheir core offering is an elegant platform designed to handle socket communication, agent routing, and persistent state management, allowing developers to ship real-time AI agents faster than ever. This is crucial as AI applications increasingly demand seamless user interactions and timely responses. \n\n### What AXAR AI Offers:\n1. **Developer-First SDK**: The developer-centric approach allows users to create sophisticated agents effortlessly.\n2. **Core Framework**: A lightweight framework that provides the necessary tools to build real-time AI agents catered to specific needs. For instance, developers can create a billing agent with just a few lines of code.\n3. **Proxy for User Connectivity**: They offer out-of-the-box client/server communication powered by Rust, ensuring low-latency interactions.\n4. **State Management**: AXAR's memory management solution provides persistent context storage, making it easy to track and manage state across user interactions.\n\n### Engaging the Community:\nAXAR AI is open-source, inviting collaboration and contributions from developers around the world. Their resources, including [documentation](https://axar.ai/<https:/axar-ai.gitbook.io/axar>) and community channels like [Discord](https://axar.ai/<https:/discord.gg/ZHA8BFxQ>), help in fostering a vibrant developer ecosystem.\n\n### Conclusion:\nBacked by Y Combinator, AXAR AI is poised to make a significant impact in the artificial intelligence landscape, particularly in developer tools. Their mission of simplifying complex AI tasks with a focus on reliability and efficiency resonates well in today's tech-driven world. If you're looking to build real-time AI agents and make a difference, AXAR AI is a platform to consider. The future of AI infrastructure looks promising with them at the forefront. \n\nFor more information, you can visit their [website](https://axar.ai/) or engage with them on platforms like [GitHub](https://axar.ai/<https:/github.com/axar-ai>) and [LinkedIn](https://axar.ai/<https:/www.linkedin.com/company/axar-ai/>)."
}