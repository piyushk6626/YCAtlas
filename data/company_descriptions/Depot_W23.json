{
  "links": "https://www.ycombinator.com/companies/depot",
  "name": "Depot",
  "headline": "Build faster. Waste less time.",
  "batch": "W23",
  "description": "Depot is a build acceleration platform making builds up to 40x faster for Docker containers and GitHub Actions. Companies like PostHog, Wistia, Appsmith, and Secoda use Depot to save tens of hours of build time every day.\r\n\nWe offer a remote container build service for building Intel & Arm Docker images, from your CI or local machine, up to 40x faster. Our container builds come with in-depth build insights, ephemeral registries, and instant cache sharing across your team.\r\n\nFinally, we also offer our own Depot GitHub Actions Runners that brings all the speed of Depot to your entire GitHub Actions workflow at half the cost of GitHub-hosted runners, and up to 10x faster builds. Simply change the runs-on label of your existing workflow to route jobs to Depot runners.\r\n\nKyle and Jacob worked together as staff engineers for 4.5 years at Thorn and Era Software, before founding Depot. Depot is their solution to the wildly inefficient container build tooling and non-performant CI systems they encountered throughout their careers.",
  "activity_status": "Active",
  "website": "https://depot.dev",
  "founded_date": 2022.0,
  "team_size": 5.0,
  "location": "Montpellier, France",
  "group_partner": "Nicolas Dessaigne",
  "group_partner_yc": "https://www.ycombinator.com/people/nicolas-dessaigne",
  "company_linkedin": null,
  "company_twitter": null,
  "tags": "industry:developer-tools; industry:saas; industry:b2b; industry:devops",
  "founders": [
    {
      "name": "Kyle Galbraith, Founder",
      "description": "Kyle Galbraith is the Co-Founder & CEO of Depot. He and Jacob Gillespie (CTO) built Depot after being faced with the same challenges time and time again surrounding slow CI builds across all generic providers. He is originally from Portland, Oregon but relocated to Montpellier, France in October 2022 to immerse himself in French culture with his wife who is originally from the area.",
      "linkedin": "https://www.linkedin.com/in/kylegalbraith459"
    },
    {
      "name": "Jacob Gillespie, Founder",
      "description": "Cofounder and CTO of Depot. US expat living in the UK.",
      "linkedin": "https://www.linkedin.com/in/jacobwgillespie/"
    }
  ],
  "status": true,
  "markdown": "raw_markdown='We use [cookies](https://depot.dev/</cookies>) to understand how people use Depot.\\nReject cookiesAccept cookies\\n[âš¡ Introducing Depot Cache â€” Up to 20x faster builds for Bazel, Gradle, Turborepo, sccache, and Pants](https://depot.dev/</blog/introducing-depot-cache>)[âš¡ Introducing Depot Cache](https://depot.dev/</blog/introducing-depot-cache>)\\n[Depot](https://depot.dev/</>)\\n  * Products \\n  * Resources \\n  * [Blog](https://depot.dev/</blog>)\\n  * [Docs](https://depot.dev/</docs>)\\n  * [Pricing](https://depot.dev/</pricing>)\\n\\n\\n[Sign In](https://depot.dev/</sign-in>)[Start for free](https://depot.dev/</sign-up>)\\nMenu\\n# Build faster. Waste less time.\\nAccelerate your Docker image builds and GitHub Actions workflows. Easily integratewith your existing CI provider and dev workflows to save hours of build time.\\n[Start building](https://depot.dev/</start>)[Read documentation](https://depot.dev/</docs>)\\n![App Screenshot](https://depot.dev/images/app-screenshot.webp)\\nPowering the world\\'s best engineering teams\\nFrom early-stage startups to public companies\\n[PostHog Logo](https://depot.dev/<https:/posthog.com/blog/speeding-up-posthog-builds-with-depot?ref=depot.dev>)[Semgrep Logo](https://depot.dev/<https:/semgrep.dev/?ref=depot.dev>)[Appsmith Logo](https://depot.dev/<https:/www.appsmith.com/?ref=depot.dev>)[TicketSwap Logo](https://depot.dev/<https:/www.ticketswap.com/?ref=depot.dev>)[Wistia Logo](https://depot.dev/<https:/wistia.com/?ref=depot.dev>)[RWX Logo](https://depot.dev/<https:/www.rwx.com/?ref=depot.dev>)[GridRival Logo](https://depot.dev/<https:/gridrival.com/?ref=depot.dev>)[Secoda Logo](https://depot.dev/<https:/www.secoda.co/?ref=depot.dev>)\\nThe Depot Platform\\nCombining advanced software, powerful compute, and a globally-distributed cache to accelerate builds.\\nRemote container builds\\nReplace `docker build` with `depot build`. Native support for Intel and Arm images. Automatic layer caching. Use with your existing CI provider and dev workflows.\\n[See details](https://depot.dev/</products/container-builds>)[Read the docs](https://depot.dev/</docs/container-builds/overview>)\\n- docker build .\\n+ depot build .\\n--tag depot/app:latest --target app --file docker/Dockerfile --build-arg COMMIT=6fc3900f --platform linux/arm64,linux/amd64 --progress plain --ssh default --push\\nGitHub Actions runners\\nHosted in AWS, with 30% faster CPUs, 10x faster networking and cache throughput, unrestricted concurrency, at half the cost of GitHub-hosted runners.\\n[See details](https://depot.dev/</products/github-actions>)[Read the docs](https://depot.dev/</docs/github-actions/overview>)\\nAdd Depot build workflows\\nDepot CI #37\\nSummary\\nJobs\\nBuild with Depot\\nBuild with Depot\\nsucceeded 8 hours ago in 19s\\nSet up job\\nRun actions/checkout@v3\\nRun depot/setup-action@v1\\nRun depot build\\nDepot Cache\\nMake all builds incremental with distributed remote caching for Bazel, Gradle, Turborepo, sccache, and Pants.\\nIntegrate with any CI provider and share cache with your entire team, even in local development.\\n[See details](https://depot.dev/</products/cache>)[Read the docs](https://depot.dev/</docs/cache/overview>)\\nexport SCCACHE_WEBDAV_ENDPOINT=https://cache.depot.dev\\nexport SCCACHE_WEBDAV_TOKEN=<token>\\nexport RUSTC_WRAPPER=sccache\\n$ cargo build --release\\nCompiling unicode-ident v1.0.13 Compiling proc-macro2 v1.0.92 Compiling libc v0.2.167 Compiling cfg-if v1.0.0 Compiling serde v1.0.215 Compiling autocfg v1.1.0 Compiling once_cell v1.20.2\\nBuild API for Platforms\\nProgramatically build container images on behalf of your customers in a secure, isolated environment.\\ngRPC, Connect, and HTTP/JSON support, with a variety of language SDKs and integrations.\\n[Integration guide](https://depot.dev/</docs/container-builds/reference/api-overview>)[API reference](https://depot.dev/<https:/buf.build/depot/api>)\\nsyntax = \"proto3\";\\npackage depot.core.v1;\\nservice ProjectService {\\nrpc ListProjects(ListProjectsRequest) returns (ListProjectsResponse) {\\nrpc GetProject(GetProjectRequest) returns (GetProjectResponse) {\\nrpc CreateProject(CreateProjectRequest) returns (CreateProjectResponse) {\\nrpc UpdateProject(UpdateProjectRequest) returns (UpdateProjectResponse) {\\nrpc DeleteProject(DeleteProjectRequest) returns (DeleteProjectResponse) {\\nrpc ListTrustPolicies(ListTrustPoliciesRequest) returns (ListTrustPoliciesResponse) {\\nrpc AddTrustPolicy(AddTrustPolicyRequest) returns (AddTrustPolicyResponse) {\\nrpc RemoveTrustPolicy(RemoveTrustPolicyRequest) returns (RemoveTrustPolicyResponse) {\\n}\\nLive Benchmarks\\nUnrivaled Performance\\nOver 44,510 hours saved last week.\\ntemporalio/temporal\\n23x faster\\nWith Depot\\n1m 18s\\nWithout Depot\\n29m 17s\\nmastodon/mastodon\\n27x faster\\nWith Depot\\n2m 58s\\nWithout Depot\\n81m 12s\\nPostHog/posthog\\n33x faster\\nWith Depot\\n3m 10s\\nWithout Depot\\n105m 45s\\nNetflix/dispatch\\n1.9x faster\\nWith Depot\\n2m 36s\\nWithout Depot\\n5m 1s\\nIntegrations\\nUse Depot with your favorite tools and services, from your existing CI providers, to infrastructure-as-code, to compute platforms.\\n[Browse the directory](https://depot.dev/</integrations>)\\nFaster builds for everyone\\n[Start building](https://depot.dev/</start>)\\n[![jack](https://depot.dev/images/twitter/jackw_xyz.webp)jack@jackw_xyzyou wanna see some real speed?Building and releasing a complete nextjs app in 1m3s(with help from @depotdev - insane 16s build and push thanks to caching)![Screenshot showing a GitHub Actions workflow where the build and push step takes 16 seconds](https://depot.dev/images/twitter/1783605294628581817.webp)](https://depot.dev/<https:/x.com/jackw_xyz/status/1783605294628581817>)[![nacho](https://depot.dev/images/twitter/ignacioaal.webp)nacho@ignacioaalok @depotdev is awesome! got my build & push from 30 mins to 4 and it will be about 12 seconds when cached *chef kiss*](https://depot.dev/<https:/x.com/ignacioaal/status/1775769850222448836>)[![Dan Loewenherz](https://depot.dev/images/twitter/dwlz.webp)Dan Loewenherz@dwlzJust want to give a public shoutout to @depotdev. Since migrating from the default GitHub actions runner, our Docker image build times have literally been cut in half.Super impressive. So worth it. We are very happy customers. ðŸ˜€](https://depot.dev/<https:/x.com/dwlz/status/1767964282405188060>)[![Shubham](https://depot.dev/images/twitter/ShubhamInTech.webp)Shubham@ShubhamInTechqemu emulations & buildkit made our arm builds really slow! tried out @depotdev and saw instant 10x faster builds at @formbricks ðŸš€](https://depot.dev/<https:/x.com/ShubhamInTech/status/1747532424039317606>)[![Mike Turck](https://depot.dev/images/twitter/turckalicious.webp)Mike Turck@turckaliciouswe\\'ve found @depotdev to be incredible for reducing our own build times by >10x, from 8 min to 20s in one case](https://depot.dev/<https:/x.com/turckalicious/status/1752785555841036643>)[![Aaron](https://depot.dev/images/twitter/aaronbatilo.webp)Aaron@aaronbatiloI build 3 react apps, and 7 Golang binaries + golang tests on every single commit -- all in about 30 seconds total thanks to some very precise docker context management, docker run cache mounts, and the incredible caches provided by @depotdev. All in a single `depot bake` command](https://depot.dev/<https:/x.com/aaronbatilo/status/1787142744642654678>)[![Matthieu Napoli](https://depot.dev/images/twitter/matthieunapoli.webp)Matthieu Napoli@matthieunapoliI am blown away by @depotdev, it\\'s making the bref runtimes pipeline finally usable\"docker build\" becomes \"depot build\" in GitHub Actions and:- fast cross-platform builds (e.g. ARM) - everything is cached aggressively10 to 20 times faster builds!![Screenshot summarizing build times before and after switching to Depot, showing a 10 to 20 times speedup](https://depot.dev/images/twitter/1620090744408244224.webp)](https://depot.dev/<https:/x.com/matthieunapoli/status/1620090744408244224>)[![Vlad Ionescu \\\\(he/him\\\\)](https://depot.dev/images/twitter/iamvlaaaaaaad.webp)Vlad Ionescu (he/him)@iamvlaaaaaaad\"How do these competitors of ours move so fast?! They fix bugs in hours instead of days, they develop new features in days instead of weeks, and their sales cycle is weeks instead of months!?!\"Pro-tip: build a developer experience team that tries out new tools like @depotdev ðŸ˜‰](https://depot.dev/<https:/x.com/iamvlaaaaaaad/status/1557765954125418498>)[![Nick](https://depot.dev/images/twitter/NickZelei.webp)Nick@NickZeleiJust switched all of my multi-platform container builds over to using depot.dev. No cache github aciton build was 30m+. Cached was ~8m. Initial depot build (no cache): 3m. Amazing.](https://depot.dev/<https:/x.com/NickZelei/status/1722677723649200466>)[![Aidan W Steele](https://depot.dev/images/twitter/__steele.webp)Aidan W Steele@__steeleBuilding a container on my laptop: 19m40s, slow, makes me want to cry.Building it on @depotdev: 4m42s, speedy, makes me smile. But doesn\\'t heat up my room enough, so I have to wear a jumper.](https://depot.dev/<https:/x.com/__steele/status/1556825638182330437>)[![Krishnan Chandra](https://depot.dev/images/twitter/krishnanc_.webp)Krishnan Chandra@krishnanc_Depot has been fantastic for us! We managed to get our build times down from ~8.5 minutes to ~30 seconds using the caching and cross-platform builds out of the box ðŸ˜€](https://depot.dev/<https:/x.com/krishnanc_/status/1620769389019820033>)[![Luis Lavena](https://depot.dev/images/twitter/luislavena.webp)Luis Lavena@luislavenaPushed a new build of my @CrystalLanguage container image (hydrofoil-crystal) with native arm64 support! ðŸ¥³ ðŸš€Thanks to @depotdev for making it easier (and faster!) to build ARM container images! ðŸ˜Š](https://depot.dev/<https:/x.com/luislavena/status/1579635970336780288>)[![Dan Manges](https://depot.dev/images/twitter/dan_manges.webp)Dan Manges@dan_mangesWe switched to @depotdev for building our docker images at @rwx_research. Our build times are twice as fast and integration was impressively easy with their support for GitHub\\'s OIDC token. It\\'s easy to spot when we switched in our CI analytics.![Screenshot of a graph showing a sharp drop in build times after switching to Depot](https://depot.dev/images/twitter/1587899798396735488.webp)](https://depot.dev/<https:/x.com/dan_manges/status/1587899798396735488>)[![moon](https://depot.dev/images/twitter/tothemoonrepo.webp)moon@tothemoonrepoAmazing work. Depot really is a game changer.](https://depot.dev/<https:/x.com/tothemoonrepo/status/1588342162584133632>)\\nYour builds have never been this quick.\\n[Start building](https://depot.dev/</start>)\\n[Depot](https://depot.dev/</>)[Backed byY Combinator](https://depot.dev/<https:/www.ycombinator.com/companies/depot>)\\nProduct\\n[Pricing](https://depot.dev/</pricing>)\\n[Security](https://depot.dev/</docs/security>)\\n[Dockerfile Explorer](https://depot.dev/</dockerfile-explorer>)\\n[Drop Week](https://depot.dev/</drop-week>)\\n[depot.ai](https://depot.dev/<https:/depot.ai>)\\n[GitHub Actions Price Calculator](https://depot.dev/</github-actions-price-calculator>)\\nSupport\\n[Documentation](https://depot.dev/</docs>)\\n[Support](https://depot.dev/</help>)\\n[Discord 70 online](https://depot.dev/<https:/discord.gg/MMPqYSgDCg>)\\n[System Status ](https://depot.dev/<https:/status.depot.dev>)\\nCompany\\n[About](https://depot.dev/</about>)\\n[Blog](https://depot.dev/</blog>)\\n[Changelog ](https://depot.dev/</changelog>)\\nContact Us\\n[Brand Assets](https://depot.dev/</about/brand-assets>)\\nÂ© 2025 Depot Technologies Inc.\\n[Terms of Service](https://depot.dev/</terms-of-service>)[Privacy Policy](https://depot.dev/</privacy-policy>)[Cookies](https://depot.dev/</cookies>)\\n[Depot GitHub account](https://depot.dev/<https:/github.com/depot>)[Depot Discord community](https://depot.dev/<https:/discord.gg/MMPqYSgDCg>)[Depot Twitter account](https://depot.dev/<https:/twitter.com/depotdev>)[Depot LinkedIn account](https://depot.dev/<https:/www.linkedin.com/company/depot-technologies>)\\n' markdown_with_citations='We use cookiesâŸ¨1âŸ© to understand how people use Depot.\\nReject cookiesAccept cookies\\nâš¡ Introducing Depot Cache â€” Up to 20x faster builds for Bazel, Gradle, Turborepo, sccache, and PantsâŸ¨2âŸ©âš¡ Introducing Depot CacheâŸ¨2âŸ©\\nDepotâŸ¨3âŸ©\\n  * Products \\n  * Resources \\n  * BlogâŸ¨4âŸ©\\n  * DocsâŸ¨5âŸ©\\n  * PricingâŸ¨6âŸ©\\n\\n\\nSign InâŸ¨7âŸ©Start for freeâŸ¨8âŸ©\\nMenu\\n# Build faster. Waste less time.\\nAccelerate your Docker image builds and GitHub Actions workflows. Easily integratewith your existing CI provider and dev workflows to save hours of build time.\\nStart buildingâŸ¨9âŸ©Read documentationâŸ¨5âŸ©\\n![App ScreenshotâŸ¨10âŸ©]\\nPowering the world\\'s best engineering teams\\nFrom early-stage startups to public companies\\nPostHog LogoâŸ¨11âŸ©Semgrep LogoâŸ¨12âŸ©Appsmith LogoâŸ¨13âŸ©TicketSwap LogoâŸ¨14âŸ©Wistia LogoâŸ¨15âŸ©RWX LogoâŸ¨16âŸ©GridRival LogoâŸ¨17âŸ©Secoda LogoâŸ¨18âŸ©\\nThe Depot Platform\\nCombining advanced software, powerful compute, and a globally-distributed cache to accelerate builds.\\nRemote container builds\\nReplace `docker build` with `depot build`. Native support for Intel and Arm images. Automatic layer caching. Use with your existing CI provider and dev workflows.\\nSee detailsâŸ¨19âŸ©Read the docsâŸ¨20âŸ©\\n- docker build .\\n+ depot build .\\n--tag depot/app:latest --target app --file docker/Dockerfile --build-arg COMMIT=6fc3900f --platform linux/arm64,linux/amd64 --progress plain --ssh default --push\\nGitHub Actions runners\\nHosted in AWS, with 30% faster CPUs, 10x faster networking and cache throughput, unrestricted concurrency, at half the cost of GitHub-hosted runners.\\nSee detailsâŸ¨21âŸ©Read the docsâŸ¨22âŸ©\\nAdd Depot build workflows\\nDepot CI #37\\nSummary\\nJobs\\nBuild with Depot\\nBuild with Depot\\nsucceeded 8 hours ago in 19s\\nSet up job\\nRun actions/checkout@v3\\nRun depot/setup-action@v1\\nRun depot build\\nDepot Cache\\nMake all builds incremental with distributed remote caching for Bazel, Gradle, Turborepo, sccache, and Pants.\\nIntegrate with any CI provider and share cache with your entire team, even in local development.\\nSee detailsâŸ¨23âŸ©Read the docsâŸ¨24âŸ©\\nexport SCCACHE_WEBDAV_ENDPOINT=https://cache.depot.dev\\nexport SCCACHE_WEBDAV_TOKEN=<token>\\nexport RUSTC_WRAPPER=sccache\\n$ cargo build --release\\nCompiling unicode-ident v1.0.13 Compiling proc-macro2 v1.0.92 Compiling libc v0.2.167 Compiling cfg-if v1.0.0 Compiling serde v1.0.215 Compiling autocfg v1.1.0 Compiling once_cell v1.20.2\\nBuild API for Platforms\\nProgramatically build container images on behalf of your customers in a secure, isolated environment.\\ngRPC, Connect, and HTTP/JSON support, with a variety of language SDKs and integrations.\\nIntegration guideâŸ¨25âŸ©API referenceâŸ¨26âŸ©\\nsyntax = \"proto3\";\\npackage depot.core.v1;\\nservice ProjectService {\\nrpc ListProjects(ListProjectsRequest) returns (ListProjectsResponse) {\\nrpc GetProject(GetProjectRequest) returns (GetProjectResponse) {\\nrpc CreateProject(CreateProjectRequest) returns (CreateProjectResponse) {\\nrpc UpdateProject(UpdateProjectRequest) returns (UpdateProjectResponse) {\\nrpc DeleteProject(DeleteProjectRequest) returns (DeleteProjectResponse) {\\nrpc ListTrustPolicies(ListTrustPoliciesRequest) returns (ListTrustPoliciesResponse) {\\nrpc AddTrustPolicy(AddTrustPolicyRequest) returns (AddTrustPolicyResponse) {\\nrpc RemoveTrustPolicy(RemoveTrustPolicyRequest) returns (RemoveTrustPolicyResponse) {\\n}\\nLive Benchmarks\\nUnrivaled Performance\\nOver 44,510 hours saved last week.\\ntemporalio/temporal\\n23x faster\\nWith Depot\\n1m 18s\\nWithout Depot\\n29m 17s\\nmastodon/mastodon\\n27x faster\\nWith Depot\\n2m 58s\\nWithout Depot\\n81m 12s\\nPostHog/posthog\\n33x faster\\nWith Depot\\n3m 10s\\nWithout Depot\\n105m 45s\\nNetflix/dispatch\\n1.9x faster\\nWith Depot\\n2m 36s\\nWithout Depot\\n5m 1s\\nIntegrations\\nUse Depot with your favorite tools and services, from your existing CI providers, to infrastructure-as-code, to compute platforms.\\nBrowse the directoryâŸ¨27âŸ©\\nFaster builds for everyone\\nStart buildingâŸ¨9âŸ©\\n![jackâŸ¨28âŸ©jack@jackw_xyzyou wanna see some real speed?Building and releasing a complete nextjs app in 1m3s(with help from @depotdev - insane 16s build and push thanks to caching)![Screenshot showing a GitHub Actions workflow where the build and push step takes 16 secondsâŸ¨29âŸ©]](https://depot.dev/<https:/x.com/jackw_xyz/status/1783605294628581817>)![nachoâŸ¨30âŸ©nacho@ignacioaalok @depotdev is awesome! got my build & push from 30 mins to 4 and it will be about 12 seconds when cached *chef kiss*](https://depot.dev/<https:/x.com/ignacioaal/status/1775769850222448836>)![Dan LoewenherzâŸ¨31âŸ©Dan Loewenherz@dwlzJust want to give a public shoutout to @depotdev. Since migrating from the default GitHub actions runner, our Docker image build times have literally been cut in half.Super impressive. So worth it. We are very happy customers. ðŸ˜€](https://depot.dev/<https:/x.com/dwlz/status/1767964282405188060>)![ShubhamâŸ¨32âŸ©Shubham@ShubhamInTechqemu emulations & buildkit made our arm builds really slow! tried out @depotdev and saw instant 10x faster builds at @formbricks ðŸš€](https://depot.dev/<https:/x.com/ShubhamInTech/status/1747532424039317606>)![Mike TurckâŸ¨33âŸ©Mike Turck@turckaliciouswe\\'ve found @depotdev to be incredible for reducing our own build times by >10x, from 8 min to 20s in one case](https://depot.dev/<https:/x.com/turckalicious/status/1752785555841036643>)![AaronâŸ¨34âŸ©Aaron@aaronbatiloI build 3 react apps, and 7 Golang binaries + golang tests on every single commit -- all in about 30 seconds total thanks to some very precise docker context management, docker run cache mounts, and the incredible caches provided by @depotdev. All in a single `depot bake` command](https://depot.dev/<https:/x.com/aaronbatilo/status/1787142744642654678>)![Matthieu NapoliâŸ¨35âŸ©Matthieu Napoli@matthieunapoliI am blown away by @depotdev, it\\'s making the bref runtimes pipeline finally usable\"docker build\" becomes \"depot build\" in GitHub Actions and:- fast cross-platform builds (e.g. ARM) - everything is cached aggressively10 to 20 times faster builds!![Screenshot summarizing build times before and after switching to Depot, showing a 10 to 20 times speedupâŸ¨36âŸ©]](https://depot.dev/<https:/x.com/matthieunapoli/status/1620090744408244224>)![Vlad Ionescu \\\\(he/him\\\\)âŸ¨37âŸ©Vlad Ionescu (he/him)@iamvlaaaaaaad\"How do these competitors of ours move so fast?! They fix bugs in hours instead of days, they develop new features in days instead of weeks, and their sales cycle is weeks instead of months!?!\"Pro-tip: build a developer experience team that tries out new tools like @depotdev ðŸ˜‰](https://depot.dev/<https:/x.com/iamvlaaaaaaad/status/1557765954125418498>)![NickâŸ¨38âŸ©Nick@NickZeleiJust switched all of my multi-platform container builds over to using depot.dev. No cache github aciton build was 30m+. Cached was ~8m. Initial depot build (no cache): 3m. Amazing.](https://depot.dev/<https:/x.com/NickZelei/status/1722677723649200466>)![Aidan W SteeleâŸ¨39âŸ©Aidan W Steele@__steeleBuilding a container on my laptop: 19m40s, slow, makes me want to cry.Building it on @depotdev: 4m42s, speedy, makes me smile. But doesn\\'t heat up my room enough, so I have to wear a jumper.](https://depot.dev/<https:/x.com/__steele/status/1556825638182330437>)![Krishnan ChandraâŸ¨40âŸ©Krishnan Chandra@krishnanc_Depot has been fantastic for us! We managed to get our build times down from ~8.5 minutes to ~30 seconds using the caching and cross-platform builds out of the box ðŸ˜€](https://depot.dev/<https:/x.com/krishnanc_/status/1620769389019820033>)![Luis LavenaâŸ¨41âŸ©Luis Lavena@luislavenaPushed a new build of my @CrystalLanguage container image (hydrofoil-crystal) with native arm64 support! ðŸ¥³ ðŸš€Thanks to @depotdev for making it easier (and faster!) to build ARM container images! ðŸ˜Š](https://depot.dev/<https:/x.com/luislavena/status/1579635970336780288>)![Dan MangesâŸ¨42âŸ©Dan Manges@dan_mangesWe switched to @depotdev for building our docker images at @rwx_research. Our build times are twice as fast and integration was impressively easy with their support for GitHub\\'s OIDC token. It\\'s easy to spot when we switched in our CI analytics.![Screenshot of a graph showing a sharp drop in build times after switching to DepotâŸ¨43âŸ©]](https://depot.dev/<https:/x.com/dan_manges/status/1587899798396735488>)![moonâŸ¨44âŸ©moon@tothemoonrepoAmazing work. Depot really is a game changer.](https://depot.dev/<https:/x.com/tothemoonrepo/status/1588342162584133632>)\\nYour builds have never been this quick.\\nStart buildingâŸ¨9âŸ©\\nDepotâŸ¨3âŸ©Backed byY CombinatorâŸ¨45âŸ©\\nProduct\\nPricingâŸ¨6âŸ©\\nSecurityâŸ¨46âŸ©\\nDockerfile ExplorerâŸ¨47âŸ©\\nDrop WeekâŸ¨48âŸ©\\ndepot.aiâŸ¨49âŸ©\\nGitHub Actions Price CalculatorâŸ¨50âŸ©\\nSupport\\nDocumentationâŸ¨5âŸ©\\nSupportâŸ¨51âŸ©\\nDiscord 70 onlineâŸ¨52âŸ©\\nSystem Status âŸ¨53âŸ©\\nCompany\\nAboutâŸ¨54âŸ©\\nBlogâŸ¨4âŸ©\\nChangelog âŸ¨55âŸ©\\nContact Us\\nBrand AssetsâŸ¨56âŸ©\\nÂ© 2025 Depot Technologies Inc.\\nTerms of ServiceâŸ¨57âŸ©Privacy PolicyâŸ¨58âŸ©CookiesâŸ¨1âŸ©\\nDepot GitHub accountâŸ¨59âŸ©Depot Discord communityâŸ¨52âŸ©Depot Twitter accountâŸ¨60âŸ©Depot LinkedIn accountâŸ¨61âŸ©\\n' references_markdown='\\n\\n## References\\n\\nâŸ¨1âŸ© https://depot.dev/</cookies>: cookies\\nâŸ¨2âŸ© https://depot.dev/</blog/introducing-depot-cache>: âš¡ Introducing Depot Cache â€” Up to 20x faster builds for Bazel, Gradle, Turborepo, sccache, and Pants\\nâŸ¨3âŸ© https://depot.dev/</>: Depot\\nâŸ¨4âŸ© https://depot.dev/</blog>: Blog\\nâŸ¨5âŸ© https://depot.dev/</docs>: Docs\\nâŸ¨6âŸ© https://depot.dev/</pricing>: Pricing\\nâŸ¨7âŸ© https://depot.dev/</sign-in>: Sign In\\nâŸ¨8âŸ© https://depot.dev/</sign-up>: Start for free\\nâŸ¨9âŸ© https://depot.dev/</start>: Start building\\nâŸ¨10âŸ© https://depot.dev/images/app-screenshot.webp: App Screenshot\\nâŸ¨11âŸ© https://depot.dev/<https:/posthog.com/blog/speeding-up-posthog-builds-with-depot?ref=depot.dev>: PostHog Logo\\nâŸ¨12âŸ© https://depot.dev/<https:/semgrep.dev/?ref=depot.dev>: Semgrep Logo\\nâŸ¨13âŸ© https://depot.dev/<https:/www.appsmith.com/?ref=depot.dev>: Appsmith Logo\\nâŸ¨14âŸ© https://depot.dev/<https:/www.ticketswap.com/?ref=depot.dev>: TicketSwap Logo\\nâŸ¨15âŸ© https://depot.dev/<https:/wistia.com/?ref=depot.dev>: Wistia Logo\\nâŸ¨16âŸ© https://depot.dev/<https:/www.rwx.com/?ref=depot.dev>: RWX Logo\\nâŸ¨17âŸ© https://depot.dev/<https:/gridrival.com/?ref=depot.dev>: GridRival Logo\\nâŸ¨18âŸ© https://depot.dev/<https:/www.secoda.co/?ref=depot.dev>: Secoda Logo\\nâŸ¨19âŸ© https://depot.dev/</products/container-builds>: See details\\nâŸ¨20âŸ© https://depot.dev/</docs/container-builds/overview>: Read the docs\\nâŸ¨21âŸ© https://depot.dev/</products/github-actions>: See details\\nâŸ¨22âŸ© https://depot.dev/</docs/github-actions/overview>: Read the docs\\nâŸ¨23âŸ© https://depot.dev/</products/cache>: See details\\nâŸ¨24âŸ© https://depot.dev/</docs/cache/overview>: Read the docs\\nâŸ¨25âŸ© https://depot.dev/</docs/container-builds/reference/api-overview>: Integration guide\\nâŸ¨26âŸ© https://depot.dev/<https:/buf.build/depot/api>: API reference\\nâŸ¨27âŸ© https://depot.dev/</integrations>: Browse the directory\\nâŸ¨28âŸ© https://depot.dev/images/twitter/jackw_xyz.webp: ![jack\\nâŸ¨29âŸ© https://depot.dev/images/twitter/1783605294628581817.webp: Screenshot showing a GitHub Actions workflow where the build and push step takes 16 seconds\\nâŸ¨30âŸ© https://depot.dev/images/twitter/ignacioaal.webp: ![nacho\\nâŸ¨31âŸ© https://depot.dev/images/twitter/dwlz.webp: ![Dan Loewenherz\\nâŸ¨32âŸ© https://depot.dev/images/twitter/ShubhamInTech.webp: ![Shubham\\nâŸ¨33âŸ© https://depot.dev/images/twitter/turckalicious.webp: ![Mike Turck\\nâŸ¨34âŸ© https://depot.dev/images/twitter/aaronbatilo.webp: ![Aaron\\nâŸ¨35âŸ© https://depot.dev/images/twitter/matthieunapoli.webp: ![Matthieu Napoli\\nâŸ¨36âŸ© https://depot.dev/images/twitter/1620090744408244224.webp: Screenshot summarizing build times before and after switching to Depot, showing a 10 to 20 times speedup\\nâŸ¨37âŸ© https://depot.dev/images/twitter/iamvlaaaaaaad.webp: ![Vlad Ionescu \\\\(he/him\\\\)\\nâŸ¨38âŸ© https://depot.dev/images/twitter/NickZelei.webp: ![Nick\\nâŸ¨39âŸ© https://depot.dev/images/twitter/__steele.webp: ![Aidan W Steele\\nâŸ¨40âŸ© https://depot.dev/images/twitter/krishnanc_.webp: ![Krishnan Chandra\\nâŸ¨41âŸ© https://depot.dev/images/twitter/luislavena.webp: ![Luis Lavena\\nâŸ¨42âŸ© https://depot.dev/images/twitter/dan_manges.webp: ![Dan Manges\\nâŸ¨43âŸ© https://depot.dev/images/twitter/1587899798396735488.webp: Screenshot of a graph showing a sharp drop in build times after switching to Depot\\nâŸ¨44âŸ© https://depot.dev/images/twitter/tothemoonrepo.webp: ![moon\\nâŸ¨45âŸ© https://depot.dev/<https:/www.ycombinator.com/companies/depot>: Backed byY Combinator\\nâŸ¨46âŸ© https://depot.dev/</docs/security>: Security\\nâŸ¨47âŸ© https://depot.dev/</dockerfile-explorer>: Dockerfile Explorer\\nâŸ¨48âŸ© https://depot.dev/</drop-week>: Drop Week\\nâŸ¨49âŸ© https://depot.dev/<https:/depot.ai>: depot.ai\\nâŸ¨50âŸ© https://depot.dev/</github-actions-price-calculator>: GitHub Actions Price Calculator\\nâŸ¨51âŸ© https://depot.dev/</help>: Support\\nâŸ¨52âŸ© https://depot.dev/<https:/discord.gg/MMPqYSgDCg>: Discord 70 online\\nâŸ¨53âŸ© https://depot.dev/<https:/status.depot.dev>: System Status \\nâŸ¨54âŸ© https://depot.dev/</about>: About\\nâŸ¨55âŸ© https://depot.dev/</changelog>: Changelog \\nâŸ¨56âŸ© https://depot.dev/</about/brand-assets>: Brand Assets\\nâŸ¨57âŸ© https://depot.dev/</terms-of-service>: Terms of Service\\nâŸ¨58âŸ© https://depot.dev/</privacy-policy>: Privacy Policy\\nâŸ¨59âŸ© https://depot.dev/<https:/github.com/depot>: Depot GitHub account\\nâŸ¨60âŸ© https://depot.dev/<https:/twitter.com/depotdev>: Depot Twitter account\\nâŸ¨61âŸ© https://depot.dev/<https:/www.linkedin.com/company/depot-technologies>: Depot LinkedIn account\\n' fit_markdown='' fit_html=''",
  "generated_description": "**Depot: Building Better and Faster**\n\nFounded in 2022 by Kyle and Jacob, Depot is a company on a mission to \"Build faster. Waste less time.\" They identified a significant bottleneck in container build tooling and CI systems while working together as engineersâ€”turning their frustration into a solution.\n\nDepot is a build acceleration platform that turbocharges Docker container builds and GitHub Actions workflows, achieving speeds up to **40 times faster**. Their clients, including **PostHog**, **Wistia**, **Appsmith**, and **Secoda**, collectively save tens of hours of build time daily.\n\n### Key Offerings\n1. **Remote Container Builds**: Depot lets developers replace `docker build` with `depot build`, supporting Intel and Arm images with features like automatic layer caching. This seamless integration works with existing CI providers, helping teams significantly speed up their build processes.\n\n2. **GitHub Actions Runners**: Their specialized GitHub Actions runners deliver the same speed as Depot's regular services but at **half the cost of GitHub-hosted runners**. Developers just change the `runs-on` label in their workflow to make the switch.\n\n3. **Depot Cache**: This tool enhances builds for various systems like Bazel and Gradle, providing distributed remote caching that integrates across teamsâ€”even in local development environments.\n\nDepot has a small but mighty team of five based in **Montpellier, France**. As part of **Y Combinator's Batch W23**, they are on the fast track to shaping up the developer tooling landscape.\n\n### Why Depot?\nWith **live benchmarks** showcasing time savings such as building Netflixâ€™s dispatch in just 2 minutes and 36 seconds compared to 5 minutes and 1 second without it, it's clear that Depot isn't just a convenience; it's a game changer.\n\n### Visit Depot\nIf youâ€™re looking to cut down your build times and waste less time in the process, check them out at [depot.dev](https://depot.dev) and see firsthand how they can help your engineering team operate at lightning speed."
}