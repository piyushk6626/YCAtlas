{
  "links": "https://www.ycombinator.com/companies/ion-design",
  "name": "ion design",
  "headline": "Your front end team in a box - Prompt to code & Figma to code",
  "batch": "W24",
  "description": "ion design is re-imagining how front end works.\r\n\nFor early stage companies, ion allows you to describe a UI in text & get react code that’s tailor-made to your business. ion understands your design system and codebase to generate designs that are beautiful and code that’s easy to work with.\r\n\nOnce you've scaled and hired a designer, ion offers a pipeline that automatically converts Figma designs into clean React code that's tailor-fitted to your codebase. We re-use your existing components and variables from your codebase in our generations and can automatically generate PRs and merge conflicts from Figma.",
  "activity_status": "Active",
  "website": "https://www.ion.design/",
  "founded_date": 2023.0,
  "team_size": 2.0,
  "location": "San Francisco",
  "group_partner": "Dalton Caldwell",
  "group_partner_yc": "https://www.ycombinator.com/people/dalton-caldwell",
  "company_linkedin": null,
  "company_twitter": null,
  "tags": "industry:artificial-intelligence; industry:developer-tools; industry:design-tools; industry:web-development; location:san-francisco-bay-area",
  "founders": [
    {
      "name": "Samraaj Bath, Founder",
      "description": "Samraaj is the co-founder and CEO of ion design. Samraaj is a 2x YC founder and was previously a CTO, a product manager at an early stage startup, a design team manager, a full stack engineer. He's committed to making it easier to build beautiful products.\n\nSamraaj also previously founded an artisan ice cream company, bootstrapped a birthday wishing business, danced professionally, and rebuilt a 1981 motorcycle.",
      "linkedin": "https://linkedin.com/in/samraajbath"
    },
    {
      "name": "Samuel Barnholdt, Founder",
      "description": "Fullstack engineer & startup enthusiast. Failed to become the next Swedish House Mafia and turned to coding. Currently making your engineering cycles shorter and your codebase more consistent, one generation at a time.",
      "linkedin": "https://linkedin.com/in/samuel-barnholdt-a480b3179"
    }
  ],
  "status": true,
  "markdown": "raw_markdown='[](https://www.ion.design/</>)[Blog](https://www.ion.design/</blog>)Contact us[Pricing](https://www.ion.design/</pricing>)\\n[Get started](https://www.ion.design/<https:/app.ion.design/>)[Get started](https://www.ion.design/<https:/app.ion.design/>)\\nBacked by Y Combinator\\n#  Turn Designers into Design Engineers.\\nUse AI to turn your Figma designs into code. Tailor made for your design system and codebase.\\n[Start Shipping FasterStart Shipping Faster](https://www.ion.design/<https:/app.ion.design/>)\\n![](https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/672e8dcbcfd0016abe572d00_Hero%20Code.avif)\\n```\\n1\\'use client\\';\\n2\\n3import { BarChart, DonutChart } from\"@tremor/react\";\\n4import React from\"react\";\\n5import {\\n6  createColumnHelper,\\n7  flexRender,\\n8  getCoreRowModel,\\n9  useReactTable,\\n10} from\"@tanstack/react-table\";\\n11import Badge from\"@/components/ion/Badge\";\\n12import {\\n13  ArrowDown,\\n14  ArrowsCounterClockwise,\\n15  Users,\\n16  Wallet,\\n17} from\"@phosphor-icons/react/dist/ssr\";\\n18import Button from\"@/components/ion/Button\";\\n19import clsx from\"clsx\";\\n20import Divider from\"@/components/ion/Divider\";\\n21import Checkbox from\"@/components/ion/Checkbox\";\\n22import Avatar from\"@/components/ion/Avatar\";\\n23\\n24exportfunctionHomepage() {\\n25const handleWithdraw = () => {\\n26// Handle withdraw action27console.log(\"Withdraw clicked\");\\n28  };\\n29\\n30const handleDeposit = () => {\\n31// Handle deposit action32console.log(\"Deposit clicked\");\\n33  };\\n34\\n35return (\\n36<divclassName=\"min-h-screen bg-neutral-50\">37<TopbarclassName=\"sticky top-0 z-50\" />38\\n39<MainContent>40<PageHeader41title=\"Overview\"42id=\"8474720274\"43onWithdraw={handleWithdraw}44onDeposit={handleDeposit}45        />46\\n47<WidgetGrid>48          {/* Main content area - spans full width */}\\n49<divclassName=\"col-span-12\">50<OverviewWidget />51</div>52\\n53          {/* Two-column layout for remaining widgets */}\\n54<divclassName=\"col-span-12 grid grid-cols-12 gap-5\">55            {/* Left column - Registration Widget */}\\n56<divclassName=\"col-span-6\">57<RegistrationWidget />58</div>59\\n60            {/* Right column - Finance and Transactions */}\\n61<divclassName=\"col-span-4 flex flex-col gap-5\">62<FinanceWidget />63<LatestTransactionsWidget />64</div>65\\n66            {/* Calendar Widget */}\\n67<divclassName=\"col-span-2\">68<CalendarWidgetscheduleData={scheduleData} />69</div>70</div>71</WidgetGrid>72</MainContent>73</div>74  );\\n75}\\n76\\n77Homepage.displayName = \"Homepage\";\\n78\\n79exportdefault Homepage;\\n80\\n81interface MainContentProps {\\n82children: React.ReactNode;\\n83  className?: string;\\n84}\\n85\\n86const MainContent = ({ children, className }: MainContentProps) => (\\n87<mainclassName={clsx(\"flex-1flexflex-colgap-5px-10py-5\", className)}>88    {children}\\n89</main>90);\\n91\\n92const WidgetGrid = ({ children }: { children: React.ReactNode }) => (\\n93<divclassName=\"flex-1 grid grid-cols-12 gap-5\">{children}</div>94);\\n95\\n96interface HeaderProps {\\n97title: string;\\n98  id: string;\\n99  onWithdraw: () =>void;\\n100  onDeposit: () =>void;\\n101}\\n102\\n103const PageHeader = ({ title, id, onWithdraw, onDeposit }: HeaderProps) => (\\n104<divclassName=\"flex justify-between items-center\">105<divclassName=\"flex items-center gap-2\">106<h1className=\"text-4xl font-medium text-neutral-900\">{title}</h1>107<Badgecolor=\"blue\"variant=\"soft\"className=\"text-xs\">108        ID: {id}\\n109<CopyclassName=\"h-3 w-3 ml-1\" />110</Badge>111</div>112<divclassName=\"flex items-center gap-3\">113<Buttonvariant=\"outline\"size=\"sm\"onClick={onWithdraw}>114<ArrowDownclassName=\"h-4 w-4 mr-2\" />115        Withdraw\\n116</Button>117<Buttonsize=\"sm\"onClick={onDeposit}>118<ArrowUpclassName=\"h-4 w-4 mr-2\" />119        Deposit\\n120</Button>121</div>122</div>123);\\n124\\n125interface TopbarProps {\\n126  className?: string;\\n127}\\n128\\n129type NavItem = {\\n130label: string;\\n131  icon: React.ReactNode;\\n132  isActive?: boolean;\\n133  hasDropdown?: boolean;\\n134};\\n135\\n136const NavButton = ({ item }: { item: NavItem }) => (\\n137<Button138variant=\"ghost\"139size=\"sm\"140className={clsx(141      \"gap-2font-medium\",\\n142item.isActive && \"bg-blue-50text-blue-700\",\\n143      !item.isActive && \"text-neutral-600\",\\n144    )}\\n145  >146    {item.icon}\\n147<span>{item.label}</span>148    {item.hasDropdown && <CaretDownclassName=\"h-4 w-4\" />}\\n149</Button>150);\\n151\\n152const ActionButton = ({\\n153  icon: Icon,\\n154  className,\\n155}: {\\n156  icon: React.ElementType;\\n157  className?: string;\\n158}) => (\\n159<Button160variant=\"ghost\"161color=\"neutral\"162className={clsx(\"text-neutral-600\", className)}\\n163  >164<IconclassName=\"h-5 w-5\" />165</Button>166);\\n167\\n168exportfunctionTopbar({ className }: TopbarProps) {\\n169return (\\n170<div171className={clsx(172        \"flexjustify-betweenitems-centerpx-10py-5\",\\n173        \"bg-whiteborder-bborder-neutral-200\",\\n174className,\\n175      )}\\n176    >177<divclassName=\"flex items-center gap-10\">178        {/* Logo */}\\n179<divclassName=\"flex items-center gap-2 text-2xl font-medium\">180<divclassName=\"h-10 w-10 bg-blue-600 rounded-lg flex items-center justify-center text-white\">181            Sx\\n182</div>183<span>SparX</span>184</div>185\\n186        {/* Navigation */}\\n187<navclassName=\"flex items-center gap-1\">188          {navItems.map((item, index) => (\\n189<NavButtonkey={index}item={item} />190          ))}\\n191</nav>192</div>193\\n194<divclassName=\"flex items-center gap-4\">195        {/* User Profile */}\\n196<Buttonvariant=\"outline\"className=\"gap-2 font-medium\">197<AvatarclassName=\"h-8 w-8\" />198<span>John Doe</span>199<CaretDownclassName=\"h-4 w-4\" />200</Button>201</div>202</div>203  );\\n204}\\n205\\n206type OverviewStatCardData = {\\n207title: string;\\n208  icon: React.ReactNode;\\n209  value: string;\\n210  change?: string;\\n211  valueColor?: string;\\n212};\\n213\\n214interface OverviewWidgetProps {\\n215  className?: string;\\n216}\\n217\\n218const OverviewStatsCard = ({ data }: { data: OverviewStatCardData }) => (\\n219<div220className={clsx(221      \"flexflex-colgap-6p-4rounded-md\",\\n222      \"bg-whiteborderborder-neutral-200\",\\n223      \"shadow-sm\",\\n224    )}\\n225  >226<divclassName=\"flex items-center justify-between text-base text-neutral-600\">227<span>{data.title}</span>228      {data.icon}\\n229</div>230\\n231<divclassName=\"flex items-end gap-4\">232<span233className={clsx(234          \"text-3xlleading-10\",\\n235data.valueColor || \"text-neutral-900\",\\n236        )}\\n237      >238        {data.value}\\n239</span>240      {data.change && (\\n241<div242className={clsx(243            \"px-2py-0.5rounded-fulltext-xs\",\\n244            \"bg-green-50text-green-900\",\\n245            \"borderborder-green-200\",\\n246          )}\\n247        >248          {data.change}\\n249</div>250      )}\\n251</div>252</div>253);\\n254\\n255exportfunctionOverviewWidget({ className }: OverviewWidgetProps) {\\n256return (\\n257<div258className={clsx(259        \"flexflex-colgap-4p-4rounded-lg\",\\n260        \"borderborder-neutral-200shadow-sm\",\\n261        \"bg-gradient-to-brfrom-blue-50to-white\",\\n262className,\\n263      )}\\n264    >265<divclassName=\"flex items-center justify-between\">266<h2className=\"text-base font-medium py-1\">Overview</h2>267<Buttonvariant=\"outline\"size=\"sm\">268          Today\\n269<CaretDownclassName=\"h-4 w-4 ml-1\" />270</Button>271</div>272\\n273<Divider />274\\n275<divclassName=\"grid grid-cols-4 gap-4\">276        {overviewData.map((data, index) => (\\n277<OverviewStatsCardkey={index}data={data} />278        ))}\\n279</div>280</div>281  );\\n282}\\n283\\n284type AppointmentType = {\\n285time: string;\\n286  userId: string;\\n287  type: \"calendar\" | \"phone\";\\n288  hasReminder?: boolean;\\n289};\\n290\\n291type DaySchedule = {\\n292date: string;\\n293  dayName: string;\\n294  appointments: AppointmentType[];\\n295};\\n296\\n297interface CalendarWidgetProps {\\n298  className?: string;\\n299  scheduleData: DaySchedule[];\\n300  selectedDateRange?: string;\\n301  onAddFollowUp?: () =>void;\\n302  onSearch?: () =>void;\\n303  onDateRangeSelect?: () =>void;\\n304}\\n305\\n306const AppointmentIcon = ({ type }: { type: \"calendar\" | \"phone\" }) => (\\n307<divclassName=\"flex items-center gap-2.5 p-1 rounded-full border border-neutral-200 shadow-sm\">308    {type === \"calendar\" ? (\\n309<CalendarclassName=\"h-4 w-4\" />310    ) : (\\n311<PhoneclassName=\"h-4 w-4\" />312    )}\\n313</div>314);\\n315\\n316const UserBadge = ({ userId }: { userId: string }) => (\\n317<divclassName=\"flex items-center gap-1 px-1.5 py-1 rounded-full border border-neutral-200 shadow-sm text-xs text-neutral-600\">318<UserclassName=\"h-4 w-4\" />319<span>{userId}</span>320</div>321);\\n322\\n323const ReminderBadge = () => (\\n324<divclassName=\"flex items-center p-1 rounded-sm bg-blue-50 border border-blue-200\">325<BellclassName=\"h-4 w-4 text-blue-500\" />326</div>327);\\n328\\n329const AppointmentRow = ({ appointment }: { appointment: AppointmentType }) => (\\n330<divclassName=\"flex justify-between items-center py-2\">331<divclassName=\"flex items-center gap-2\">332<Checkbox />333<spanclassName=\"text-xs\">{appointment.time}</span>334</div>335<divclassName=\"flex items-center gap-2\">336<divclassName=\"flex items-center gap-2 p-2\">337<AppointmentIcontype={appointment.type} />338<UserBadgeuserId={appointment.userId} />339</div>340      {appointment.hasReminder && <ReminderBadge />}\\n341</div>342</div>343);\\n344\\n345const DaySection = ({ day }: { day: DaySchedule }) => (\\n346<divclassName=\"flex flex-col gap-1\">347<divclassName=\"flex justify-between items-center p-3 bg-neutral-50 rounded-sm\">348<spanclassName=\"text-sm font-medium\">{day.dayName}</span>349<spanclassName=\"text-xs text-neutral-500\">{day.date}</span>350</div>351<divclassName=\"flex flex-col\">352      {day.appointments.map((appointment, index) => (\\n353<AppointmentRowkey={index}appointment={appointment} />354      ))}\\n355</div>356</div>357);\\n358\\n359exportfunctionCalendarWidget({\\n360  className,\\n361  scheduleData,\\n362  selectedDateRange = \"May 26 - May 30\",\\n363  onAddFollowUp,\\n364  onSearch,\\n365  onDateRangeSelect,\\n366}: CalendarWidgetProps) {\\n367return (\\n368<div369className={clsx(370        \"bg-backgroundflexflex-colgap-3rounded-lgborderborder-neutral-200shadow-sm\",\\n371className,\\n372      )}\\n373    >374<divclassName=\"flex justify-between items-center p-4\">375<divclassName=\"flex items-center gap-2 text-base font-medium\">376<Calendar />377<span>Calendar</span>378</div>379<divclassName=\"flex items-center gap-2\">380<Button381variant=\"outline\"382color=\"neutral\"383onClick={onSearch}384          >385<MagnifyingGlassclassName=\"h-4 w-4\" />386</Button>387<Buttonvariant=\"outline\"onClick={onDateRangeSelect}>388<CalendarclassName=\"h-4 w-4 mr-2\" />389            {selectedDateRange}\\n390</Button>391</div>392</div>393\\n394<Divider />395\\n396<divclassName=\"flex flex-col gap-4 p-4\">397        {scheduleData.map((day, index) => (\\n398<DaySectionkey={index}day={day} />399        ))}\\n400</div>401\\n402<Button403variant=\"ghost\"404className=\"mx-4 mb-4 bg-primary-50 text-primary hover:bg-primary-100\"405onClick={onAddFollowUp}406      >407<PlusclassName=\"h-4 w-4 mr-2\" />408        Add follow up\\n409</Button>410</div>411  );\\n412}\\n413\\n414type Transaction = {\\n415id: string;\\n416  type: \"deposit\" | \"trade\";\\n417  description: string;\\n418  amount: {\\n419currency: \"USD\" | \"EUR\";\\n420    value: number;\\n421  };\\n422  date: string;\\n423  time: string;\\n424  status: \"completed\";\\n425};\\n426\\n427interface LatestTransactionsWidgetProps {\\n428  className?: string;\\n429}\\n430\\n431const columnHelper = createColumnHelper<Transaction>();\\n432\\n433const columns = [\\n434  columnHelper.accessor(\"id\", {\\n435header: \"#\",\\n436cell: (info) => info.getValue(),\\n437  }),\\n438  columnHelper.accessor(\"description\", {\\n439header: \"Type\",\\n440cell: (info) => (\\n441<divclassName=\"flex items-center gap-1\">442        {info.row.original.type === \"deposit\" ? (\\n443<ArrowUpclassName=\"h-4 w-4 text-green-500\" />444        ) : (\\n445<ArrowDownclassName=\"h-4 w-4 text-neutral-500\" />446        )}\\n447<spanclassName=\"font-medium\">{info.getValue()}</span>448</div>449    ),\\n450  }),\\n451  columnHelper.accessor(\"amount\", {\\n452header: \"Amount\",\\n453cell: (info) => (\\n454<divclassName=\"flex items-center gap-1\">455<spanclassName=\"font-medium\">456          {info.getValue().currency}{\" \"}\\n457          {info.getValue().value.toFixed(2)}\\n458</span>459<CheckCircleclassName=\"h-4 w-4 text-green-500\" />460</div>461    ),\\n462  }),\\n463  columnHelper.accessor(\"date\", {\\n464header: \"Date\",\\n465cell: (info) => (\\n466<divclassName=\"flex flex-col\">467<span>{info.getValue()}</span>468<spanclassName=\"text-neutral-500\">469          {info.row.original.time}\\n470</span>471</div>472    ),\\n473  }),\\n474];\\n475\\n476exportfunctionLatestTransactionsWidget({\\n477  className,\\n478}: LatestTransactionsWidgetProps) {\\n479const table = useReactTable({\\n480data: transactionData,\\n481    columns,\\n482getCoreRowModel: getCoreRowModel(),\\n483  });\\n484\\n485return (\\n486<div487className={clsx(488        \"flexflex-colgap-3p-4rounded-smborderborder-neutral-200\",\\n489        \"bg-gradient-to-brfrom-blue-50to-white\",\\n490className,\\n491      )}\\n492    >493<divclassName=\"flex items-center justify-between\">494<divclassName=\"flex items-center gap-2 text-base font-medium\">495<ArrowsInCardinalclassName=\"h-6 w-6\" />496<span>Latest Transactions</span>497</div>498<divclassName=\"flex items-center gap-2\">499<Buttonvariant=\"outline\"color=\"neutral\">500<ListclassName=\"h-5 w-5\" />501</Button>502<Buttonvariant=\"outline\"color=\"neutral\">503<ArrowsCounterClockwiseclassName=\"h-5 w-5\" />504</Button>505</div>506</div>507\\n508<Divider />509\\n510<divclassName=\"rounded-sm overflow-hidden\">511<tableclassName=\"w-full\">512<theadclassName=\"bg-neutral-50\">513            {table.getHeaderGroups().map((headerGroup) => (\\n514<trkey={headerGroup.id}>515                {headerGroup.headers.map((header) => (\\n516<th517key={header.id}518className=\"px-3 py-2 text-sm text-neutral-600 text-left font-medium\"519                  >520                    {header.isPlaceholder\\n521                      ? null\\n522                      : flexRender(\\n523                         header.column.columnDef\\n524                           .header,\\n525                         header.getContext(),\\n526                       )}\\n527</th>528                ))}\\n529</tr>530            ))}\\n531</thead>532<tbody>533            {table.getRowModel().rows.map((row, i) => (\\n534<tr535key={row.id}536className={clsx(537                  \"hover:bg-neutral-50\",\\n538i % 2 === 1 && \"bg-neutral-50/50\",\\n539                )}\\n540              >541                {row.getVisibleCells().map((cell) => (\\n542<td543key={cell.id}544className=\"px-3 py-4 text-xs\"545                  >546                    {flexRender(\\n547                      cell.column.columnDef.cell,\\n548                      cell.getContext(),\\n549                    )}\\n550</td>551                ))}\\n552</tr>553            ))}\\n554</tbody>555</table>556</div>557</div>558  );\\n559}\\n560type FinanceData = {\\n561name: string;\\n562  value: number;\\n563  color: string;\\n564};\\n565\\n566interface FinanceWidgetProps {\\n567  className?: string;\\n568}\\n569\\n570const colorMap: Record<string, string> = {\\n571\"Deposit PSP3\": \"bg-emerald-500\",\\n572\"Deposit PSP2\": \"bg-indigo-500\",\\n573\"Deposit PSP1\": \"bg-sky-500\",\\n574Withdrawal: \"bg-red-500\",\\n575};\\n576\\n577const StatCard = ({\\n578  title,\\n579  amount,\\n580  color,\\n581}: {\\n582  title: string;\\n583  amount: number;\\n584  color: string;\\n585}) => (\\n586<divclassName=\"flex flex-col items-center gap-3 px-4\">587<div588className={clsx(589        \"w-8h-8rounded-fullflexitems-centerjustify-center\",\\n590        `bg-${color}/10`,\\n591      )}\\n592    >593<divclassName={clsx(\"w-2h-2rounded-full\", colorMap[title])} />594</div>595<divclassName=\"flex flex-col items-center gap-1\">596<spanclassName=\"text-xs text-neutral-600\">{title}</span>597<spanclassName=\"text-sm font-medium\">598        ${amount.toLocaleString(\"en-US\", { minimumFractionDigits: 2 })}\\n599</span>600</div>601</div>602);\\n603\\n604exportfunctionFinanceWidget({ className }: FinanceWidgetProps) {\\n605const totalAmount = financeData.reduce((sum, item) => sum + item.value, 0);\\n606\\n607return (\\n608<div609className={clsx(610        \"flexflex-colgap-4p-4rounded-lgborderborder-neutral-200shadow-sm\",\\n611        \"bg-gradient-to-brfrom-green-50to-white\",\\n612className,\\n613      )}\\n614    >615<divclassName=\"flex items-center justify-between\">616<divclassName=\"flex items-center gap-2 text-base font-medium\">617<PinwheelclassName=\"h-6 w-6\" />618<span>Finances distribution</span>619</div>620<Buttonvariant=\"outline\"size=\"sm\">621          Last Week\\n622<CaretDownclassName=\"h-4 w-4 ml-1\" />623</Button>624</div>625\\n626<Divider />627\\n628<divclassName=\"relative flex flex-col items-center justify-center\">629        {/* Center text overlay */}\\n630<divclassName=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 z-10 flex flex-col items-center\">631<spanclassName=\"text-xs font-medium text-neutral-600 uppercase\">632            Overall Transitions\\n633</span>634<spanclassName=\"text-2xl font-medium mt-2\">635            $\\n636            {totalAmount.toLocaleString(\"en-US\", {\\n637              minimumFractionDigits: 2,\\n638            })}\\n639</span>640</div>641\\n642        {/* Donut Chart */}\\n643<DonutChart644data={financeData}645category=\"value\"646index=\"name\"647valueFormatter={(number) =>648            `$${Intl.NumberFormat(\"us\").format(number).toString()}`\\n649          }\\n650          colors={[\"emerald\", \"indigo\", \"sky\", \"red\"]}\\n651          showAnimation={true}\\n652          className=\"h-[248px] w-[248px]\"\\n653          showLabel={false}\\n654        />\\n655</div>656\\n657<Divider />658\\n659<divclassName=\"grid grid-cols-4 gap-2\">660        {financeData.map((item, index) => (\\n661<React.Fragmentkey={item.name}>662<StatCard663title={item.name}664amount={item.value}665color={item.color}666            />667            {index < financeData.length - 1 && (\\n668<Divider669orientation=\"vertical\"670className=\"h-[84px]\"671              />672            )}\\n673</React.Fragment>674        ))}\\n675</div>676</div>677  );\\n678}\\n679\\n680type DistributionData = {\\n681country: string;\\n682  value: number;\\n683  color: string;\\n684};\\n685\\n686type RegistrationRecord = {\\n687id: string;\\n688  country: string;\\n689  name: string;\\n690  status: \"active\" | \"pending\" | \"waiting\";\\n691  date: string;\\n692  time: string;\\n693  hasExternalLink?: boolean;\\n694};\\n695\\n696interface RegistrationWidgetProps {\\n697  className?: string;\\n698}\\n699\\n700const StatusIcon = ({ status }: { status: RegistrationRecord[\"status\"] }) => {\\n701const statusColors = {\\n702active: \"text-blue-500 bg-blue-50\",\\n703pending: \"text-green-500 bg-green-50\",\\n704waiting: \"text-amber-500 bg-amber-50\",\\n705  };\\n706\\n707return (\\n708<divclassName={clsx(\"p-2rounded-full\", statusColors[status])}>709<UserclassName=\"h-4 w-4\" />710</div>711  );\\n712};\\n713\\n714const registrationColumnHelper = createColumnHelper<RegistrationRecord>();\\n715\\n716const registrationColumns = [\\n717  registrationColumnHelper.accessor(\"id\", {\\n718header: \"#\",\\n719cell: (info) => info.getValue(),\\n720  }),\\n721  registrationColumnHelper.accessor(\"country\", {\\n722header: \"Country\",\\n723cell: (info) =><spanclassName=\"font-medium\">{info.getValue()}</span>,\\n724  }),\\n725  registrationColumnHelper.accessor(\"name\", {\\n726header: \"Name\",\\n727cell: (info) => info.getValue(),\\n728  }),\\n729  registrationColumnHelper.accessor(\"status\", {\\n730header: \"Status\",\\n731cell: (info) => (\\n732<divclassName=\"flex gap-2\">733<StatusIconstatus={info.getValue()} />734        {info.row.original.hasExternalLink && (\\n735<divclassName=\"p-2 rounded-full text-blue-500 bg-blue-50\">736<LinkclassName=\"h-4 w-4\" />737</div>738        )}\\n739</div>740    ),\\n741  }),\\n742  registrationColumnHelper.accessor(\"date\", {\\n743header: \"Date\",\\n744cell: (info) => (\\n745<divclassName=\"flex flex-col\">746<span>{info.getValue()}</span>747<spanclassName=\"text-neutral-400\">748          {info.row.original.time}\\n749</span>750</div>751    ),\\n752  }),\\n753];\\n754\\n755exportfunctionRegistrationWidget({ className }: RegistrationWidgetProps) {\\n756const table = useReactTable({\\n757data: registrationData,\\n758columns: registrationColumns,\\n759getCoreRowModel: getCoreRowModel(),\\n760  });\\n761\\n762return (\\n763<div764className={clsx(765        \"flexflex-colgap-4p-4rounded-lg\",\\n766        \"borderborder-neutral-200shadow-sm\",\\n767        \"bg-gradient-to-brfrom-indigo-50to-white\",\\n768className,\\n769      )}\\n770    >771<divclassName=\"flex items-center justify-between\">772<divclassName=\"flex items-center gap-2 text-base font-medium\">773<UserPlusclassName=\"h-6 w-6\" />774<span>Registration Distribution</span>775</div>776<Buttonvariant=\"outline\"size=\"sm\">777          Last week\\n778<CaretDownclassName=\"h-4 w-4 ml-1\" />779</Button>780</div>781\\n782<Divider />783\\n784<divclassName=\"flex flex-col gap-4\">785<BarChart786data={distributionData}787index=\"country\"788categories={[\"value\"]}\\n789colors={[\"blue\"]}\\n790showGridLines={false}791startEndOnly={true}792showAnimation={true}793valueFormatter={(value) => `${value}%`}\\n794          className=\"h-64\"\\n795        />\\n796\\n797<divclassName=\"bg-white rounded-sm border border-neutral-200 p-3\">798<divclassName=\"flex items-center justify-between mb-3\">799<h3className=\"text-base font-medium\">800              Recent Registration\\n801</h3>802<divclassName=\"flex items-center gap-2\">803<Buttonvariant=\"outline\"color=\"neutral\">804<MagnifyingGlassclassName=\"h-5 w-5\" />805</Button>806<Buttonvariant=\"outline\"size=\"sm\">807                See All\\n808</Button>809</div>810</div>811\\n812<divclassName=\"rounded-sm overflow-hidden\">813<tableclassName=\"w-full\">814<theadclassName=\"bg-neutral-50\">815                {table.getHeaderGroups().map((headerGroup) => (\\n816<trkey={headerGroup.id}>817                    {headerGroup.headers.map((header) => (\\n818<th819key={header.id}820className=\"px-3 py-2 text-sm text-neutral-600 text-left\"821                      >822                        {header.isPlaceholder\\n823                          ? null\\n824                          : flexRender(\\n825                             header.column\\n826                               .columnDef.header,\\n827                             header.getContext(),\\n828                           )}\\n829</th>830                    ))}\\n831</tr>832                ))}\\n833</thead>834<tbody>835                {table.getRowModel().rows.map((row, i) => (\\n836<tr837key={row.id}838className={clsx(839                      \"hover:bg-neutral-50\",\\n840i % 2 === 1 && \"bg-neutral-50/50\",\\n841                    )}\\n842                  >843                    {row.getVisibleCells().map((cell) => (\\n844<td845key={cell.id}846className=\"px-3 py-4 text-xs\"847                      >848                        {flexRender(\\n849                          cell.column.columnDef.cell,\\n850                          cell.getContext(),\\n851                        )}\\n852</td>853                    ))}\\n854</tr>855                ))}\\n856</tbody>857</table>858</div>859</div>860</div>861</div>862  );\\n863}\\n864\\n865const distributionData: DistributionData[] = [\\n866  { country: \"USA\", value: 80, color: \"blue-600\" },\\n867  { country: \"UAE\", value: 40, color: \"sky-400\" },\\n868  { country: \"UK\", value: 32, color: \"purple-500\" },\\n869  { country: \"Brazil\", value: 28, color: \"indigo-900\" },\\n870  { country: \"Germany\", value: 20, color: \"amber-500\" },\\n871  { country: \"Spain\", value: 12, color: \"cyan-900\" },\\n872  { country: \"Portugal\", value: 8, color: \"emerald-500\" },\\n873  { country: \"KSA\", value: 4, color: \"violet-200\" },\\n874];\\n875\\n876const navItems: NavItem[] = [\\n877  {\\n878label: \"Dashboard\",\\n879icon: <LayoutclassName=\"h-5 w-5\" />,\\n880    isActive: true,\\n881  },\\n882  {\\n883label: \"Clients\",\\n884icon: <UsersclassName=\"h-5 w-5\" />,\\n885  },\\n886  {\\n887label: \"Pending\",\\n888icon: <BellclassName=\"h-5 w-5\" />,\\n889    hasDropdown: true,\\n890  },\\n891  {\\n892label: \"Finances\",\\n893icon: <WalletclassName=\"h-5 w-5\" />,\\n894  },\\n895  {\\n896label: \"Leads\",\\n897icon: <PhoneclassName=\"h-5 w-5\" />,\\n898  },\\n899  {\\n900label: \"Management\",\\n901icon: <BriefcaseclassName=\"h-5 w-5\" />,\\n902  },\\n903  {\\n904label: \"Settings\",\\n905icon: <GearclassName=\"h-5 w-5\" />,\\n906    hasDropdown: true,\\n907  },\\n908];\\n909\\n910const registrationData: RegistrationRecord[] = [\\n911  {\\n912id: \"7009\",\\n913country: \"UAE\",\\n914name: \"John Doe\",\\n915status: \"active\",\\n916date: \"12/05/2024\",\\n917time: \"14:24\",\\n918  },\\n919  {\\n920id: \"7009\",\\n921country: \"Germany\",\\n922name: \"Ahmed Ayad\",\\n923status: \"pending\",\\n924date: \"12/05/2024\",\\n925time: \"14:24\",\\n926  },\\n927  {\\n928id: \"7009\",\\n929country: \"Spain\",\\n930name: \"Salim Ahmed\",\\n931status: \"waiting\",\\n932date: \"12/05/2024\",\\n933time: \"14:24\",\\n934hasExternalLink: true,\\n935  },\\n936  {\\n937id: \"7009\",\\n938country: \"Switzerland\",\\n939name: \"Damian Dark\",\\n940status: \"active\",\\n941date: \"12/05/2024\",\\n942time: \"14:24\",\\n943  },\\n944];\\n945\\n946const overviewData: OverviewStatCardData[] = [\\n947  {\\n948title: \"Clients\",\\n949icon: <UsersclassName=\"h-5 w-5 text-neutral-600\" />,\\n950    value: \"1,532\",\\n951change: \"+5% last mth\",\\n952  },\\n953  {\\n954title: \"Registration\",\\n955icon: <UserPlusclassName=\"h-5 w-5 text-neutral-600\" />,\\n956    value: \"25\",\\n957change: \"+2% last mth\",\\n958  },\\n959  {\\n960title: \"Deposits\",\\n961icon: <ArrowUpclassName=\"h-5 w-5 text-neutral-600\" />,\\n962    value: \"+$25,000\",\\n963valueColor: \"text-green-700\",\\n964  },\\n965  {\\n966title: \"Withdraw\",\\n967icon: <ArrowDownclassName=\"h-5 w-5 text-neutral-600\" />,\\n968    value: \"-$5,000\",\\n969valueColor: \"text-red-700\",\\n970  },\\n971];\\n972\\n973const financeData: FinanceData[] = [\\n974  {\\n975name: \"Deposit PSP3\",\\n976value: 95000,\\n977color: \"emerald-500\",\\n978  },\\n979  {\\n980name: \"Deposit PSP2\",\\n981value: 30000,\\n982color: \"indigo-500\",\\n983  },\\n984  {\\n985name: \"Deposit PSP1\",\\n986value: 25000,\\n987color: \"sky-500\",\\n988  },\\n989  {\\n990name: \"Withdrawal\",\\n991value: 50000,\\n992color: \"red-500\",\\n993  },\\n994];\\n995\\n996const transactionData: Transaction[] = [\\n997  {\\n998id: \"7009\",\\n999type: \"deposit\",\\n1000description: \"Deposit cashier\",\\n1001amount: { currency: \"EUR\", value: 2.0 },\\n1002date: \"12/05/2024\",\\n1003time: \"14:24\",\\n1004status: \"completed\",\\n1005  },\\n1006  {\\n1007id: \"7009\",\\n1008type: \"deposit\",\\n1009description: \"Deposit cashier\",\\n1010amount: { currency: \"USD\", value: 980.0 },\\n1011date: \"12/05/2024\",\\n1012time: \"14:24\",\\n1013status: \"completed\",\\n1014  },\\n1015  {\\n1016id: \"7009\",\\n1017type: \"deposit\",\\n1018description: \"Deposit cashier card\",\\n1019amount: { currency: \"USD\", value: 80.0 },\\n1020date: \"12/05/2024\",\\n1021time: \"14:24\",\\n1022status: \"completed\",\\n1023  },\\n1024  {\\n1025id: \"7009\",\\n1026type: \"trade\",\\n1027description: \"Trade adjustment\",\\n1028amount: { currency: \"USD\", value: 10.0 },\\n1029date: \"12/05/2024\",\\n1030time: \"14:24\",\\n1031status: \"completed\",\\n1032  },\\n1033];\\n1034\\n1035const scheduleData: DaySchedule[] = [\\n1036  {\\n1037date: \"26th May 2024\",\\n1038dayName: \"Sunday\",\\n1039appointments: [\\n1040      {\\n1041time: \"15:08 - 15:38\",\\n1042userId: \"7004\",\\n1043type: \"calendar\",\\n1044hasReminder: true,\\n1045      },\\n1046      {\\n1047time: \"15:08 - 15:38\",\\n1048userId: \"7004\",\\n1049type: \"phone\",\\n1050hasReminder: true,\\n1051      },\\n1052      {\\n1053time: \"15:08 - 15:38\",\\n1054userId: \"7004\",\\n1055type: \"calendar\",\\n1056hasReminder: true,\\n1057      },\\n1058    ],\\n1059  },\\n1060  {\\n1061date: \"27th May 2024\",\\n1062dayName: \"Monday\",\\n1063appointments: [\\n1064      {\\n1065time: \"15:08 - 15:38\",\\n1066userId: \"7004\",\\n1067type: \"calendar\",\\n1068hasReminder: true,\\n1069      },\\n1070      {\\n1071time: \"15:08 - 15:38\",\\n1072userId: \"7004\",\\n1073type: \"calendar\",\\n1074hasReminder: true,\\n1075      },\\n1076    ],\\n1077  },\\n1078  {\\n1079date: \"28th May 2024\",\\n1080dayName: \"Tuesday\",\\n1081appointments: [\\n1082      {\\n1083time: \"15:08 - 15:38\",\\n1084userId: \"7004\",\\n1085type: \"calendar\",\\n1086hasReminder: true,\\n1087      },\\n1088      {\\n1089time: \"15:08 - 15:38\",\\n1090userId: \"7004\",\\n1091type: \"calendar\",\\n1092hasReminder: true,\\n1093      },\\n1094    ],\\n1095  },\\n1096  {\\n1097date: \"29th May 2024\",\\n1098dayName: \"Wednesday\",\\n1099appointments: [\\n1100      {\\n1101time: \"15:08 - 15:38\",\\n1102userId: \"7004\",\\n1103type: \"calendar\",\\n1104hasReminder: true,\\n1105      },\\n1106      {\\n1107time: \"15:08 - 15:38\",\\n1108userId: \"7004\",\\n1109type: \"calendar\",\\n1110hasReminder: true,\\n1111      },\\n1112    ],\\n1113  },\\n1114  {\\n1115date: \"30th May 2024\",\\n1116dayName: \"Thursday\",\\n1117appointments: [\\n1118      {\\n1119time: \"15:08 - 15:38\",\\n1120userId: \"7004\",\\n1121type: \"calendar\",\\n1122hasReminder: true,\\n1123      },\\n1124      {\\n1125time: \"15:08 - 15:38\",\\n1126userId: \"7004\",\\n1127type: \"calendar\",\\n1128hasReminder: true,\\n1129      },\\n1130    ],\\n1131  },\\n1132];\\n```\\n\\n![](https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/672e8c654a7f0e30a2f47c28_Homepage%20asset%20autolayout.avif)\\n[![](https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/672f18b009fe44d51632cb52_lightbox%20thumbnail.avif)ionize your Figma designs Learn in just 3 minutes](https://www.ion.design/<#>)\\n## Trusted by the world\\'s leading innovative teams\\n![](https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/673d024fcfa155293b8b6374_ion%20-%20Landed.avif)![](https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/673d0250d592f89503a7f246_ion%20-%20Numi.svg)![](https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/673d0250ff3eb6aeaea5bbc4_ion%20-%20Jumpshot.avif)![](https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/673d02503cd5d99903f1ebcd_ion%20-%20honeycomb.svg)![](https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/673d024f1feb08513f19b5b6_ion%20-%20NX.avif)\\nSomewhere\\nalong\\nthe\\nway,\\nturning\\ndesigns\\ninto\\ncode\\ngot\\ntoo\\ncomplicated.\\nWe\\nreimagined\\nit.\\nWith\\nion,\\ndesigners\\ntake\\nprojects\\nfurther\\nand\\nfree\\nup\\nengineers\\nto\\nfocus\\non\\nthe\\nbig\\nstuff.\\n## Build your frontend in minutes, not weeks\\nWhatever you\\'re designing, ion will turn it into clean, industry-leading code. Fast.\\n[1Design in FigmaYou can use your existing design system and tokens to create designs where you already feel comfortable.](https://www.ion.design/<#w-tabs-0-data-w-pane-0>)[2Generate Code with ionion is connected to your company codebase. It’ll automatically use your components, style, and structure.](https://www.ion.design/<#w-tabs-0-data-w-pane-1>)[3Pull, integrate, and ShipCode connects directly to your developers’ github branches, so they can simply pull, integrate, and ship!](https://www.ion.design/<#w-tabs-0-data-w-pane-2>)\\n### Design in Figma\\nYou can use your existing design system and tokens to create designs where you already feel comfortable.\\n![](https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/672f4ba7782ca88f7fe94f29_Gradient%20BG%20Process.avif)\\n### Generate Code with ion\\nion is connected to your company codebase. It’ll automatically use your components, style, and structure.\\n![](https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/672f4ba7782ca88f7fe94f29_Gradient%20BG%20Process.avif)\\n### Pull, integrate, and Ship\\nCode connects directly to your developers’ github branches, so they can simply pull, integrate, and ship!\\n![](https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/672f4ba7782ca88f7fe94f29_Gradient%20BG%20Process.avif)\\n## Save 10+ hours per week\\nDevelopers shouldn’t waste hours on styling. Let ion take care of the mundane for you.\\n### Understands your Codebase\\nion syncs with your existing libraries and components. No more tweaking or adjusting – just production-ready code straight from Figma.\\n```\\n1\"use client\";\\n2\\n3import Avatar from\"@/components/Avatar\";\\n4import Button from\"@/components/Button\";\\n5import Divider from\"@/components/Divider\";\\n6import Input from\"@/components/Input\";\\n7import Textarea from\"@/components/Textarea\";\\n8\\n9functionContactInformationCard() {\\n10const [address, setAddress] = useState(\"\");\\n11const [emailAddress, setEmailAddress] = useState(\"\");\\n12const [phoneNumber, setPhoneNumber] = useState(\"\");\\n13\\n14functionapplyChangesClickHandler(e: MouseEvent<HTMLButtonElement>) {\\n15    e.preventDefault();\\n16const requestData = {\\n17      address,\\n18      emailAddress,\\n19      phoneNumber,\\n20    };\\n21\\n22console.log(\"Sending data to API:\", requestData);\\n23\\n24// Simulate an API request25setTimeout(() => {\\n26console.log(\"API request successful:\", requestData);\\n27      alert(\"Changes applied successfully!\");\\n28    }, 1000);\\n29  }\\n30\\n31functiondiscardClickHandler(e: MouseEvent<HTMLButtonElement>) {\\n32    alert(\"discardClickHandler fired\");\\n33  }\\n34\\n35return (\\n36<divclassName=\"bg-white w-[400px] flex flex-col justify-center items-center gap-5 p-5 rounded-lg shadow-[0_4px_4px_0_rgba(0,0,0,0.25)]\">37<divclassName=\"w-fit flex flex-col items-center gap-4\">38<Avatar39subtitle=\"Enter your contact details for communication.\"40title=\"Contact Information\"41size=\"md\"42topStatus=\"plus\"43        />44<Divider />45<Input46placeholder=\"samraaj@ion.design\"47iconLeading={48            <EnvelopeSimplesize={16}weight={\"regular\"} />49          }\\n50          required\\n51          label=\"Email Address\"\\n52          showHintIcon\\n53          hint=\"Work email\"\\n54          value={emailAddress}\\n55          onChange={(e) => setEmailAddress(e.target.value)}\\n56          className=\"w-full\"\\n57        />\\n58<Input59placeholder=\"samraaj@ion.design\"60iconLeading={<Phonesize={16}weight={\"bold\"} />}\\n61          required\\n62          label=\"Phone Number\"\\n63          value={phoneNumber}\\n64          onChange={(e) => setPhoneNumber(e.target.value)}\\n65          className=\"w-full\"\\n66        />\\n67<Textarea68placeholder=\"301 main st\"69required70helper=\"(Mailing)\"71label=\"Address\"72showHintIcon73hint=\"Needed for HR records\"74value={address}75onChange={(e) => setAddress(e.target.value)}\\n76          className=\"w-full\"\\n77        />\\n78<divclassName=\"w-full flex items-center gap-5\">79<Button80variant=\"soft\"81color=\"neutral\"82size=\"md\"83onClick={discardClickHandler}84className=\"w-full\"85          >86            Discard\\n87</Button>88<Button89variant=\"filled\"90color=\"primary\"91size=\"md\"92onClick={applyChangesClickHandler}93className=\"w-full\"94          >95            Apply Changes\\n96</Button>97</div>98</div>99</div>100  );\\n101}\\n102exportdefault ContactInformationCard;\\n```\\n\\n### Pixel perfect, every time\\nReduce your development time by 30-50%. Get features live without delays, and move faster than your competition.\\n![](https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/67344904172887d636ac0f7e_bento%2002.svg)\\n### Iterate with Confidence\\nSync Figma updates automatically with pull requests and merge conflicts, clearing your backlog and letting the team focus on what matters.\\n![](https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/673456a3502d24b5aa176c1d_bento%2003.svg)\\n### Complex Components Made Easy\\nHandling conditional logic, state, and animations is now effortless. ion generates code that’s not just visually accurate but functionally sound.\\n![](https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/6734639417a7c998da101afb_bento%2004%20table.svg)![](https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/6734630a5cb0f01521f28433_bento%2004%20profiles.avif)\\n## What designers and engineers like you have to say\\n![](https://cdn.prod.website-files.com/672f25b15acb5e5a27bf6a65/6733affc12731325c9ac9dfe_Agree.png)\\nAgree Ahmed\\nCofounder, NUMI (YC W20)\\nOur shipping cadence has been unleashed since we started using Ion. And surprisingly, it\\'s improved the quality of our codebase and our final product. That\\'s because we can spend more time thinking about design and architecture and less time on UI and CSS. It\\'s hard for me to imagine going back.\\n![](https://cdn.prod.website-files.com/672f25b15acb5e5a27bf6a65/673bd548b85c3a772be26656_amar%20singh.jpeg)\\nAmar Singh\\nCEO, Nexavision Odds\\nI loved using ion, it saved me hours of time converting all my figma frames to my actual production site. It helped put our design and engineering in sync, even when our figma files changed. I was able to get very far before having to involve my engineering team at all.\\n![](https://cdn.prod.website-files.com/672f25b15acb5e5a27bf6a65/673bd59902b0fce0e6dd31de_akhil%20chandan.jpeg)\\nAkhil Chandan\\nCTO, Jumpshot Live\\nion unlocked the productivity of our team. We were able to knock out all of our backlog design fixes in our scheduling app without any extra development resources.\\n![](https://cdn.prod.website-files.com/672f25b15acb5e5a27bf6a65/6751e8b5f7ef9333ff43a899_landeed-logo.png)\\nZJ Lin\\nCo-founder, Landeed (YC S22)\\nWe’ve tried all design to code AI tools but Ion is the only one able to generate modular and responsive high quality code. This is the area that the foundational LLM’s do not do well yet but Ion does it brilliantly. We’ve so far saved hundreds of hours of engineering time. The Ion team is responsive to questions and almost work as an additional engineer and designer combined on the team. Highly recommend you try Ion now.\\n## Frequently Asked Questions\\nWhy use ion?\\n**Reduce Development Time -** stop switching between your editor & figma - instead you can focus on shipping features faster.\\n**Seamless Integration -** ion fits into your existing stack, working with your libraries and codebase to keep everything in sync.\\n**Effortless Scaling -** as you grow, ion ensures your workflow remains fast and efficient without sacrificing quality.\\nHow does ion work?\\nion intelligently maps your existing React components to Figma designs. It understands how to call them and recognizes your global variables, Tailwind CSS configurations, fonts, and styling setups to generate the best possible code for your use case.\\nWhat stacks does ion support?\\nWe support React, TypeScript, and Tailwind CSS. We also accommodate most component libraries—contact us for specifics.\\nWhat happens if designs get out of sync?\\nion allows you to generate pull requests for differences and merge conflicts when generating code in VS Code. This helps you iterate without constant development resource allocation.\\nDo I need to design with ion in mind?\\nion requires adherence to standard best practices like using auto-layout, avoiding fixed sizing, and maintaining consistent component structures. You can use dsLint to ensure your designs are compliant.\\nCan this replace my frontend engineer?\\nWe\\'re here to empower your development team, not replace it. While ion accelerates production, engineers are still essential for integrating business logic, architecture, and asynchronous data. Our AI helper can take you far, but not all the way.\\nHow does ion handle Figma variables?\\nWith ion, you can export variables from Figma and implement them into your codebase. Once integrated, ion automatically categorizes and utilizes them appropriately in code generation.\\nWhat models does ion use?\\nWe leverage a blend of off-the-shelf LLMs, including OpenAI\\'s GPT-4 & o1-mini and Anthropic’s Claude Sonnet 3.5, along with custom models to generate high-quality code efficiently and cost-effectively.\\nHow are you different than the competition?\\nion produces the highest quality code from Figma designs, taking you further than any other tool. Our mission is to create more design engineers and transform the industry.\\n\\u200d\\nOther Figma-to-code tools aren\\'t able to produce as high quality code as us because they don\\'t have the proper codebase context to write high-quality code tailored to your use case.\\n\\u200d\\nOther AI-based app builders aren\\'t built specifically for designers. We build for your tools and workflows to give you an unbeatable experience - for example we integrate with Figma to meet you where you\\'re already doing design work.\\n## Experience the speed of ion\\nGet started for free. Turn your designs into code in seconds and unleash the full power of your team.\\n[Start Shipping FasterStart Shipping Faster](https://www.ion.design/<https:/app.ion.design/>)\\n![](https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/672e22faf2f50dd0d3288e6c_BG%20pattern.svg)\\n[](https://www.ion.design/</>)\\n[Pricing](https://www.ion.design/</pricing>)Contact us\\n[](https://www.ion.design/<#>)\\n[](https://www.ion.design/<#>)[ ](https://www.ion.design/<https:/x.com/iondotdesign>)\\n[](https://www.ion.design/<#>)\\n[](https://www.ion.design/<#>)[ ](https://www.ion.design/<https:/www.linkedin.com/company/ion-dot-design/>)\\n© 2025 ion design.\\n[Terms of Service](https://www.ion.design/<#>)\\n![](https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/672e22faf2f50dd0d3288e6c_BG%20pattern.svg)![](https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/672e2303660a4c9bdeaa5241_BG%20Gradient.svg)\\n' markdown_with_citations='[](https://www.ion.design/</>)Blog⟨1⟩Contact usPricing⟨2⟩\\nGet started⟨3⟩Get started⟨3⟩\\nBacked by Y Combinator\\n#  Turn Designers into Design Engineers.\\nUse AI to turn your Figma designs into code. Tailor made for your design system and codebase.\\nStart Shipping FasterStart Shipping Faster⟨3⟩\\n![](https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/672e8dcbcfd0016abe572d00_Hero%20Code.avif)\\n```\\n1\\'use client\\';\\n2\\n3import { BarChart, DonutChart } from\"@tremor/react\";\\n4import React from\"react\";\\n5import {\\n6  createColumnHelper,\\n7  flexRender,\\n8  getCoreRowModel,\\n9  useReactTable,\\n10} from\"@tanstack/react-table\";\\n11import Badge from\"@/components/ion/Badge\";\\n12import {\\n13  ArrowDown,\\n14  ArrowsCounterClockwise,\\n15  Users,\\n16  Wallet,\\n17} from\"@phosphor-icons/react/dist/ssr\";\\n18import Button from\"@/components/ion/Button\";\\n19import clsx from\"clsx\";\\n20import Divider from\"@/components/ion/Divider\";\\n21import Checkbox from\"@/components/ion/Checkbox\";\\n22import Avatar from\"@/components/ion/Avatar\";\\n23\\n24exportfunctionHomepage() {\\n25const handleWithdraw = () => {\\n26// Handle withdraw action27console.log(\"Withdraw clicked\");\\n28  };\\n29\\n30const handleDeposit = () => {\\n31// Handle deposit action32console.log(\"Deposit clicked\");\\n33  };\\n34\\n35return (\\n36<divclassName=\"min-h-screen bg-neutral-50\">37<TopbarclassName=\"sticky top-0 z-50\" />38\\n39<MainContent>40<PageHeader41title=\"Overview\"42id=\"8474720274\"43onWithdraw={handleWithdraw}44onDeposit={handleDeposit}45        />46\\n47<WidgetGrid>48          {/* Main content area - spans full width */}\\n49<divclassName=\"col-span-12\">50<OverviewWidget />51</div>52\\n53          {/* Two-column layout for remaining widgets */}\\n54<divclassName=\"col-span-12 grid grid-cols-12 gap-5\">55            {/* Left column - Registration Widget */}\\n56<divclassName=\"col-span-6\">57<RegistrationWidget />58</div>59\\n60            {/* Right column - Finance and Transactions */}\\n61<divclassName=\"col-span-4 flex flex-col gap-5\">62<FinanceWidget />63<LatestTransactionsWidget />64</div>65\\n66            {/* Calendar Widget */}\\n67<divclassName=\"col-span-2\">68<CalendarWidgetscheduleData={scheduleData} />69</div>70</div>71</WidgetGrid>72</MainContent>73</div>74  );\\n75}\\n76\\n77Homepage.displayName = \"Homepage\";\\n78\\n79exportdefault Homepage;\\n80\\n81interface MainContentProps {\\n82children: React.ReactNode;\\n83  className?: string;\\n84}\\n85\\n86const MainContent = ({ children, className }: MainContentProps) => (\\n87<mainclassName={clsx(\"flex-1flexflex-colgap-5px-10py-5\", className)}>88    {children}\\n89</main>90);\\n91\\n92const WidgetGrid = ({ children }: { children: React.ReactNode }) => (\\n93<divclassName=\"flex-1 grid grid-cols-12 gap-5\">{children}</div>94);\\n95\\n96interface HeaderProps {\\n97title: string;\\n98  id: string;\\n99  onWithdraw: () =>void;\\n100  onDeposit: () =>void;\\n101}\\n102\\n103const PageHeader = ({ title, id, onWithdraw, onDeposit }: HeaderProps) => (\\n104<divclassName=\"flex justify-between items-center\">105<divclassName=\"flex items-center gap-2\">106<h1className=\"text-4xl font-medium text-neutral-900\">{title}</h1>107<Badgecolor=\"blue\"variant=\"soft\"className=\"text-xs\">108        ID: {id}\\n109<CopyclassName=\"h-3 w-3 ml-1\" />110</Badge>111</div>112<divclassName=\"flex items-center gap-3\">113<Buttonvariant=\"outline\"size=\"sm\"onClick={onWithdraw}>114<ArrowDownclassName=\"h-4 w-4 mr-2\" />115        Withdraw\\n116</Button>117<Buttonsize=\"sm\"onClick={onDeposit}>118<ArrowUpclassName=\"h-4 w-4 mr-2\" />119        Deposit\\n120</Button>121</div>122</div>123);\\n124\\n125interface TopbarProps {\\n126  className?: string;\\n127}\\n128\\n129type NavItem = {\\n130label: string;\\n131  icon: React.ReactNode;\\n132  isActive?: boolean;\\n133  hasDropdown?: boolean;\\n134};\\n135\\n136const NavButton = ({ item }: { item: NavItem }) => (\\n137<Button138variant=\"ghost\"139size=\"sm\"140className={clsx(141      \"gap-2font-medium\",\\n142item.isActive && \"bg-blue-50text-blue-700\",\\n143      !item.isActive && \"text-neutral-600\",\\n144    )}\\n145  >146    {item.icon}\\n147<span>{item.label}</span>148    {item.hasDropdown && <CaretDownclassName=\"h-4 w-4\" />}\\n149</Button>150);\\n151\\n152const ActionButton = ({\\n153  icon: Icon,\\n154  className,\\n155}: {\\n156  icon: React.ElementType;\\n157  className?: string;\\n158}) => (\\n159<Button160variant=\"ghost\"161color=\"neutral\"162className={clsx(\"text-neutral-600\", className)}\\n163  >164<IconclassName=\"h-5 w-5\" />165</Button>166);\\n167\\n168exportfunctionTopbar({ className }: TopbarProps) {\\n169return (\\n170<div171className={clsx(172        \"flexjustify-betweenitems-centerpx-10py-5\",\\n173        \"bg-whiteborder-bborder-neutral-200\",\\n174className,\\n175      )}\\n176    >177<divclassName=\"flex items-center gap-10\">178        {/* Logo */}\\n179<divclassName=\"flex items-center gap-2 text-2xl font-medium\">180<divclassName=\"h-10 w-10 bg-blue-600 rounded-lg flex items-center justify-center text-white\">181            Sx\\n182</div>183<span>SparX</span>184</div>185\\n186        {/* Navigation */}\\n187<navclassName=\"flex items-center gap-1\">188          {navItems.map((item, index) => (\\n189<NavButtonkey={index}item={item} />190          ))}\\n191</nav>192</div>193\\n194<divclassName=\"flex items-center gap-4\">195        {/* User Profile */}\\n196<Buttonvariant=\"outline\"className=\"gap-2 font-medium\">197<AvatarclassName=\"h-8 w-8\" />198<span>John Doe</span>199<CaretDownclassName=\"h-4 w-4\" />200</Button>201</div>202</div>203  );\\n204}\\n205\\n206type OverviewStatCardData = {\\n207title: string;\\n208  icon: React.ReactNode;\\n209  value: string;\\n210  change?: string;\\n211  valueColor?: string;\\n212};\\n213\\n214interface OverviewWidgetProps {\\n215  className?: string;\\n216}\\n217\\n218const OverviewStatsCard = ({ data }: { data: OverviewStatCardData }) => (\\n219<div220className={clsx(221      \"flexflex-colgap-6p-4rounded-md\",\\n222      \"bg-whiteborderborder-neutral-200\",\\n223      \"shadow-sm\",\\n224    )}\\n225  >226<divclassName=\"flex items-center justify-between text-base text-neutral-600\">227<span>{data.title}</span>228      {data.icon}\\n229</div>230\\n231<divclassName=\"flex items-end gap-4\">232<span233className={clsx(234          \"text-3xlleading-10\",\\n235data.valueColor || \"text-neutral-900\",\\n236        )}\\n237      >238        {data.value}\\n239</span>240      {data.change && (\\n241<div242className={clsx(243            \"px-2py-0.5rounded-fulltext-xs\",\\n244            \"bg-green-50text-green-900\",\\n245            \"borderborder-green-200\",\\n246          )}\\n247        >248          {data.change}\\n249</div>250      )}\\n251</div>252</div>253);\\n254\\n255exportfunctionOverviewWidget({ className }: OverviewWidgetProps) {\\n256return (\\n257<div258className={clsx(259        \"flexflex-colgap-4p-4rounded-lg\",\\n260        \"borderborder-neutral-200shadow-sm\",\\n261        \"bg-gradient-to-brfrom-blue-50to-white\",\\n262className,\\n263      )}\\n264    >265<divclassName=\"flex items-center justify-between\">266<h2className=\"text-base font-medium py-1\">Overview</h2>267<Buttonvariant=\"outline\"size=\"sm\">268          Today\\n269<CaretDownclassName=\"h-4 w-4 ml-1\" />270</Button>271</div>272\\n273<Divider />274\\n275<divclassName=\"grid grid-cols-4 gap-4\">276        {overviewData.map((data, index) => (\\n277<OverviewStatsCardkey={index}data={data} />278        ))}\\n279</div>280</div>281  );\\n282}\\n283\\n284type AppointmentType = {\\n285time: string;\\n286  userId: string;\\n287  type: \"calendar\" | \"phone\";\\n288  hasReminder?: boolean;\\n289};\\n290\\n291type DaySchedule = {\\n292date: string;\\n293  dayName: string;\\n294  appointments: AppointmentType[];\\n295};\\n296\\n297interface CalendarWidgetProps {\\n298  className?: string;\\n299  scheduleData: DaySchedule[];\\n300  selectedDateRange?: string;\\n301  onAddFollowUp?: () =>void;\\n302  onSearch?: () =>void;\\n303  onDateRangeSelect?: () =>void;\\n304}\\n305\\n306const AppointmentIcon = ({ type }: { type: \"calendar\" | \"phone\" }) => (\\n307<divclassName=\"flex items-center gap-2.5 p-1 rounded-full border border-neutral-200 shadow-sm\">308    {type === \"calendar\" ? (\\n309<CalendarclassName=\"h-4 w-4\" />310    ) : (\\n311<PhoneclassName=\"h-4 w-4\" />312    )}\\n313</div>314);\\n315\\n316const UserBadge = ({ userId }: { userId: string }) => (\\n317<divclassName=\"flex items-center gap-1 px-1.5 py-1 rounded-full border border-neutral-200 shadow-sm text-xs text-neutral-600\">318<UserclassName=\"h-4 w-4\" />319<span>{userId}</span>320</div>321);\\n322\\n323const ReminderBadge = () => (\\n324<divclassName=\"flex items-center p-1 rounded-sm bg-blue-50 border border-blue-200\">325<BellclassName=\"h-4 w-4 text-blue-500\" />326</div>327);\\n328\\n329const AppointmentRow = ({ appointment }: { appointment: AppointmentType }) => (\\n330<divclassName=\"flex justify-between items-center py-2\">331<divclassName=\"flex items-center gap-2\">332<Checkbox />333<spanclassName=\"text-xs\">{appointment.time}</span>334</div>335<divclassName=\"flex items-center gap-2\">336<divclassName=\"flex items-center gap-2 p-2\">337<AppointmentIcontype={appointment.type} />338<UserBadgeuserId={appointment.userId} />339</div>340      {appointment.hasReminder && <ReminderBadge />}\\n341</div>342</div>343);\\n344\\n345const DaySection = ({ day }: { day: DaySchedule }) => (\\n346<divclassName=\"flex flex-col gap-1\">347<divclassName=\"flex justify-between items-center p-3 bg-neutral-50 rounded-sm\">348<spanclassName=\"text-sm font-medium\">{day.dayName}</span>349<spanclassName=\"text-xs text-neutral-500\">{day.date}</span>350</div>351<divclassName=\"flex flex-col\">352      {day.appointments.map((appointment, index) => (\\n353<AppointmentRowkey={index}appointment={appointment} />354      ))}\\n355</div>356</div>357);\\n358\\n359exportfunctionCalendarWidget({\\n360  className,\\n361  scheduleData,\\n362  selectedDateRange = \"May 26 - May 30\",\\n363  onAddFollowUp,\\n364  onSearch,\\n365  onDateRangeSelect,\\n366}: CalendarWidgetProps) {\\n367return (\\n368<div369className={clsx(370        \"bg-backgroundflexflex-colgap-3rounded-lgborderborder-neutral-200shadow-sm\",\\n371className,\\n372      )}\\n373    >374<divclassName=\"flex justify-between items-center p-4\">375<divclassName=\"flex items-center gap-2 text-base font-medium\">376<Calendar />377<span>Calendar</span>378</div>379<divclassName=\"flex items-center gap-2\">380<Button381variant=\"outline\"382color=\"neutral\"383onClick={onSearch}384          >385<MagnifyingGlassclassName=\"h-4 w-4\" />386</Button>387<Buttonvariant=\"outline\"onClick={onDateRangeSelect}>388<CalendarclassName=\"h-4 w-4 mr-2\" />389            {selectedDateRange}\\n390</Button>391</div>392</div>393\\n394<Divider />395\\n396<divclassName=\"flex flex-col gap-4 p-4\">397        {scheduleData.map((day, index) => (\\n398<DaySectionkey={index}day={day} />399        ))}\\n400</div>401\\n402<Button403variant=\"ghost\"404className=\"mx-4 mb-4 bg-primary-50 text-primary hover:bg-primary-100\"405onClick={onAddFollowUp}406      >407<PlusclassName=\"h-4 w-4 mr-2\" />408        Add follow up\\n409</Button>410</div>411  );\\n412}\\n413\\n414type Transaction = {\\n415id: string;\\n416  type: \"deposit\" | \"trade\";\\n417  description: string;\\n418  amount: {\\n419currency: \"USD\" | \"EUR\";\\n420    value: number;\\n421  };\\n422  date: string;\\n423  time: string;\\n424  status: \"completed\";\\n425};\\n426\\n427interface LatestTransactionsWidgetProps {\\n428  className?: string;\\n429}\\n430\\n431const columnHelper = createColumnHelper<Transaction>();\\n432\\n433const columns = [\\n434  columnHelper.accessor(\"id\", {\\n435header: \"#\",\\n436cell: (info) => info.getValue(),\\n437  }),\\n438  columnHelper.accessor(\"description\", {\\n439header: \"Type\",\\n440cell: (info) => (\\n441<divclassName=\"flex items-center gap-1\">442        {info.row.original.type === \"deposit\" ? (\\n443<ArrowUpclassName=\"h-4 w-4 text-green-500\" />444        ) : (\\n445<ArrowDownclassName=\"h-4 w-4 text-neutral-500\" />446        )}\\n447<spanclassName=\"font-medium\">{info.getValue()}</span>448</div>449    ),\\n450  }),\\n451  columnHelper.accessor(\"amount\", {\\n452header: \"Amount\",\\n453cell: (info) => (\\n454<divclassName=\"flex items-center gap-1\">455<spanclassName=\"font-medium\">456          {info.getValue().currency}{\" \"}\\n457          {info.getValue().value.toFixed(2)}\\n458</span>459<CheckCircleclassName=\"h-4 w-4 text-green-500\" />460</div>461    ),\\n462  }),\\n463  columnHelper.accessor(\"date\", {\\n464header: \"Date\",\\n465cell: (info) => (\\n466<divclassName=\"flex flex-col\">467<span>{info.getValue()}</span>468<spanclassName=\"text-neutral-500\">469          {info.row.original.time}\\n470</span>471</div>472    ),\\n473  }),\\n474];\\n475\\n476exportfunctionLatestTransactionsWidget({\\n477  className,\\n478}: LatestTransactionsWidgetProps) {\\n479const table = useReactTable({\\n480data: transactionData,\\n481    columns,\\n482getCoreRowModel: getCoreRowModel(),\\n483  });\\n484\\n485return (\\n486<div487className={clsx(488        \"flexflex-colgap-3p-4rounded-smborderborder-neutral-200\",\\n489        \"bg-gradient-to-brfrom-blue-50to-white\",\\n490className,\\n491      )}\\n492    >493<divclassName=\"flex items-center justify-between\">494<divclassName=\"flex items-center gap-2 text-base font-medium\">495<ArrowsInCardinalclassName=\"h-6 w-6\" />496<span>Latest Transactions</span>497</div>498<divclassName=\"flex items-center gap-2\">499<Buttonvariant=\"outline\"color=\"neutral\">500<ListclassName=\"h-5 w-5\" />501</Button>502<Buttonvariant=\"outline\"color=\"neutral\">503<ArrowsCounterClockwiseclassName=\"h-5 w-5\" />504</Button>505</div>506</div>507\\n508<Divider />509\\n510<divclassName=\"rounded-sm overflow-hidden\">511<tableclassName=\"w-full\">512<theadclassName=\"bg-neutral-50\">513            {table.getHeaderGroups().map((headerGroup) => (\\n514<trkey={headerGroup.id}>515                {headerGroup.headers.map((header) => (\\n516<th517key={header.id}518className=\"px-3 py-2 text-sm text-neutral-600 text-left font-medium\"519                  >520                    {header.isPlaceholder\\n521                      ? null\\n522                      : flexRender(\\n523                         header.column.columnDef\\n524                           .header,\\n525                         header.getContext(),\\n526                       )}\\n527</th>528                ))}\\n529</tr>530            ))}\\n531</thead>532<tbody>533            {table.getRowModel().rows.map((row, i) => (\\n534<tr535key={row.id}536className={clsx(537                  \"hover:bg-neutral-50\",\\n538i % 2 === 1 && \"bg-neutral-50/50\",\\n539                )}\\n540              >541                {row.getVisibleCells().map((cell) => (\\n542<td543key={cell.id}544className=\"px-3 py-4 text-xs\"545                  >546                    {flexRender(\\n547                      cell.column.columnDef.cell,\\n548                      cell.getContext(),\\n549                    )}\\n550</td>551                ))}\\n552</tr>553            ))}\\n554</tbody>555</table>556</div>557</div>558  );\\n559}\\n560type FinanceData = {\\n561name: string;\\n562  value: number;\\n563  color: string;\\n564};\\n565\\n566interface FinanceWidgetProps {\\n567  className?: string;\\n568}\\n569\\n570const colorMap: Record<string, string> = {\\n571\"Deposit PSP3\": \"bg-emerald-500\",\\n572\"Deposit PSP2\": \"bg-indigo-500\",\\n573\"Deposit PSP1\": \"bg-sky-500\",\\n574Withdrawal: \"bg-red-500\",\\n575};\\n576\\n577const StatCard = ({\\n578  title,\\n579  amount,\\n580  color,\\n581}: {\\n582  title: string;\\n583  amount: number;\\n584  color: string;\\n585}) => (\\n586<divclassName=\"flex flex-col items-center gap-3 px-4\">587<div588className={clsx(589        \"w-8h-8rounded-fullflexitems-centerjustify-center\",\\n590        `bg-${color}/10`,\\n591      )}\\n592    >593<divclassName={clsx(\"w-2h-2rounded-full\", colorMap[title])} />594</div>595<divclassName=\"flex flex-col items-center gap-1\">596<spanclassName=\"text-xs text-neutral-600\">{title}</span>597<spanclassName=\"text-sm font-medium\">598        ${amount.toLocaleString(\"en-US\", { minimumFractionDigits: 2 })}\\n599</span>600</div>601</div>602);\\n603\\n604exportfunctionFinanceWidget({ className }: FinanceWidgetProps) {\\n605const totalAmount = financeData.reduce((sum, item) => sum + item.value, 0);\\n606\\n607return (\\n608<div609className={clsx(610        \"flexflex-colgap-4p-4rounded-lgborderborder-neutral-200shadow-sm\",\\n611        \"bg-gradient-to-brfrom-green-50to-white\",\\n612className,\\n613      )}\\n614    >615<divclassName=\"flex items-center justify-between\">616<divclassName=\"flex items-center gap-2 text-base font-medium\">617<PinwheelclassName=\"h-6 w-6\" />618<span>Finances distribution</span>619</div>620<Buttonvariant=\"outline\"size=\"sm\">621          Last Week\\n622<CaretDownclassName=\"h-4 w-4 ml-1\" />623</Button>624</div>625\\n626<Divider />627\\n628<divclassName=\"relative flex flex-col items-center justify-center\">629        {/* Center text overlay */}\\n630<divclassName=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 z-10 flex flex-col items-center\">631<spanclassName=\"text-xs font-medium text-neutral-600 uppercase\">632            Overall Transitions\\n633</span>634<spanclassName=\"text-2xl font-medium mt-2\">635            $\\n636            {totalAmount.toLocaleString(\"en-US\", {\\n637              minimumFractionDigits: 2,\\n638            })}\\n639</span>640</div>641\\n642        {/* Donut Chart */}\\n643<DonutChart644data={financeData}645category=\"value\"646index=\"name\"647valueFormatter={(number) =>648            `$${Intl.NumberFormat(\"us\").format(number).toString()}`\\n649          }\\n650          colors={[\"emerald\", \"indigo\", \"sky\", \"red\"]}\\n651          showAnimation={true}\\n652          className=\"h-[248px] w-[248px]\"\\n653          showLabel={false}\\n654        />\\n655</div>656\\n657<Divider />658\\n659<divclassName=\"grid grid-cols-4 gap-2\">660        {financeData.map((item, index) => (\\n661<React.Fragmentkey={item.name}>662<StatCard663title={item.name}664amount={item.value}665color={item.color}666            />667            {index < financeData.length - 1 && (\\n668<Divider669orientation=\"vertical\"670className=\"h-[84px]\"671              />672            )}\\n673</React.Fragment>674        ))}\\n675</div>676</div>677  );\\n678}\\n679\\n680type DistributionData = {\\n681country: string;\\n682  value: number;\\n683  color: string;\\n684};\\n685\\n686type RegistrationRecord = {\\n687id: string;\\n688  country: string;\\n689  name: string;\\n690  status: \"active\" | \"pending\" | \"waiting\";\\n691  date: string;\\n692  time: string;\\n693  hasExternalLink?: boolean;\\n694};\\n695\\n696interface RegistrationWidgetProps {\\n697  className?: string;\\n698}\\n699\\n700const StatusIcon = ({ status }: { status: RegistrationRecord[\"status\"] }) => {\\n701const statusColors = {\\n702active: \"text-blue-500 bg-blue-50\",\\n703pending: \"text-green-500 bg-green-50\",\\n704waiting: \"text-amber-500 bg-amber-50\",\\n705  };\\n706\\n707return (\\n708<divclassName={clsx(\"p-2rounded-full\", statusColors[status])}>709<UserclassName=\"h-4 w-4\" />710</div>711  );\\n712};\\n713\\n714const registrationColumnHelper = createColumnHelper<RegistrationRecord>();\\n715\\n716const registrationColumns = [\\n717  registrationColumnHelper.accessor(\"id\", {\\n718header: \"#\",\\n719cell: (info) => info.getValue(),\\n720  }),\\n721  registrationColumnHelper.accessor(\"country\", {\\n722header: \"Country\",\\n723cell: (info) =><spanclassName=\"font-medium\">{info.getValue()}</span>,\\n724  }),\\n725  registrationColumnHelper.accessor(\"name\", {\\n726header: \"Name\",\\n727cell: (info) => info.getValue(),\\n728  }),\\n729  registrationColumnHelper.accessor(\"status\", {\\n730header: \"Status\",\\n731cell: (info) => (\\n732<divclassName=\"flex gap-2\">733<StatusIconstatus={info.getValue()} />734        {info.row.original.hasExternalLink && (\\n735<divclassName=\"p-2 rounded-full text-blue-500 bg-blue-50\">736<LinkclassName=\"h-4 w-4\" />737</div>738        )}\\n739</div>740    ),\\n741  }),\\n742  registrationColumnHelper.accessor(\"date\", {\\n743header: \"Date\",\\n744cell: (info) => (\\n745<divclassName=\"flex flex-col\">746<span>{info.getValue()}</span>747<spanclassName=\"text-neutral-400\">748          {info.row.original.time}\\n749</span>750</div>751    ),\\n752  }),\\n753];\\n754\\n755exportfunctionRegistrationWidget({ className }: RegistrationWidgetProps) {\\n756const table = useReactTable({\\n757data: registrationData,\\n758columns: registrationColumns,\\n759getCoreRowModel: getCoreRowModel(),\\n760  });\\n761\\n762return (\\n763<div764className={clsx(765        \"flexflex-colgap-4p-4rounded-lg\",\\n766        \"borderborder-neutral-200shadow-sm\",\\n767        \"bg-gradient-to-brfrom-indigo-50to-white\",\\n768className,\\n769      )}\\n770    >771<divclassName=\"flex items-center justify-between\">772<divclassName=\"flex items-center gap-2 text-base font-medium\">773<UserPlusclassName=\"h-6 w-6\" />774<span>Registration Distribution</span>775</div>776<Buttonvariant=\"outline\"size=\"sm\">777          Last week\\n778<CaretDownclassName=\"h-4 w-4 ml-1\" />779</Button>780</div>781\\n782<Divider />783\\n784<divclassName=\"flex flex-col gap-4\">785<BarChart786data={distributionData}787index=\"country\"788categories={[\"value\"]}\\n789colors={[\"blue\"]}\\n790showGridLines={false}791startEndOnly={true}792showAnimation={true}793valueFormatter={(value) => `${value}%`}\\n794          className=\"h-64\"\\n795        />\\n796\\n797<divclassName=\"bg-white rounded-sm border border-neutral-200 p-3\">798<divclassName=\"flex items-center justify-between mb-3\">799<h3className=\"text-base font-medium\">800              Recent Registration\\n801</h3>802<divclassName=\"flex items-center gap-2\">803<Buttonvariant=\"outline\"color=\"neutral\">804<MagnifyingGlassclassName=\"h-5 w-5\" />805</Button>806<Buttonvariant=\"outline\"size=\"sm\">807                See All\\n808</Button>809</div>810</div>811\\n812<divclassName=\"rounded-sm overflow-hidden\">813<tableclassName=\"w-full\">814<theadclassName=\"bg-neutral-50\">815                {table.getHeaderGroups().map((headerGroup) => (\\n816<trkey={headerGroup.id}>817                    {headerGroup.headers.map((header) => (\\n818<th819key={header.id}820className=\"px-3 py-2 text-sm text-neutral-600 text-left\"821                      >822                        {header.isPlaceholder\\n823                          ? null\\n824                          : flexRender(\\n825                             header.column\\n826                               .columnDef.header,\\n827                             header.getContext(),\\n828                           )}\\n829</th>830                    ))}\\n831</tr>832                ))}\\n833</thead>834<tbody>835                {table.getRowModel().rows.map((row, i) => (\\n836<tr837key={row.id}838className={clsx(839                      \"hover:bg-neutral-50\",\\n840i % 2 === 1 && \"bg-neutral-50/50\",\\n841                    )}\\n842                  >843                    {row.getVisibleCells().map((cell) => (\\n844<td845key={cell.id}846className=\"px-3 py-4 text-xs\"847                      >848                        {flexRender(\\n849                          cell.column.columnDef.cell,\\n850                          cell.getContext(),\\n851                        )}\\n852</td>853                    ))}\\n854</tr>855                ))}\\n856</tbody>857</table>858</div>859</div>860</div>861</div>862  );\\n863}\\n864\\n865const distributionData: DistributionData[] = [\\n866  { country: \"USA\", value: 80, color: \"blue-600\" },\\n867  { country: \"UAE\", value: 40, color: \"sky-400\" },\\n868  { country: \"UK\", value: 32, color: \"purple-500\" },\\n869  { country: \"Brazil\", value: 28, color: \"indigo-900\" },\\n870  { country: \"Germany\", value: 20, color: \"amber-500\" },\\n871  { country: \"Spain\", value: 12, color: \"cyan-900\" },\\n872  { country: \"Portugal\", value: 8, color: \"emerald-500\" },\\n873  { country: \"KSA\", value: 4, color: \"violet-200\" },\\n874];\\n875\\n876const navItems: NavItem[] = [\\n877  {\\n878label: \"Dashboard\",\\n879icon: <LayoutclassName=\"h-5 w-5\" />,\\n880    isActive: true,\\n881  },\\n882  {\\n883label: \"Clients\",\\n884icon: <UsersclassName=\"h-5 w-5\" />,\\n885  },\\n886  {\\n887label: \"Pending\",\\n888icon: <BellclassName=\"h-5 w-5\" />,\\n889    hasDropdown: true,\\n890  },\\n891  {\\n892label: \"Finances\",\\n893icon: <WalletclassName=\"h-5 w-5\" />,\\n894  },\\n895  {\\n896label: \"Leads\",\\n897icon: <PhoneclassName=\"h-5 w-5\" />,\\n898  },\\n899  {\\n900label: \"Management\",\\n901icon: <BriefcaseclassName=\"h-5 w-5\" />,\\n902  },\\n903  {\\n904label: \"Settings\",\\n905icon: <GearclassName=\"h-5 w-5\" />,\\n906    hasDropdown: true,\\n907  },\\n908];\\n909\\n910const registrationData: RegistrationRecord[] = [\\n911  {\\n912id: \"7009\",\\n913country: \"UAE\",\\n914name: \"John Doe\",\\n915status: \"active\",\\n916date: \"12/05/2024\",\\n917time: \"14:24\",\\n918  },\\n919  {\\n920id: \"7009\",\\n921country: \"Germany\",\\n922name: \"Ahmed Ayad\",\\n923status: \"pending\",\\n924date: \"12/05/2024\",\\n925time: \"14:24\",\\n926  },\\n927  {\\n928id: \"7009\",\\n929country: \"Spain\",\\n930name: \"Salim Ahmed\",\\n931status: \"waiting\",\\n932date: \"12/05/2024\",\\n933time: \"14:24\",\\n934hasExternalLink: true,\\n935  },\\n936  {\\n937id: \"7009\",\\n938country: \"Switzerland\",\\n939name: \"Damian Dark\",\\n940status: \"active\",\\n941date: \"12/05/2024\",\\n942time: \"14:24\",\\n943  },\\n944];\\n945\\n946const overviewData: OverviewStatCardData[] = [\\n947  {\\n948title: \"Clients\",\\n949icon: <UsersclassName=\"h-5 w-5 text-neutral-600\" />,\\n950    value: \"1,532\",\\n951change: \"+5% last mth\",\\n952  },\\n953  {\\n954title: \"Registration\",\\n955icon: <UserPlusclassName=\"h-5 w-5 text-neutral-600\" />,\\n956    value: \"25\",\\n957change: \"+2% last mth\",\\n958  },\\n959  {\\n960title: \"Deposits\",\\n961icon: <ArrowUpclassName=\"h-5 w-5 text-neutral-600\" />,\\n962    value: \"+$25,000\",\\n963valueColor: \"text-green-700\",\\n964  },\\n965  {\\n966title: \"Withdraw\",\\n967icon: <ArrowDownclassName=\"h-5 w-5 text-neutral-600\" />,\\n968    value: \"-$5,000\",\\n969valueColor: \"text-red-700\",\\n970  },\\n971];\\n972\\n973const financeData: FinanceData[] = [\\n974  {\\n975name: \"Deposit PSP3\",\\n976value: 95000,\\n977color: \"emerald-500\",\\n978  },\\n979  {\\n980name: \"Deposit PSP2\",\\n981value: 30000,\\n982color: \"indigo-500\",\\n983  },\\n984  {\\n985name: \"Deposit PSP1\",\\n986value: 25000,\\n987color: \"sky-500\",\\n988  },\\n989  {\\n990name: \"Withdrawal\",\\n991value: 50000,\\n992color: \"red-500\",\\n993  },\\n994];\\n995\\n996const transactionData: Transaction[] = [\\n997  {\\n998id: \"7009\",\\n999type: \"deposit\",\\n1000description: \"Deposit cashier\",\\n1001amount: { currency: \"EUR\", value: 2.0 },\\n1002date: \"12/05/2024\",\\n1003time: \"14:24\",\\n1004status: \"completed\",\\n1005  },\\n1006  {\\n1007id: \"7009\",\\n1008type: \"deposit\",\\n1009description: \"Deposit cashier\",\\n1010amount: { currency: \"USD\", value: 980.0 },\\n1011date: \"12/05/2024\",\\n1012time: \"14:24\",\\n1013status: \"completed\",\\n1014  },\\n1015  {\\n1016id: \"7009\",\\n1017type: \"deposit\",\\n1018description: \"Deposit cashier card\",\\n1019amount: { currency: \"USD\", value: 80.0 },\\n1020date: \"12/05/2024\",\\n1021time: \"14:24\",\\n1022status: \"completed\",\\n1023  },\\n1024  {\\n1025id: \"7009\",\\n1026type: \"trade\",\\n1027description: \"Trade adjustment\",\\n1028amount: { currency: \"USD\", value: 10.0 },\\n1029date: \"12/05/2024\",\\n1030time: \"14:24\",\\n1031status: \"completed\",\\n1032  },\\n1033];\\n1034\\n1035const scheduleData: DaySchedule[] = [\\n1036  {\\n1037date: \"26th May 2024\",\\n1038dayName: \"Sunday\",\\n1039appointments: [\\n1040      {\\n1041time: \"15:08 - 15:38\",\\n1042userId: \"7004\",\\n1043type: \"calendar\",\\n1044hasReminder: true,\\n1045      },\\n1046      {\\n1047time: \"15:08 - 15:38\",\\n1048userId: \"7004\",\\n1049type: \"phone\",\\n1050hasReminder: true,\\n1051      },\\n1052      {\\n1053time: \"15:08 - 15:38\",\\n1054userId: \"7004\",\\n1055type: \"calendar\",\\n1056hasReminder: true,\\n1057      },\\n1058    ],\\n1059  },\\n1060  {\\n1061date: \"27th May 2024\",\\n1062dayName: \"Monday\",\\n1063appointments: [\\n1064      {\\n1065time: \"15:08 - 15:38\",\\n1066userId: \"7004\",\\n1067type: \"calendar\",\\n1068hasReminder: true,\\n1069      },\\n1070      {\\n1071time: \"15:08 - 15:38\",\\n1072userId: \"7004\",\\n1073type: \"calendar\",\\n1074hasReminder: true,\\n1075      },\\n1076    ],\\n1077  },\\n1078  {\\n1079date: \"28th May 2024\",\\n1080dayName: \"Tuesday\",\\n1081appointments: [\\n1082      {\\n1083time: \"15:08 - 15:38\",\\n1084userId: \"7004\",\\n1085type: \"calendar\",\\n1086hasReminder: true,\\n1087      },\\n1088      {\\n1089time: \"15:08 - 15:38\",\\n1090userId: \"7004\",\\n1091type: \"calendar\",\\n1092hasReminder: true,\\n1093      },\\n1094    ],\\n1095  },\\n1096  {\\n1097date: \"29th May 2024\",\\n1098dayName: \"Wednesday\",\\n1099appointments: [\\n1100      {\\n1101time: \"15:08 - 15:38\",\\n1102userId: \"7004\",\\n1103type: \"calendar\",\\n1104hasReminder: true,\\n1105      },\\n1106      {\\n1107time: \"15:08 - 15:38\",\\n1108userId: \"7004\",\\n1109type: \"calendar\",\\n1110hasReminder: true,\\n1111      },\\n1112    ],\\n1113  },\\n1114  {\\n1115date: \"30th May 2024\",\\n1116dayName: \"Thursday\",\\n1117appointments: [\\n1118      {\\n1119time: \"15:08 - 15:38\",\\n1120userId: \"7004\",\\n1121type: \"calendar\",\\n1122hasReminder: true,\\n1123      },\\n1124      {\\n1125time: \"15:08 - 15:38\",\\n1126userId: \"7004\",\\n1127type: \"calendar\",\\n1128hasReminder: true,\\n1129      },\\n1130    ],\\n1131  },\\n1132];\\n```\\n\\n![](https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/672e8c654a7f0e30a2f47c28_Homepage%20asset%20autolayout.avif)\\n![⟨4⟩ionize your Figma designs Learn in just 3 minutes](https://www.ion.design/<#>)\\n## Trusted by the world\\'s leading innovative teams\\n![](https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/673d024fcfa155293b8b6374_ion%20-%20Landed.avif)![](https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/673d0250d592f89503a7f246_ion%20-%20Numi.svg)![](https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/673d0250ff3eb6aeaea5bbc4_ion%20-%20Jumpshot.avif)![](https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/673d02503cd5d99903f1ebcd_ion%20-%20honeycomb.svg)![](https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/673d024f1feb08513f19b5b6_ion%20-%20NX.avif)\\nSomewhere\\nalong\\nthe\\nway,\\nturning\\ndesigns\\ninto\\ncode\\ngot\\ntoo\\ncomplicated.\\nWe\\nreimagined\\nit.\\nWith\\nion,\\ndesigners\\ntake\\nprojects\\nfurther\\nand\\nfree\\nup\\nengineers\\nto\\nfocus\\non\\nthe\\nbig\\nstuff.\\n## Build your frontend in minutes, not weeks\\nWhatever you\\'re designing, ion will turn it into clean, industry-leading code. Fast.\\n1Design in FigmaYou can use your existing design system and tokens to create designs where you already feel comfortable.⟨5⟩2Generate Code with ionion is connected to your company codebase. It’ll automatically use your components, style, and structure.⟨6⟩3Pull, integrate, and ShipCode connects directly to your developers’ github branches, so they can simply pull, integrate, and ship!⟨7⟩\\n### Design in Figma\\nYou can use your existing design system and tokens to create designs where you already feel comfortable.\\n![](https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/672f4ba7782ca88f7fe94f29_Gradient%20BG%20Process.avif)\\n### Generate Code with ion\\nion is connected to your company codebase. It’ll automatically use your components, style, and structure.\\n![](https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/672f4ba7782ca88f7fe94f29_Gradient%20BG%20Process.avif)\\n### Pull, integrate, and Ship\\nCode connects directly to your developers’ github branches, so they can simply pull, integrate, and ship!\\n![](https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/672f4ba7782ca88f7fe94f29_Gradient%20BG%20Process.avif)\\n## Save 10+ hours per week\\nDevelopers shouldn’t waste hours on styling. Let ion take care of the mundane for you.\\n### Understands your Codebase\\nion syncs with your existing libraries and components. No more tweaking or adjusting – just production-ready code straight from Figma.\\n```\\n1\"use client\";\\n2\\n3import Avatar from\"@/components/Avatar\";\\n4import Button from\"@/components/Button\";\\n5import Divider from\"@/components/Divider\";\\n6import Input from\"@/components/Input\";\\n7import Textarea from\"@/components/Textarea\";\\n8\\n9functionContactInformationCard() {\\n10const [address, setAddress] = useState(\"\");\\n11const [emailAddress, setEmailAddress] = useState(\"\");\\n12const [phoneNumber, setPhoneNumber] = useState(\"\");\\n13\\n14functionapplyChangesClickHandler(e: MouseEvent<HTMLButtonElement>) {\\n15    e.preventDefault();\\n16const requestData = {\\n17      address,\\n18      emailAddress,\\n19      phoneNumber,\\n20    };\\n21\\n22console.log(\"Sending data to API:\", requestData);\\n23\\n24// Simulate an API request25setTimeout(() => {\\n26console.log(\"API request successful:\", requestData);\\n27      alert(\"Changes applied successfully!\");\\n28    }, 1000);\\n29  }\\n30\\n31functiondiscardClickHandler(e: MouseEvent<HTMLButtonElement>) {\\n32    alert(\"discardClickHandler fired\");\\n33  }\\n34\\n35return (\\n36<divclassName=\"bg-white w-[400px] flex flex-col justify-center items-center gap-5 p-5 rounded-lg shadow-[0_4px_4px_0_rgba(0,0,0,0.25)]\">37<divclassName=\"w-fit flex flex-col items-center gap-4\">38<Avatar39subtitle=\"Enter your contact details for communication.\"40title=\"Contact Information\"41size=\"md\"42topStatus=\"plus\"43        />44<Divider />45<Input46placeholder=\"samraaj@ion.design\"47iconLeading={48            <EnvelopeSimplesize={16}weight={\"regular\"} />49          }\\n50          required\\n51          label=\"Email Address\"\\n52          showHintIcon\\n53          hint=\"Work email\"\\n54          value={emailAddress}\\n55          onChange={(e) => setEmailAddress(e.target.value)}\\n56          className=\"w-full\"\\n57        />\\n58<Input59placeholder=\"samraaj@ion.design\"60iconLeading={<Phonesize={16}weight={\"bold\"} />}\\n61          required\\n62          label=\"Phone Number\"\\n63          value={phoneNumber}\\n64          onChange={(e) => setPhoneNumber(e.target.value)}\\n65          className=\"w-full\"\\n66        />\\n67<Textarea68placeholder=\"301 main st\"69required70helper=\"(Mailing)\"71label=\"Address\"72showHintIcon73hint=\"Needed for HR records\"74value={address}75onChange={(e) => setAddress(e.target.value)}\\n76          className=\"w-full\"\\n77        />\\n78<divclassName=\"w-full flex items-center gap-5\">79<Button80variant=\"soft\"81color=\"neutral\"82size=\"md\"83onClick={discardClickHandler}84className=\"w-full\"85          >86            Discard\\n87</Button>88<Button89variant=\"filled\"90color=\"primary\"91size=\"md\"92onClick={applyChangesClickHandler}93className=\"w-full\"94          >95            Apply Changes\\n96</Button>97</div>98</div>99</div>100  );\\n101}\\n102exportdefault ContactInformationCard;\\n```\\n\\n### Pixel perfect, every time\\nReduce your development time by 30-50%. Get features live without delays, and move faster than your competition.\\n![](https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/67344904172887d636ac0f7e_bento%2002.svg)\\n### Iterate with Confidence\\nSync Figma updates automatically with pull requests and merge conflicts, clearing your backlog and letting the team focus on what matters.\\n![](https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/673456a3502d24b5aa176c1d_bento%2003.svg)\\n### Complex Components Made Easy\\nHandling conditional logic, state, and animations is now effortless. ion generates code that’s not just visually accurate but functionally sound.\\n![](https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/6734639417a7c998da101afb_bento%2004%20table.svg)![](https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/6734630a5cb0f01521f28433_bento%2004%20profiles.avif)\\n## What designers and engineers like you have to say\\n![](https://cdn.prod.website-files.com/672f25b15acb5e5a27bf6a65/6733affc12731325c9ac9dfe_Agree.png)\\nAgree Ahmed\\nCofounder, NUMI (YC W20)\\nOur shipping cadence has been unleashed since we started using Ion. And surprisingly, it\\'s improved the quality of our codebase and our final product. That\\'s because we can spend more time thinking about design and architecture and less time on UI and CSS. It\\'s hard for me to imagine going back.\\n![](https://cdn.prod.website-files.com/672f25b15acb5e5a27bf6a65/673bd548b85c3a772be26656_amar%20singh.jpeg)\\nAmar Singh\\nCEO, Nexavision Odds\\nI loved using ion, it saved me hours of time converting all my figma frames to my actual production site. It helped put our design and engineering in sync, even when our figma files changed. I was able to get very far before having to involve my engineering team at all.\\n![](https://cdn.prod.website-files.com/672f25b15acb5e5a27bf6a65/673bd59902b0fce0e6dd31de_akhil%20chandan.jpeg)\\nAkhil Chandan\\nCTO, Jumpshot Live\\nion unlocked the productivity of our team. We were able to knock out all of our backlog design fixes in our scheduling app without any extra development resources.\\n![](https://cdn.prod.website-files.com/672f25b15acb5e5a27bf6a65/6751e8b5f7ef9333ff43a899_landeed-logo.png)\\nZJ Lin\\nCo-founder, Landeed (YC S22)\\nWe’ve tried all design to code AI tools but Ion is the only one able to generate modular and responsive high quality code. This is the area that the foundational LLM’s do not do well yet but Ion does it brilliantly. We’ve so far saved hundreds of hours of engineering time. The Ion team is responsive to questions and almost work as an additional engineer and designer combined on the team. Highly recommend you try Ion now.\\n## Frequently Asked Questions\\nWhy use ion?\\n**Reduce Development Time -** stop switching between your editor & figma - instead you can focus on shipping features faster.\\n**Seamless Integration -** ion fits into your existing stack, working with your libraries and codebase to keep everything in sync.\\n**Effortless Scaling -** as you grow, ion ensures your workflow remains fast and efficient without sacrificing quality.\\nHow does ion work?\\nion intelligently maps your existing React components to Figma designs. It understands how to call them and recognizes your global variables, Tailwind CSS configurations, fonts, and styling setups to generate the best possible code for your use case.\\nWhat stacks does ion support?\\nWe support React, TypeScript, and Tailwind CSS. We also accommodate most component libraries—contact us for specifics.\\nWhat happens if designs get out of sync?\\nion allows you to generate pull requests for differences and merge conflicts when generating code in VS Code. This helps you iterate without constant development resource allocation.\\nDo I need to design with ion in mind?\\nion requires adherence to standard best practices like using auto-layout, avoiding fixed sizing, and maintaining consistent component structures. You can use dsLint to ensure your designs are compliant.\\nCan this replace my frontend engineer?\\nWe\\'re here to empower your development team, not replace it. While ion accelerates production, engineers are still essential for integrating business logic, architecture, and asynchronous data. Our AI helper can take you far, but not all the way.\\nHow does ion handle Figma variables?\\nWith ion, you can export variables from Figma and implement them into your codebase. Once integrated, ion automatically categorizes and utilizes them appropriately in code generation.\\nWhat models does ion use?\\nWe leverage a blend of off-the-shelf LLMs, including OpenAI\\'s GPT-4 & o1-mini and Anthropic’s Claude Sonnet 3.5, along with custom models to generate high-quality code efficiently and cost-effectively.\\nHow are you different than the competition?\\nion produces the highest quality code from Figma designs, taking you further than any other tool. Our mission is to create more design engineers and transform the industry.\\n\\u200d\\nOther Figma-to-code tools aren\\'t able to produce as high quality code as us because they don\\'t have the proper codebase context to write high-quality code tailored to your use case.\\n\\u200d\\nOther AI-based app builders aren\\'t built specifically for designers. We build for your tools and workflows to give you an unbeatable experience - for example we integrate with Figma to meet you where you\\'re already doing design work.\\n## Experience the speed of ion\\nGet started for free. Turn your designs into code in seconds and unleash the full power of your team.\\nStart Shipping FasterStart Shipping Faster⟨3⟩\\n![](https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/672e22faf2f50dd0d3288e6c_BG%20pattern.svg)\\n[](https://www.ion.design/</>)\\nPricing⟨2⟩Contact us\\n[](https://www.ion.design/<#>)\\n[](https://www.ion.design/<#>) ⟨8⟩\\n[](https://www.ion.design/<#>)\\n[](https://www.ion.design/<#>) ⟨9⟩\\n© 2025 ion design.\\nTerms of Service⟨10⟩\\n![](https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/672e22faf2f50dd0d3288e6c_BG%20pattern.svg)![](https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/672e2303660a4c9bdeaa5241_BG%20Gradient.svg)\\n' references_markdown='\\n\\n## References\\n\\n⟨1⟩ https://www.ion.design/</blog>: Blog\\n⟨2⟩ https://www.ion.design/</pricing>: Pricing\\n⟨3⟩ https://www.ion.design/<https:/app.ion.design/>: Get started\\n⟨4⟩ https://cdn.prod.website-files.com/672bc5d0e905fb18fa13c757/672f18b009fe44d51632cb52_lightbox%20thumbnail.avif: ![\\n⟨5⟩ https://www.ion.design/<#w-tabs-0-data-w-pane-0>: 1Design in FigmaYou can use your existing design system and tokens to create designs where you already feel comfortable.\\n⟨6⟩ https://www.ion.design/<#w-tabs-0-data-w-pane-1>: 2Generate Code with ionion is connected to your company codebase. It’ll automatically use your components, style, and structure.\\n⟨7⟩ https://www.ion.design/<#w-tabs-0-data-w-pane-2>: 3Pull, integrate, and ShipCode connects directly to your developers’ github branches, so they can simply pull, integrate, and ship!\\n⟨8⟩ https://www.ion.design/<https:/x.com/iondotdesign>:  \\n⟨9⟩ https://www.ion.design/<https:/www.linkedin.com/company/ion-dot-design/>:  \\n⟨10⟩ https://www.ion.design/<#>: Terms of Service\\n' fit_markdown='' fit_html=''",
  "generated_description": "**Company Overview: ion design**\n\nFounded in 2023 and positioned in the bustling tech hub of San Francisco, ion design is an innovative startup redefining front-end development. As a participant in Y Combinator's Winter 2024 batch, it aims to consolidate the workflow between design and development with its tagline: \"Your front end team in a box.\" \n\n**What They Do:**\nAt its core, ion is all about automation and efficiency for early-stage companies. The platform allows teams to turn their Figma designs into a tailored React codebase swiftly and seamlessly. By simply describing a user interface (UI) in text or adjusting design specifications in Figma, users can receive corresponding code that aligns beautifully with their existing design systems. This means less time is wasted interpreting design elements, and teams can focus on building their product.\n\n**How it Works:**\n1. **Design Description to Code**: Startups can input simple text descriptions or design requests, and in return, the ion platform generates precise React code.\n2. **Figma Integration**: Once a company has scaled up and potentially hired design talent, ion transforms Figma designs—leveraging the company’s unique design system—into clean and manageable React code.\n3. **Component Reuse**: It smartly reuses existing components and code variables, thus integrating with the developer's workflow and automatically generating pull requests (PRs) for any necessary code updates or conflicts arising from design changes.\n\n**The Team**: With a compact, agile team of two, ion design operates under the experienced guidance of Dalton Caldwell, a Group Partner at Y Combinator. \n\n**Why Choose ion?** \nThe company positions itself as more than just a code conversion tool. By reducing the repetitive and often cumbersome tasks involved in front-end development, ion empowers designers and developers to enhance productivity and focus on the larger picture—building scalable, innovative products.\n\n**Key Features:**\n- Quick turnaround time from design to code.\n- Seamless integration with the established coding environment.\n- Significant time savings—averaging 10+ hours per week for developers—allowing them to escape the mundane aspects of styling.\n\n**In Summary:**\nion design is not just another software tool; it's a transformative platform that bridges the gap between design and development, fostering efficiency and quality in the coding process. If you're in the early stages of building and looking to streamline your design-to-development pipeline, ion might just be the game-changer you need.\n\nFor more information, check out their website [ion.design](https://www.ion.design/)."
}