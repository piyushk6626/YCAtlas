{
  "links": "https://www.ycombinator.com/companies/datacurve",
  "name": "Datacurve",
  "headline": "Frontier coding data for training and evaluating LLMs",
  "batch": "W24",
  "description": "We generate expert quality coding data at scale for fine-tuning LLMs",
  "activity_status": "Active",
  "website": "https://datacurve.ai/",
  "founded_date": 2024.0,
  "team_size": 4.0,
  "location": "San Francisco",
  "group_partner": "Garry Tan",
  "group_partner_yc": "https://www.ycombinator.com/people/garry-tan",
  "company_linkedin": null,
  "company_twitter": null,
  "tags": "location:san-francisco-bay-area",
  "founders": [
    {
      "name": "Serena Ge, Founder",
      "description": "Started building software in high school - built a climbing training app with Team Canada athletes. Studied at Waterloo CS for a year then dropped out. Worked with the Cohere CTO on LLM reasoning and coding capabilities through synthetic data. Went to YC W24, pivoted 3 times until Datacurve. Now scaling high quality coding data production pipelines at Datacurve to enable next generation coding models",
      "linkedin": "https://linkedin.com/in/serena-ge-4583731b4"
    },
    {
      "name": "Charley Lee, Founder",
      "description": "Coding since 14, going on to study CS at UWaterloo for a year. Interned at Google, and trained billion parameter models on the side. Now co-founder of Datacurve.",
      "linkedin": "https://linkedin.com/in/charley-lee"
    }
  ],
  "status": true,
  "markdown": "raw_markdown='[Your Company![](https://datacurve.ai/logo.svg)](https://datacurve.ai/<#>)\\n[Schedule a Call](https://datacurve.ai/<https:/calendly.com/serena-datacurve/meetingbooking>)\\n# Premium curated coding data for applications and LLMs\\nProviding code data vetted by the best engineers, so you can build the most capable model or application\\n[Schedule a Call](https://datacurve.ai/<https:/calendly.com/serena-datacurve/meetingbooking>)\\nBacked by![](https://datacurve.ai/ycombinator.svg)\\nFor Generative AI Developer Tools\\nData to Build Better Generative Developer Tools\\n  * Intelligent coding copilot integrated IDEs\\nAI powered developer tools/extensions for code editors\\n  * Repository-wide automatic PRs from Github issues\\nGithub Issue to PR generation for multi-file changes\\n  * Design to code generation\\nFigma design or screenshot to pretty, well-structured React code\\n  * Framework-specific optimized code generation\\nHigh performance CUDA code generation and completion\\n\\n\\nFor Foundational Model Research Labs\\nData to Achieve New SOTA Coding Capabilities\\n  * Sophisticated coding problems beyond current model capabilities\\nAdvanced problem solving in every language and framework for intelligence and reasoning skills.\\n  * New frameworks, breaking changes from frameworks and libraries\\nKeep up-to-date with the latest updates in coding frameworks and libraries\\n  * Details, specific features for languages, frameworks, and libraries\\nTraining models on advanced details of languages and frameworks\\n  * Intermediary debugging and coding processes\\nGet reasoning chains for debugging and the problem solving processes\\n\\n\\n\"High-quality data is directly linked to improved model accuracy, robustness, and generalizability in machine learning models\" - A. Soni et al, 2023\\n\"phi-1, at 1/135 the size of peers like GPT-3.5, CodeGeeX, and PaLM-Coder, outperforms by up to 3.6% through training on \\'textbook-quality\\' data.\" - Gunasekar et al, Microsoft Research, 2023\\nCompared to models finetuned on unfiltered datasets, models finetuned on premium instruction-following data perform better on 42.5% cases - Cao et al, 2023\\nA 50% decreased in feature quality resulted in a significant 10% drop in F1 scores for linear models, highlighting the critical role of data integrity in ensuring effective model predictions - Budach et al, 2023\\n# Data quality can make or break your model. Settle for no less than perfect with our intelligent data pipeline and world-class annotators.\\n## Talented software engineer annotation workforce\\nWe work with seasoned developers, industry professionals, and researchers across North America with subject-matter expertise across the board.\\n*Fictitious names and images used. All education and work experiences are verified.\\n### Kenny\\nFounding Engineer @ A16Z-backed startup\\n  * Ex-Data Scientist @ Deloitte\\n  * Research Engineer @ MIT\\n  * Research Assistant @ Harvard Med\\n  * ML Engineer @ IDUN\\n\\n\\nCC++GolangPython\\n### Jason\\nSoftware Engineer\\n  * SWE @ ETHGlobal\\n  * Ex-SWE @ RBC\\n  * Ex-SWE @ Momento\\n  * 3.94 GPA Bachelor of Computer Science UWaterloo\\n\\n\\nJavaGolangTypeScriptJavaScriptPythonC++PostgreSQLRHTMLCSSFrameworks: ReactNode.jsNext.jsDeveloper Tools: TerraformLinuxGitGithubDockerKubernetesGithub ActionsAWSGCP\\n### Kevin\\nCompetitive Programmer\\n  * 3rd in 2022 ICPC East Central NA Regional Contest\\n  * 4th in 2023 ICPC East Central NA Regional Contest\\n  * Algorithm engineer intern at LispLogics\\n  * Canadian Computing Olympiad 2022 Silver Medalist\\n  * 1st Place on CCC Senior 2021, 2022\\n\\n\\nCC++GolangPythonTypescriptJavascript\\nCurious why the top engineers choose our annotation platform?\\n[Schedule a Call About Our Platform](https://datacurve.ai/<https:/calendly.com/serena-datacurve/meetingbooking>)\\n## How we create high quality data\\nDefine your use case, and we\\'ll take care of the rest.\\n1\\nFibonacci.py\\n> def fibonacci(n): # Base case if n <= 1: return n else: # Recursive case return(fibonacci(n-1) + fibonacci(n-2)) # Example usage print(fibonacci(10))\\nToDoList.js\\n> document.addEventListener(\\'DOMContentLoaded\\', () => { document.getElementById(\\'add-task\\').onclick = function() { let task = document.getElementById(\\'new-task\\').value; let li = document.createElement(\\'li\\'); li.textContent = task; document.getElementById(\\'tasks\\').appendChild(li); }; });\\nlanding.html\\n> <!DOCTYPE html> <html> <head> <title>Simple Page</title> <style> body { font-family: Arial, sans-serif; margin: 20px; } header { color: #2E2E2E; margin-bottom: 20px; } footer { color: #787878; margin-top: 20px; } </style> </head>\\nUserData.sql\\n> SELECT FirstName, LastName, Email FROM Users WHERE IsActive = 1 ORDER BY LastName;\\nQuickSort.cpp\\n> #include <iostream> void quickSort(int arr[], int left, int right) { int i = left, j = right; int tmp; int pivot = arr[(left + right) / 2]; /* partition */ while (i <= j) { while (arr[i] < pivot) i++;\\nFibonacci.py\\n> def fibonacci(n): # Base case if n <= 1: return n else: # Recursive case return(fibonacci(n-1) + fibonacci(n-2)) # Example usage print(fibonacci(10))\\nToDoList.js\\n> document.addEventListener(\\'DOMContentLoaded\\', () => { document.getElementById(\\'add-task\\').onclick = function() { let task = document.getElementById(\\'new-task\\').value; let li = document.createElement(\\'li\\'); li.textContent = task; document.getElementById(\\'tasks\\').appendChild(li); }; });\\nlanding.html\\n> <!DOCTYPE html> <html> <head> <title>Simple Page</title> <style> body { font-family: Arial, sans-serif; margin: 20px; } header { color: #2E2E2E; margin-bottom: 20px; } footer { color: #787878; margin-top: 20px; } </style> </head>\\nUserData.sql\\n> SELECT FirstName, LastName, Email FROM Users WHERE IsActive = 1 ORDER BY LastName;\\nQuickSort.cpp\\n> #include <iostream> void quickSort(int arr[], int left, int right) { int i = left, j = right; int tmp; int pivot = arr[(left + right) / 2]; /* partition */ while (i <= j) { while (arr[i] < pivot) i++;\\nFibonacci.py\\n> def fibonacci(n): # Base case if n <= 1: return n else: # Recursive case return(fibonacci(n-1) + fibonacci(n-2)) # Example usage print(fibonacci(10))\\nToDoList.js\\n> document.addEventListener(\\'DOMContentLoaded\\', () => { document.getElementById(\\'add-task\\').onclick = function() { let task = document.getElementById(\\'new-task\\').value; let li = document.createElement(\\'li\\'); li.textContent = task; document.getElementById(\\'tasks\\').appendChild(li); }; });\\nlanding.html\\n> <!DOCTYPE html> <html> <head> <title>Simple Page</title> <style> body { font-family: Arial, sans-serif; margin: 20px; } header { color: #2E2E2E; margin-bottom: 20px; } footer { color: #787878; margin-top: 20px; } </style> </head>\\nUserData.sql\\n> SELECT FirstName, LastName, Email FROM Users WHERE IsActive = 1 ORDER BY LastName;\\nQuickSort.cpp\\n> #include <iostream> void quickSort(int arr[], int left, int right) { int i = left, j = right; int tmp; int pivot = arr[(left + right) / 2]; /* partition */ while (i <= j) { while (arr[i] < pivot) i++;\\nFibonacci.py\\n> def fibonacci(n): # Base case if n <= 1: return n else: # Recursive case return(fibonacci(n-1) + fibonacci(n-2)) # Example usage print(fibonacci(10))\\nToDoList.js\\n> document.addEventListener(\\'DOMContentLoaded\\', () => { document.getElementById(\\'add-task\\').onclick = function() { let task = document.getElementById(\\'new-task\\').value; let li = document.createElement(\\'li\\'); li.textContent = task; document.getElementById(\\'tasks\\').appendChild(li); }; });\\nlanding.html\\n> <!DOCTYPE html> <html> <head> <title>Simple Page</title> <style> body { font-family: Arial, sans-serif; margin: 20px; } header { color: #2E2E2E; margin-bottom: 20px; } footer { color: #787878; margin-top: 20px; } </style> </head>\\nUserData.sql\\n> SELECT FirstName, LastName, Email FROM Users WHERE IsActive = 1 ORDER BY LastName;\\nQuickSort.cpp\\n> #include <iostream> void quickSort(int arr[], int left, int right) { int i = left, j = right; int tmp; int pivot = arr[(left + right) / 2]; /* partition */ while (i <= j) { while (arr[i] < pivot) i++;\\n### Tell us about your data needs or run a code benchmark with us to assesss model weakness areas.\\nDetermine data needs internally or with our private benchmark.\\n2\\n### Kick off data creation by the smartest talents on our gamified platform\\nWorld class engineers generate and label data on our gamified platform\\n3\\nThe optimal React code is...\\nfunction\\nPerfectCode()\\n{...\\n### Robust system for automatic and human quality assurance.\\nLayers of QA from both automatic pipelines and human evaluations to reach perfection in data quality\\n4\\n![](https://datacurve.ai/f406.svg)\\n### Receive visible data delivered with benchmarks in our dataset viewer\\nDevelop confidence in data quality metrics and standards, with unlimited revisions as needed\\n## The three pillars of our data standard\\nWhat we strive for each time we provide our datasets.\\nAccuracy\\n    Every single data point must be perfect.\\nDiversity\\n    Diverse data to cover every edge case.\\nScalability\\n    Providing data volume fit for any demand.\\n# Build the most capable code model with the highest quality data \\n[Schedule a Call](https://datacurve.ai/<https:/calendly.com/serena-datacurve/meetingbooking>)\\n[About](https://datacurve.ai/<https:/www.ycombinator.com/companies/datacurve>)\\n[YCombinator](https://datacurve.ai/<https:/www.ycombinator.com/launches/KaH-datacurve-high-quality-code-data-to-train-foundation-models>)\\n[Jobs](https://datacurve.ai/<https:/www.ycombinator.com/companies/datacurve/jobs>)\\n[LinkedIn](https://datacurve.ai/<https:/www.linkedin.com/company/datacurveai/about/>)[YC](https://datacurve.ai/<https:/www.ycombinator.com/launches/KaH-datacurve-high-quality-code-data-to-train-foundation-models>)\\n© 2024 Datacurve AI Inc. All rights reserved.\\n' markdown_with_citations='Your Company![⟨1⟩](https://datacurve.ai/<#>)\\nSchedule a Call⟨2⟩\\n# Premium curated coding data for applications and LLMs\\nProviding code data vetted by the best engineers, so you can build the most capable model or application\\nSchedule a Call⟨2⟩\\nBacked by![](https://datacurve.ai/ycombinator.svg)\\nFor Generative AI Developer Tools\\nData to Build Better Generative Developer Tools\\n  * Intelligent coding copilot integrated IDEs\\nAI powered developer tools/extensions for code editors\\n  * Repository-wide automatic PRs from Github issues\\nGithub Issue to PR generation for multi-file changes\\n  * Design to code generation\\nFigma design or screenshot to pretty, well-structured React code\\n  * Framework-specific optimized code generation\\nHigh performance CUDA code generation and completion\\n\\n\\nFor Foundational Model Research Labs\\nData to Achieve New SOTA Coding Capabilities\\n  * Sophisticated coding problems beyond current model capabilities\\nAdvanced problem solving in every language and framework for intelligence and reasoning skills.\\n  * New frameworks, breaking changes from frameworks and libraries\\nKeep up-to-date with the latest updates in coding frameworks and libraries\\n  * Details, specific features for languages, frameworks, and libraries\\nTraining models on advanced details of languages and frameworks\\n  * Intermediary debugging and coding processes\\nGet reasoning chains for debugging and the problem solving processes\\n\\n\\n\"High-quality data is directly linked to improved model accuracy, robustness, and generalizability in machine learning models\" - A. Soni et al, 2023\\n\"phi-1, at 1/135 the size of peers like GPT-3.5, CodeGeeX, and PaLM-Coder, outperforms by up to 3.6% through training on \\'textbook-quality\\' data.\" - Gunasekar et al, Microsoft Research, 2023\\nCompared to models finetuned on unfiltered datasets, models finetuned on premium instruction-following data perform better on 42.5% cases - Cao et al, 2023\\nA 50% decreased in feature quality resulted in a significant 10% drop in F1 scores for linear models, highlighting the critical role of data integrity in ensuring effective model predictions - Budach et al, 2023\\n# Data quality can make or break your model. Settle for no less than perfect with our intelligent data pipeline and world-class annotators.\\n## Talented software engineer annotation workforce\\nWe work with seasoned developers, industry professionals, and researchers across North America with subject-matter expertise across the board.\\n*Fictitious names and images used. All education and work experiences are verified.\\n### Kenny\\nFounding Engineer @ A16Z-backed startup\\n  * Ex-Data Scientist @ Deloitte\\n  * Research Engineer @ MIT\\n  * Research Assistant @ Harvard Med\\n  * ML Engineer @ IDUN\\n\\n\\nCC++GolangPython\\n### Jason\\nSoftware Engineer\\n  * SWE @ ETHGlobal\\n  * Ex-SWE @ RBC\\n  * Ex-SWE @ Momento\\n  * 3.94 GPA Bachelor of Computer Science UWaterloo\\n\\n\\nJavaGolangTypeScriptJavaScriptPythonC++PostgreSQLRHTMLCSSFrameworks: ReactNode.jsNext.jsDeveloper Tools: TerraformLinuxGitGithubDockerKubernetesGithub ActionsAWSGCP\\n### Kevin\\nCompetitive Programmer\\n  * 3rd in 2022 ICPC East Central NA Regional Contest\\n  * 4th in 2023 ICPC East Central NA Regional Contest\\n  * Algorithm engineer intern at LispLogics\\n  * Canadian Computing Olympiad 2022 Silver Medalist\\n  * 1st Place on CCC Senior 2021, 2022\\n\\n\\nCC++GolangPythonTypescriptJavascript\\nCurious why the top engineers choose our annotation platform?\\nSchedule a Call About Our Platform⟨2⟩\\n## How we create high quality data\\nDefine your use case, and we\\'ll take care of the rest.\\n1\\nFibonacci.py\\n> def fibonacci(n): # Base case if n <= 1: return n else: # Recursive case return(fibonacci(n-1) + fibonacci(n-2)) # Example usage print(fibonacci(10))\\nToDoList.js\\n> document.addEventListener(\\'DOMContentLoaded\\', () => { document.getElementById(\\'add-task\\').onclick = function() { let task = document.getElementById(\\'new-task\\').value; let li = document.createElement(\\'li\\'); li.textContent = task; document.getElementById(\\'tasks\\').appendChild(li); }; });\\nlanding.html\\n> <!DOCTYPE html> <html> <head> <title>Simple Page</title> <style> body { font-family: Arial, sans-serif; margin: 20px; } header { color: #2E2E2E; margin-bottom: 20px; } footer { color: #787878; margin-top: 20px; } </style> </head>\\nUserData.sql\\n> SELECT FirstName, LastName, Email FROM Users WHERE IsActive = 1 ORDER BY LastName;\\nQuickSort.cpp\\n> #include <iostream> void quickSort(int arr[], int left, int right) { int i = left, j = right; int tmp; int pivot = arr[(left + right) / 2]; /* partition */ while (i <= j) { while (arr[i] < pivot) i++;\\nFibonacci.py\\n> def fibonacci(n): # Base case if n <= 1: return n else: # Recursive case return(fibonacci(n-1) + fibonacci(n-2)) # Example usage print(fibonacci(10))\\nToDoList.js\\n> document.addEventListener(\\'DOMContentLoaded\\', () => { document.getElementById(\\'add-task\\').onclick = function() { let task = document.getElementById(\\'new-task\\').value; let li = document.createElement(\\'li\\'); li.textContent = task; document.getElementById(\\'tasks\\').appendChild(li); }; });\\nlanding.html\\n> <!DOCTYPE html> <html> <head> <title>Simple Page</title> <style> body { font-family: Arial, sans-serif; margin: 20px; } header { color: #2E2E2E; margin-bottom: 20px; } footer { color: #787878; margin-top: 20px; } </style> </head>\\nUserData.sql\\n> SELECT FirstName, LastName, Email FROM Users WHERE IsActive = 1 ORDER BY LastName;\\nQuickSort.cpp\\n> #include <iostream> void quickSort(int arr[], int left, int right) { int i = left, j = right; int tmp; int pivot = arr[(left + right) / 2]; /* partition */ while (i <= j) { while (arr[i] < pivot) i++;\\nFibonacci.py\\n> def fibonacci(n): # Base case if n <= 1: return n else: # Recursive case return(fibonacci(n-1) + fibonacci(n-2)) # Example usage print(fibonacci(10))\\nToDoList.js\\n> document.addEventListener(\\'DOMContentLoaded\\', () => { document.getElementById(\\'add-task\\').onclick = function() { let task = document.getElementById(\\'new-task\\').value; let li = document.createElement(\\'li\\'); li.textContent = task; document.getElementById(\\'tasks\\').appendChild(li); }; });\\nlanding.html\\n> <!DOCTYPE html> <html> <head> <title>Simple Page</title> <style> body { font-family: Arial, sans-serif; margin: 20px; } header { color: #2E2E2E; margin-bottom: 20px; } footer { color: #787878; margin-top: 20px; } </style> </head>\\nUserData.sql\\n> SELECT FirstName, LastName, Email FROM Users WHERE IsActive = 1 ORDER BY LastName;\\nQuickSort.cpp\\n> #include <iostream> void quickSort(int arr[], int left, int right) { int i = left, j = right; int tmp; int pivot = arr[(left + right) / 2]; /* partition */ while (i <= j) { while (arr[i] < pivot) i++;\\nFibonacci.py\\n> def fibonacci(n): # Base case if n <= 1: return n else: # Recursive case return(fibonacci(n-1) + fibonacci(n-2)) # Example usage print(fibonacci(10))\\nToDoList.js\\n> document.addEventListener(\\'DOMContentLoaded\\', () => { document.getElementById(\\'add-task\\').onclick = function() { let task = document.getElementById(\\'new-task\\').value; let li = document.createElement(\\'li\\'); li.textContent = task; document.getElementById(\\'tasks\\').appendChild(li); }; });\\nlanding.html\\n> <!DOCTYPE html> <html> <head> <title>Simple Page</title> <style> body { font-family: Arial, sans-serif; margin: 20px; } header { color: #2E2E2E; margin-bottom: 20px; } footer { color: #787878; margin-top: 20px; } </style> </head>\\nUserData.sql\\n> SELECT FirstName, LastName, Email FROM Users WHERE IsActive = 1 ORDER BY LastName;\\nQuickSort.cpp\\n> #include <iostream> void quickSort(int arr[], int left, int right) { int i = left, j = right; int tmp; int pivot = arr[(left + right) / 2]; /* partition */ while (i <= j) { while (arr[i] < pivot) i++;\\n### Tell us about your data needs or run a code benchmark with us to assesss model weakness areas.\\nDetermine data needs internally or with our private benchmark.\\n2\\n### Kick off data creation by the smartest talents on our gamified platform\\nWorld class engineers generate and label data on our gamified platform\\n3\\nThe optimal React code is...\\nfunction\\nPerfectCode()\\n{...\\n### Robust system for automatic and human quality assurance.\\nLayers of QA from both automatic pipelines and human evaluations to reach perfection in data quality\\n4\\n![](https://datacurve.ai/f406.svg)\\n### Receive visible data delivered with benchmarks in our dataset viewer\\nDevelop confidence in data quality metrics and standards, with unlimited revisions as needed\\n## The three pillars of our data standard\\nWhat we strive for each time we provide our datasets.\\nAccuracy\\n    Every single data point must be perfect.\\nDiversity\\n    Diverse data to cover every edge case.\\nScalability\\n    Providing data volume fit for any demand.\\n# Build the most capable code model with the highest quality data \\nSchedule a Call⟨2⟩\\nAbout⟨3⟩\\nYCombinator⟨4⟩\\nJobs⟨5⟩\\nLinkedIn⟨6⟩YC⟨4⟩\\n© 2024 Datacurve AI Inc. All rights reserved.\\n' references_markdown='\\n\\n## References\\n\\n⟨1⟩ https://datacurve.ai/logo.svg: Your Company![\\n⟨2⟩ https://datacurve.ai/<https:/calendly.com/serena-datacurve/meetingbooking>: Schedule a Call\\n⟨3⟩ https://datacurve.ai/<https:/www.ycombinator.com/companies/datacurve>: About\\n⟨4⟩ https://datacurve.ai/<https:/www.ycombinator.com/launches/KaH-datacurve-high-quality-code-data-to-train-foundation-models>: YCombinator\\n⟨5⟩ https://datacurve.ai/<https:/www.ycombinator.com/companies/datacurve/jobs>: Jobs\\n⟨6⟩ https://datacurve.ai/<https:/www.linkedin.com/company/datacurveai/about/>: LinkedIn\\n' fit_markdown='' fit_html=''",
  "generated_description": "### Datacurve: Frontier Coding Data for LLMs\n\n**Overview**\nFounded in 2024 and based in San Francisco, Datacurve is a Y Combinator W24 company dedicated to providing premium, curated coding data specifically designed for training and evaluating large language models (LLMs). With a lean team of four, the company is positioned at the forefront of generative AI technology.\n\n**Mission**\nDatacurve’s mission revolves around creating expert-quality coding data at scale. It aims to enhance the performance of applications and models through superior training data. By bridging the gap between high-quality data and advanced AI capabilities, Datacurve is reshaping how developers and researchers approach model training.\n\n**Key Features and Offerings**\nDatacurve offers a suite of tools and services aimed primarily at:\n- **Generative AI Developer Tools**: This includes intelligent coding copilot integrations for IDEs, automatic pull requests from GitHub issues, and design-to-code solutions, particularly for frameworks like React.\n- **Foundational Model Research Labs**: The company provides sophisticated datasets that challenge current LLM capabilities, focusing on solving complex coding problems across various frameworks and languages.\n\n**Data Quality Assurance**\n\"High-quality data is directly linked to improved model accuracy, robustness, and generalizability.\" With a thorough vetting process, Datacurve leverages a talented workforce of software engineers, ensuring that every data point meets high standards for accuracy, diversity, and scalability.\n\nEach dataset is subjected to rigorous quality assurance through a combination of automated processes and human evaluations, creating a robust system for data integrity. This not only enhances the model's performance but also increases the confidence of developers in the datasets.\n\n**Team and Leadership**\nThe team includes seasoned developers with backgrounds in top-tier companies and universities, ensuring that the data annotation is managed by professionals who understand the intricate needs of coding data. Garry Tan serves as the group partner, lending his expertise and vision to the company's strategic direction.\n\n**Call to Action**\nIf you're interested in exploring how Datacurve can assist with your coding data needs or if you want to benchmark your models, [schedule a call](https://datacurve.ai/<https:/calendly.com/serena-datacurve/meetingbooking>) for a personalized discussion. \n\nFor more information, visit their website at [datacurve.ai](https://datacurve.ai/)."
}