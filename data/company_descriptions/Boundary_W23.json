{
  "links": "https://www.ycombinator.com/companies/boundary",
  "name": "Boundary",
  "headline": "Function calling that's cheaper, faster, and better, on every model",
  "batch": "W23",
  "description": "Boundary makes tools to build the most reliable AI pipelines. We take a code first approach and everything lives in your code, and runs locally (completely open-source!).\r\n\nInstead of function-calling on openai and JSON.parse, our approach allows you to write shorter prompts that lead to more accurate results. No fine-tuning. No modifying the model.\r\nThat means less time prompt engineering to get the same quality results.\r\n\nRecently, we showed that our method makes GPT-3.5, GPT-4o-mini, and Claude-Haiku perform at the same level as GPT-4o without (of course GPT-4o gets better with us as well). Read more here: https://www.boundaryml.com/blog/sota-function-calling\r\n\nBoundary is composed of three main components:\r\n\n1. BAML - a simple programming language to get structured outputs from LLMs.\r\n2. BAML Playground - The first-ever VSCode playground for LLMs, that helps developers test and iterate on their AI functions.\r\n3. Boundary Studio - An analytics dashboard to trace, label, and measure performance.\r\n\nBoundary's mission is to make AI app development seamless, and supports the entire development journey, from initial prompt iteration to measuring performance post-deployment.",
  "activity_status": "Active",
  "website": "https://www.boundaryml.com",
  "founded_date": 2023.0,
  "team_size": 3.0,
  "location": "Seattle, WA",
  "group_partner": "Dalton Caldwell",
  "group_partner_yc": "https://www.ycombinator.com/people/dalton-caldwell",
  "company_linkedin": null,
  "company_twitter": null,
  "tags": "industry:artificial-intelligence; industry:developer-tools; industry:generative-ai; industry:machine-learning; industry:ai; location:seattle",
  "founders": [
    {
      "name": "Vaibhav Gupta, Founder",
      "description": "Vaibhav is a software engineer with over 7 years of experience building innovative products. At Microsoft, he worked on realtime 3D reconstruction for HoloLens, gaining expertise in computer vision and 3D graphics. At Google, he led performance optimization on ARCore and Face ID, significantly improving latency and quality. Now he's bringing that same experience to help bring better quality and speed to Generative AI technology. For talking anything Computer Vision/AI/Performance, reach out!",
      "linkedin": "https://www.linkedin.com/in/vaigup/"
    },
    {
      "name": "Aaron Villalpando Gonzalez, Founder",
      "description": "Aaron has worked for the better part of a decade scaling out distributed systems at AWS and launching full-stack consumer facing products at Prime Video. He is now passionate about building scalable ML infrastructure and the best developer experience at Gloo.",
      "linkedin": "https://www.linkedin.com/in/aaron-villalpando-99284576/"
    }
  ],
  "status": true,
  "markdown": "raw_markdown=\"[![Boundary AI logo](https://www.boundaryml.com/_next/image?url=%2Fboundarylogo.png&w=384&q=75)](https://www.boundaryml.com/</>)\\n[Demos](https://www.boundaryml.com/<https:/baml-examples.vercel.app/examples/rag>)[Documentation](https://www.boundaryml.com/<https:/docs.boundaryml.com>)[Blog](https://www.boundaryml.com/</blog>)[Changelog](https://www.boundaryml.com/<https:/github.com/BoundaryML/baml/blob/canary/CHANGELOG.md>)\\n[Star on GitHub539](https://www.boundaryml.com/<https:/github.com/boundaryml/baml>)\\n[![Discord community](https://www.boundaryml.com/discord-icon.svg)](https://www.boundaryml.com/<https:/discord.gg/yzaTpQ3tdT>)\\nOpen main menu\\n[Check out Launch Week 2025 →](https://www.boundaryml.com/</launchweek>)\\n![Baml Lamb mascot](https://www.boundaryml.com/_next/image?url=%2Fbaml-logo-lamb1.png&w=256&q=75)\\nBAML is an expressive language for structured text generation\\n[▶ BAML Playground](https://www.boundaryml.com/<https:/promptfiddle.com>)[Get started→](https://www.boundaryml.com/<https:/docs.boundaryml.com>)\\n```\\n$ pip install baml-py\\n```\\n\\nBacked by\\n[![YC Logo](https://www.boundaryml.com/_next/image?url=%2Fyclogo.png&w=256&q=75)](https://www.boundaryml.com/<https:/www.ycombinator.com/>)\\nTrusted by developers at\\n![Aer Compliance](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Faer_compliance_logo.png&w=3840&q=75)\\n![PMMI](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Flogos%2Fpmmi.png&w=3840&q=75)\\n![Product Hunt](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Flogos%2Fproduct-hunt.png&w=3840&q=75)\\n![SAP](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Flogos%2FsapLogo.png&w=3840&q=75)\\n![AI Tinkerers](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Flogos%2Fai-tinkerers.png&w=3840&q=75)\\n![Cerebral Valley](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Flogos%2Fcerebral.png&w=3840&q=75)\\n![Vetrec](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Flogos%2Fvetrec.png&w=3840&q=75)\\nForget JSON.parse(). BAML's parser was built for LLMs\\nJSON error correction\\nLLM yapping immunity\\nSchema coercion\\nBAML fixes broken JSON like trailing commas, unquoted keys, unescaped quotes, new lines, and even fractions.\\nanalyze-repo.baml\\n![llm yapping](https://www.boundaryml.com/parser/llm-fix/llm-fix-1.svg)\\nLLM output\\n![llm yapping](https://www.boundaryml.com/parser/llm-fix/llm-fix-2.svg)\\n![BAML](https://www.boundaryml.com/baml-logo-lamb1.svg)\\nParsed Response\\n![llm yapping](https://www.boundaryml.com/parser/llm-fix/llm-fix-3.svg)\\nFunction-calling for every model, in your favorite language\\n![BAML](https://www.boundaryml.com/baml-logo-lamb1.svg)![Rust Crab](https://www.boundaryml.com/rust-crab.svg)\\nAll models get better with BAML\\nBAML achieves state-of-the-art results in function-calling with GPT 3.5 over all other models and techniques, including OpenAI's new [strict structured outputs](https://www.boundaryml.com/<https:/openai.com/index/introducing-structured-outputs-in-the-api/>)\\n.42%\\nOverall Score (Sonnet3.5)\\n+\\n.17%\\nGain for GPT35\\nBerkeley Function-Calling Benchmark (Overall Score)\\nOverall Score0255075100BAML + Claude 3.5 SonnetBAML + GPT-4o-2024-08-06GPT-4o (2024-08-06) FCBAML + GPT-4o MiniGPT-4o (2024-08-06) FC StrictBAML + GPT-3.5 Turbo 0125BAML + Claude 3 HaikuGPT-4o Mini FC StrictGPT-4o Mini FCGPT-3.5 Turbo FC StrictClaude 3.5 Sonnet FCGPT-3.5 Turbo FCClaude 3 Haiku FC\\n[Learn more about the BFCL Benchmark→](https://www.boundaryml.com/<https:/gorilla.cs.berkeley.edu/leaderboard.html>)\\nBAML was designed for easier, more reliable prompting\\nSyntax that transforms prompt engineering to coding.\\nfile_name.baml\\n```\\n\\n9\\n1\\n›\\n\\n```\\n\\nClassifiers\\nMultimodal Inputs\\nDynamic Prompts\\nStatic analysis\\nType-safety in every language\\nDevelopers love building with BAML\\nBAML is amazing. I've used it in Python and Typescript. It's a game changer.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fuser1.png&w=64&q=75)\\nAdam Gitzes\\nJust set up baml for my project, 10/10 experience and much faster than langchain.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fjason.png&w=64&q=75)\\nJason Fan\\nFinic.ai\\nIt's amazing!! Was able to cut down my tokens and time-to-first-token significantly without compromising results.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fray.png&w=64&q=75)\\nRay del Vecchio\\nCerebral Valley\\nBAML is definitely a must have if you want any structured data from LLM; no more BS/long paragraphs describing what the output should be like, it just works!!!\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fhankel.png&w=64&q=75)\\nHankel Bao\\nColdreach.ai\\nBAML is amazing. I've used it in Python and Typescript. It's a game changer.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fuser1.png&w=64&q=75)\\nAdam Gitzes\\nJust set up baml for my project, 10/10 experience and much faster than langchain.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fjason.png&w=64&q=75)\\nJason Fan\\nFinic.ai\\nIt's amazing!! Was able to cut down my tokens and time-to-first-token significantly without compromising results.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fray.png&w=64&q=75)\\nRay del Vecchio\\nCerebral Valley\\nBAML is definitely a must have if you want any structured data from LLM; no more BS/long paragraphs describing what the output should be like, it just works!!!\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fhankel.png&w=64&q=75)\\nHankel Bao\\nColdreach.ai\\nBAML is amazing. I've used it in Python and Typescript. It's a game changer.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fuser1.png&w=64&q=75)\\nAdam Gitzes\\nJust set up baml for my project, 10/10 experience and much faster than langchain.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fjason.png&w=64&q=75)\\nJason Fan\\nFinic.ai\\nIt's amazing!! Was able to cut down my tokens and time-to-first-token significantly without compromising results.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fray.png&w=64&q=75)\\nRay del Vecchio\\nCerebral Valley\\nBAML is definitely a must have if you want any structured data from LLM; no more BS/long paragraphs describing what the output should be like, it just works!!!\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fhankel.png&w=64&q=75)\\nHankel Bao\\nColdreach.ai\\nBAML is amazing. I've used it in Python and Typescript. It's a game changer.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fuser1.png&w=64&q=75)\\nAdam Gitzes\\nJust set up baml for my project, 10/10 experience and much faster than langchain.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fjason.png&w=64&q=75)\\nJason Fan\\nFinic.ai\\nIt's amazing!! Was able to cut down my tokens and time-to-first-token significantly without compromising results.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fray.png&w=64&q=75)\\nRay del Vecchio\\nCerebral Valley\\nBAML is definitely a must have if you want any structured data from LLM; no more BS/long paragraphs describing what the output should be like, it just works!!!\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fhankel.png&w=64&q=75)\\nHankel Bao\\nColdreach.ai\\nThe test case and playground is quite literally the BEST feature. It has improved the iteration speed and quality by an order of magnitude.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fjoseph.png&w=64&q=75)\\nJoseph Tutera\\nDocucare AI\\nI really really like what Baml offers [...] I think it's a step-wise improvement over Marvin. Having complete control over the prompt WITH strong type guarantees is fantastic.I also think the dedicated testing playground is awesome.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fgabe.png&w=64&q=75)\\nGabe\\nZenfetch\\nCode is hella clean now. Look at [the] folder structure, and each folder for a respective pipeline. Each file just a prompt. Clean, elegant, beautiful.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fpaulo.png&w=64&q=75)\\nPaulo Rossi\\nMagnaplay\\nJust got the categorizer to work first try.Felt like landing a kickflip\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Feitan.png&w=64&q=75)\\nEitan Borgnia\\nSquack\\nThe test case and playground is quite literally the BEST feature. It has improved the iteration speed and quality by an order of magnitude.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fjoseph.png&w=64&q=75)\\nJoseph Tutera\\nDocucare AI\\nI really really like what Baml offers [...] I think it's a step-wise improvement over Marvin. Having complete control over the prompt WITH strong type guarantees is fantastic.I also think the dedicated testing playground is awesome.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fgabe.png&w=64&q=75)\\nGabe\\nZenfetch\\nCode is hella clean now. Look at [the] folder structure, and each folder for a respective pipeline. Each file just a prompt. Clean, elegant, beautiful.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fpaulo.png&w=64&q=75)\\nPaulo Rossi\\nMagnaplay\\nJust got the categorizer to work first try.Felt like landing a kickflip\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Feitan.png&w=64&q=75)\\nEitan Borgnia\\nSquack\\nThe test case and playground is quite literally the BEST feature. It has improved the iteration speed and quality by an order of magnitude.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fjoseph.png&w=64&q=75)\\nJoseph Tutera\\nDocucare AI\\nI really really like what Baml offers [...] I think it's a step-wise improvement over Marvin. Having complete control over the prompt WITH strong type guarantees is fantastic.I also think the dedicated testing playground is awesome.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fgabe.png&w=64&q=75)\\nGabe\\nZenfetch\\nCode is hella clean now. Look at [the] folder structure, and each folder for a respective pipeline. Each file just a prompt. Clean, elegant, beautiful.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fpaulo.png&w=64&q=75)\\nPaulo Rossi\\nMagnaplay\\nJust got the categorizer to work first try.Felt like landing a kickflip\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Feitan.png&w=64&q=75)\\nEitan Borgnia\\nSquack\\nThe test case and playground is quite literally the BEST feature. It has improved the iteration speed and quality by an order of magnitude.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fjoseph.png&w=64&q=75)\\nJoseph Tutera\\nDocucare AI\\nI really really like what Baml offers [...] I think it's a step-wise improvement over Marvin. Having complete control over the prompt WITH strong type guarantees is fantastic.I also think the dedicated testing playground is awesome.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fgabe.png&w=64&q=75)\\nGabe\\nZenfetch\\nCode is hella clean now. Look at [the] folder structure, and each folder for a respective pipeline. Each file just a prompt. Clean, elegant, beautiful.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fpaulo.png&w=64&q=75)\\nPaulo Rossi\\nMagnaplay\\nJust got the categorizer to work first try.Felt like landing a kickflip\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Feitan.png&w=64&q=75)\\nEitan Borgnia\\nSquack\\n# Get high quality results\\nTalk to one of our AI Experts\\nWe have seen hundreds of prompts and AI pipelines. Talk to a founder to learn more about our roadmap, our enterprise support and observability platform, or join our community to see what others are up to.\\n[Talk to a founder](https://www.boundaryml.com/<https:/calendly.com/boundary-founders/connect-45>)[Join the Community→](https://www.boundaryml.com/<https:/discord.gg/yzaTpQ3tdT>)\\n[![Boundary AI logo](https://www.boundaryml.com/_next/image?url=%2Fboundarylogo.png&w=3840&q=75)](https://www.boundaryml.com/</>)\\n## Resources\\n  * [Documentation](https://www.boundaryml.com/<https:/docs.boundaryml.com>)\\n  * [Pricing](https://www.boundaryml.com/</pricing>)\\n  * [BAML Demos](https://www.boundaryml.com/<https:/baml-examples.vercel.app/>)\\n\\n\\n## Follow us\\n  * [GitHub](https://www.boundaryml.com/<https:/github.com/BoundaryML/baml>)\\n  * [Discord](https://www.boundaryml.com/<https:/discord.gg/yzaTpQ3tdT>)\\n\\n\\n## Legal\\n  * [Privacy Policy](https://www.boundaryml.com/<https:/www.boundaryml.com/privacy.html>)\\n  * [Terms & Conditions](https://www.boundaryml.com/<https:/www.boundaryml.com/terms.html>)\\n\\n\\n© 2024 [Boundary](https://www.boundaryml.com/<https:/boundaryml.com>)\\n[Twitter page](https://www.boundaryml.com/<https:/x.com/BoundaryML>)[Discord community](https://www.boundaryml.com/<https:/discord.gg/yzaTpQ3tdT>)[GitHub account](https://www.boundaryml.com/<https:/github.com/BoundaryML/baml>)\\nHaiku\\n\" markdown_with_citations=\"![Boundary AI logo⟨1⟩](https://www.boundaryml.com/</>)\\nDemos⟨2⟩Documentation⟨3⟩Blog⟨4⟩Changelog⟨5⟩\\nStar on GitHub539⟨6⟩\\n![Discord community⟨7⟩](https://www.boundaryml.com/<https:/discord.gg/yzaTpQ3tdT>)\\nOpen main menu\\nCheck out Launch Week 2025 →⟨8⟩\\n![Baml Lamb mascot⟨9⟩]\\nBAML is an expressive language for structured text generation\\n▶ BAML Playground⟨10⟩Get started→⟨3⟩\\n```\\n$ pip install baml-py\\n```\\n\\nBacked by\\n![YC Logo⟨11⟩](https://www.boundaryml.com/<https:/www.ycombinator.com/>)\\nTrusted by developers at\\n![Aer Compliance⟨12⟩]\\n![PMMI⟨13⟩]\\n![Product Hunt⟨14⟩]\\n![SAP⟨15⟩]\\n![AI Tinkerers⟨16⟩]\\n![Cerebral Valley⟨17⟩]\\n![Vetrec⟨18⟩]\\nForget JSON.parse(). BAML's parser was built for LLMs\\nJSON error correction\\nLLM yapping immunity\\nSchema coercion\\nBAML fixes broken JSON like trailing commas, unquoted keys, unescaped quotes, new lines, and even fractions.\\nanalyze-repo.baml\\n![llm yapping⟨19⟩]\\nLLM output\\n![llm yapping⟨20⟩]\\n![BAML⟨21⟩]\\nParsed Response\\n![llm yapping⟨22⟩]\\nFunction-calling for every model, in your favorite language\\n![BAML⟨21⟩]![Rust Crab⟨23⟩]\\nAll models get better with BAML\\nBAML achieves state-of-the-art results in function-calling with GPT 3.5 over all other models and techniques, including OpenAI's new strict structured outputs⟨24⟩\\n.42%\\nOverall Score (Sonnet3.5)\\n+\\n.17%\\nGain for GPT35\\nBerkeley Function-Calling Benchmark (Overall Score)\\nOverall Score0255075100BAML + Claude 3.5 SonnetBAML + GPT-4o-2024-08-06GPT-4o (2024-08-06) FCBAML + GPT-4o MiniGPT-4o (2024-08-06) FC StrictBAML + GPT-3.5 Turbo 0125BAML + Claude 3 HaikuGPT-4o Mini FC StrictGPT-4o Mini FCGPT-3.5 Turbo FC StrictClaude 3.5 Sonnet FCGPT-3.5 Turbo FCClaude 3 Haiku FC\\nLearn more about the BFCL Benchmark→⟨25⟩\\nBAML was designed for easier, more reliable prompting\\nSyntax that transforms prompt engineering to coding.\\nfile_name.baml\\n```\\n\\n9\\n1\\n›\\n\\n```\\n\\nClassifiers\\nMultimodal Inputs\\nDynamic Prompts\\nStatic analysis\\nType-safety in every language\\nDevelopers love building with BAML\\nBAML is amazing. I've used it in Python and Typescript. It's a game changer.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fuser1.png&w=64&q=75)\\nAdam Gitzes\\nJust set up baml for my project, 10/10 experience and much faster than langchain.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fjason.png&w=64&q=75)\\nJason Fan\\nFinic.ai\\nIt's amazing!! Was able to cut down my tokens and time-to-first-token significantly without compromising results.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fray.png&w=64&q=75)\\nRay del Vecchio\\nCerebral Valley\\nBAML is definitely a must have if you want any structured data from LLM; no more BS/long paragraphs describing what the output should be like, it just works!!!\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fhankel.png&w=64&q=75)\\nHankel Bao\\nColdreach.ai\\nBAML is amazing. I've used it in Python and Typescript. It's a game changer.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fuser1.png&w=64&q=75)\\nAdam Gitzes\\nJust set up baml for my project, 10/10 experience and much faster than langchain.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fjason.png&w=64&q=75)\\nJason Fan\\nFinic.ai\\nIt's amazing!! Was able to cut down my tokens and time-to-first-token significantly without compromising results.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fray.png&w=64&q=75)\\nRay del Vecchio\\nCerebral Valley\\nBAML is definitely a must have if you want any structured data from LLM; no more BS/long paragraphs describing what the output should be like, it just works!!!\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fhankel.png&w=64&q=75)\\nHankel Bao\\nColdreach.ai\\nBAML is amazing. I've used it in Python and Typescript. It's a game changer.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fuser1.png&w=64&q=75)\\nAdam Gitzes\\nJust set up baml for my project, 10/10 experience and much faster than langchain.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fjason.png&w=64&q=75)\\nJason Fan\\nFinic.ai\\nIt's amazing!! Was able to cut down my tokens and time-to-first-token significantly without compromising results.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fray.png&w=64&q=75)\\nRay del Vecchio\\nCerebral Valley\\nBAML is definitely a must have if you want any structured data from LLM; no more BS/long paragraphs describing what the output should be like, it just works!!!\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fhankel.png&w=64&q=75)\\nHankel Bao\\nColdreach.ai\\nBAML is amazing. I've used it in Python and Typescript. It's a game changer.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fuser1.png&w=64&q=75)\\nAdam Gitzes\\nJust set up baml for my project, 10/10 experience and much faster than langchain.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fjason.png&w=64&q=75)\\nJason Fan\\nFinic.ai\\nIt's amazing!! Was able to cut down my tokens and time-to-first-token significantly without compromising results.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fray.png&w=64&q=75)\\nRay del Vecchio\\nCerebral Valley\\nBAML is definitely a must have if you want any structured data from LLM; no more BS/long paragraphs describing what the output should be like, it just works!!!\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fhankel.png&w=64&q=75)\\nHankel Bao\\nColdreach.ai\\nThe test case and playground is quite literally the BEST feature. It has improved the iteration speed and quality by an order of magnitude.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fjoseph.png&w=64&q=75)\\nJoseph Tutera\\nDocucare AI\\nI really really like what Baml offers [...] I think it's a step-wise improvement over Marvin. Having complete control over the prompt WITH strong type guarantees is fantastic.I also think the dedicated testing playground is awesome.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fgabe.png&w=64&q=75)\\nGabe\\nZenfetch\\nCode is hella clean now. Look at [the] folder structure, and each folder for a respective pipeline. Each file just a prompt. Clean, elegant, beautiful.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fpaulo.png&w=64&q=75)\\nPaulo Rossi\\nMagnaplay\\nJust got the categorizer to work first try.Felt like landing a kickflip\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Feitan.png&w=64&q=75)\\nEitan Borgnia\\nSquack\\nThe test case and playground is quite literally the BEST feature. It has improved the iteration speed and quality by an order of magnitude.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fjoseph.png&w=64&q=75)\\nJoseph Tutera\\nDocucare AI\\nI really really like what Baml offers [...] I think it's a step-wise improvement over Marvin. Having complete control over the prompt WITH strong type guarantees is fantastic.I also think the dedicated testing playground is awesome.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fgabe.png&w=64&q=75)\\nGabe\\nZenfetch\\nCode is hella clean now. Look at [the] folder structure, and each folder for a respective pipeline. Each file just a prompt. Clean, elegant, beautiful.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fpaulo.png&w=64&q=75)\\nPaulo Rossi\\nMagnaplay\\nJust got the categorizer to work first try.Felt like landing a kickflip\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Feitan.png&w=64&q=75)\\nEitan Borgnia\\nSquack\\nThe test case and playground is quite literally the BEST feature. It has improved the iteration speed and quality by an order of magnitude.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fjoseph.png&w=64&q=75)\\nJoseph Tutera\\nDocucare AI\\nI really really like what Baml offers [...] I think it's a step-wise improvement over Marvin. Having complete control over the prompt WITH strong type guarantees is fantastic.I also think the dedicated testing playground is awesome.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fgabe.png&w=64&q=75)\\nGabe\\nZenfetch\\nCode is hella clean now. Look at [the] folder structure, and each folder for a respective pipeline. Each file just a prompt. Clean, elegant, beautiful.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fpaulo.png&w=64&q=75)\\nPaulo Rossi\\nMagnaplay\\nJust got the categorizer to work first try.Felt like landing a kickflip\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Feitan.png&w=64&q=75)\\nEitan Borgnia\\nSquack\\nThe test case and playground is quite literally the BEST feature. It has improved the iteration speed and quality by an order of magnitude.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fjoseph.png&w=64&q=75)\\nJoseph Tutera\\nDocucare AI\\nI really really like what Baml offers [...] I think it's a step-wise improvement over Marvin. Having complete control over the prompt WITH strong type guarantees is fantastic.I also think the dedicated testing playground is awesome.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fgabe.png&w=64&q=75)\\nGabe\\nZenfetch\\nCode is hella clean now. Look at [the] folder structure, and each folder for a respective pipeline. Each file just a prompt. Clean, elegant, beautiful.\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Fpaulo.png&w=64&q=75)\\nPaulo Rossi\\nMagnaplay\\nJust got the categorizer to work first try.Felt like landing a kickflip\\n![](https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Fpeople%2Feitan.png&w=64&q=75)\\nEitan Borgnia\\nSquack\\n# Get high quality results\\nTalk to one of our AI Experts\\nWe have seen hundreds of prompts and AI pipelines. Talk to a founder to learn more about our roadmap, our enterprise support and observability platform, or join our community to see what others are up to.\\nTalk to a founder⟨26⟩Join the Community→⟨27⟩\\n![Boundary AI logo⟨28⟩](https://www.boundaryml.com/</>)\\n## Resources\\n  * Documentation⟨3⟩\\n  * Pricing⟨29⟩\\n  * BAML Demos⟨30⟩\\n\\n\\n## Follow us\\n  * GitHub⟨31⟩\\n  * Discord⟨27⟩\\n\\n\\n## Legal\\n  * Privacy Policy⟨32⟩\\n  * Terms & Conditions⟨33⟩\\n\\n\\n© 2024 Boundary⟨34⟩\\nTwitter page⟨35⟩Discord community⟨27⟩GitHub account⟨31⟩\\nHaiku\\n\" references_markdown='\\n\\n## References\\n\\n⟨1⟩ https://www.boundaryml.com/_next/image?url=%2Fboundarylogo.png&w=384&q=75: ![Boundary AI logo\\n⟨2⟩ https://www.boundaryml.com/<https:/baml-examples.vercel.app/examples/rag>: Demos\\n⟨3⟩ https://www.boundaryml.com/<https:/docs.boundaryml.com>: Documentation\\n⟨4⟩ https://www.boundaryml.com/</blog>: Blog\\n⟨5⟩ https://www.boundaryml.com/<https:/github.com/BoundaryML/baml/blob/canary/CHANGELOG.md>: Changelog\\n⟨6⟩ https://www.boundaryml.com/<https:/github.com/boundaryml/baml>: Star on GitHub539\\n⟨7⟩ https://www.boundaryml.com/discord-icon.svg: ![Discord community\\n⟨8⟩ https://www.boundaryml.com/</launchweek>: Check out Launch Week 2025 →\\n⟨9⟩ https://www.boundaryml.com/_next/image?url=%2Fbaml-logo-lamb1.png&w=256&q=75: Baml Lamb mascot\\n⟨10⟩ https://www.boundaryml.com/<https:/promptfiddle.com>: ▶ BAML Playground\\n⟨11⟩ https://www.boundaryml.com/_next/image?url=%2Fyclogo.png&w=256&q=75: ![YC Logo\\n⟨12⟩ https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Faer_compliance_logo.png&w=3840&q=75: Aer Compliance\\n⟨13⟩ https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Flogos%2Fpmmi.png&w=3840&q=75: PMMI\\n⟨14⟩ https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Flogos%2Fproduct-hunt.png&w=3840&q=75: Product Hunt\\n⟨15⟩ https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Flogos%2FsapLogo.png&w=3840&q=75: SAP\\n⟨16⟩ https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Flogos%2Fai-tinkerers.png&w=3840&q=75: AI Tinkerers\\n⟨17⟩ https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Flogos%2Fcerebral.png&w=3840&q=75: Cerebral Valley\\n⟨18⟩ https://www.boundaryml.com/_next/image?url=%2Ftestimonials%2Flogos%2Fvetrec.png&w=3840&q=75: Vetrec\\n⟨19⟩ https://www.boundaryml.com/parser/llm-fix/llm-fix-1.svg: llm yapping\\n⟨20⟩ https://www.boundaryml.com/parser/llm-fix/llm-fix-2.svg: llm yapping\\n⟨21⟩ https://www.boundaryml.com/baml-logo-lamb1.svg: BAML\\n⟨22⟩ https://www.boundaryml.com/parser/llm-fix/llm-fix-3.svg: llm yapping\\n⟨23⟩ https://www.boundaryml.com/rust-crab.svg: Rust Crab\\n⟨24⟩ https://www.boundaryml.com/<https:/openai.com/index/introducing-structured-outputs-in-the-api/>: strict structured outputs\\n⟨25⟩ https://www.boundaryml.com/<https:/gorilla.cs.berkeley.edu/leaderboard.html>: Learn more about the BFCL Benchmark→\\n⟨26⟩ https://www.boundaryml.com/<https:/calendly.com/boundary-founders/connect-45>: Talk to a founder\\n⟨27⟩ https://www.boundaryml.com/<https:/discord.gg/yzaTpQ3tdT>: Join the Community→\\n⟨28⟩ https://www.boundaryml.com/_next/image?url=%2Fboundarylogo.png&w=3840&q=75: ![Boundary AI logo\\n⟨29⟩ https://www.boundaryml.com/</pricing>: Pricing\\n⟨30⟩ https://www.boundaryml.com/<https:/baml-examples.vercel.app/>: BAML Demos\\n⟨31⟩ https://www.boundaryml.com/<https:/github.com/BoundaryML/baml>: GitHub\\n⟨32⟩ https://www.boundaryml.com/<https:/www.boundaryml.com/privacy.html>: Privacy Policy\\n⟨33⟩ https://www.boundaryml.com/<https:/www.boundaryml.com/terms.html>: Terms & Conditions\\n⟨34⟩ https://www.boundaryml.com/<https:/boundaryml.com>: Boundary\\n⟨35⟩ https://www.boundaryml.com/<https:/x.com/BoundaryML>: Twitter page\\n' fit_markdown='' fit_html=''",
  "generated_description": "**Boundary: Revolutionizing AI Development**\n\nFounded in 2023 and hailing from the vibrant tech hub of Seattle, Boundary is a startup making waves in the artificial intelligence space. They’re on a mission to make function calling in AI models **cheaper, faster, and better**—an ambitious goal that reflects a deeper understanding of what developers need in an increasingly competitive landscape.\n\n**What’s Boundary’s Big Idea?**\n\nInitially, Boundary focused on crafting tools for building reliable AI pipelines, adopting a code-first approach. This means your AI functions reside in your code and run locally—no server-side dependencies. And here’s the kicker: it’s completely open-source. By moving away from traditional function calling methods like JSON.parse, Boundary allows developers to write shorter, more effective prompts that yield more precise results—without the hassle of fine-tuning or altering the model.\n\nTheir remarkable technique has shown that models like GPT-3.5 and GPT-4o-mini can perform at par with GPT-4o, showcasing the transformative potential of their approach. For the technical aficionados, this isn’t just a promise; it’s been validated through **state-of-the-art performance metrics**. \n\n**Core Offerings**\n\nBoundary is built around three main components:\n\n1. **BAML:** A user-friendly programming language for generating structured outputs from large language models (LLMs).\n2. **BAML Playground:** The first VSCode playground tailored for developers to test and iterate on their AI functions—think of it as an interactive workshop for coders.\n3. **Boundary Studio:** An analytics dashboard that helps you trace, label, and measure your AI's performance post-deployment.\n\nTogether, these tools simplify the entire AI app development journey—from the initial prompt iteration phase to monitoring results after launch.\n\n**Backed by Experience**\n\nBoundary is part of the Y Combinator Batch W23 and may be fresh on the scene, but it boasts a talented team of three, including prominent Group Partner Dalton Caldwell guiding the way. This small but mighty team is passionate about eliminating the complexity traditionally associated with AI development.\n\n**The Community and Future Vision**\n\nBoundary is not just about technology; they’re building a community. They encourage developers to share their experiences on Discord and participate in ongoing conversations around AI innovation. Interested developers can try out their offerings, join the community, or even connect directly with a founder to discuss future prospects.\n\nExplore more at [Boundary's website](https://www.boundaryml.com), where you’ll find demos, documentation, and resources tailored for developers eager to advance their AI skills. With Boundary, coding AI doesn't just become easier—it becomes an exciting playground for innovation.\n\n**Key takeaways:**\n- **Location**: Seattle, WA\n- **Founded**: 2023\n- **Team Size**: 3 employees\n- **YC Batch**: W23\n- **Focus Areas**: Artificial Intelligence, Developer Tools, Generative AI\n- **Components**: BAML, BAML Playground, Boundary Studio\n\nBoundary is not just a new tool in the developer toolbox; it’s a paradigm shift in how we build and interact with AI models. Get ready to redefine what’s possible in your AI applications."
}