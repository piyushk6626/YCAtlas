{
  "links": "https://www.ycombinator.com/companies/stempad",
  "name": "Stempad",
  "headline": "Notion for science",
  "batch": "S24",
  "description": "You can think of Stempad as a Notion for science. It is the world's first true pen-and-paper alternative to fast scientific writing and collaborating. Quickly switch between different forms of technical visualization with the ease of a whiteboard and the convenience of your keyboard.\r\n\nStempad allows you to share your work, collaborate in real time, store your data, annotate, write papers, plan, takes notes, create presentations, and so much more. Our vision is to make it easier and faster for students and scientists to digitize and share their scientific ideas.",
  "activity_status": "Active",
  "website": "https://www.stempad.com",
  "founded_date": 2024.0,
  "team_size": 1.0,
  "location": null,
  "group_partner": "Harj Taggar",
  "group_partner_yc": "https://www.ycombinator.com/people/harj-taggar",
  "company_linkedin": null,
  "company_twitter": null,
  "tags": null,
  "founders": [
    {
      "name": "Ralph Rouhana, Founder",
      "description": "Hey, I'm Ralph üëã I founded Stempad in early 2024 to help me take notes in my final year of school. After getting it to several hundred users and a few paying subscribers, I saw the potential for schools, research teams, pharmaceutical companies, tutoring companies, and more. I've previously interned at BioRender (W18), Microsoft, and 5 other companies.",
      "linkedin": "https://www.linkedin.com/in/ralph-rouhana"
    }
  ],
  "status": true,
  "markdown": "raw_markdown=\"‚úï\\n[Stempad](https://www.stempad.com/</>)\\n[Learn](https://www.stempad.com/</learn>)[Pricing](https://www.stempad.com/</pricing>)[Blog](https://www.stempad.com/</blog>)\\n[Login](https://www.stempad.com/</login>)[Try for free](https://www.stempad.com/</editor>)\\nBacked by![Backed by Y Combinator](https://www.stempad.com/yc/YC-Logo-Square.svg)Combinator\\n# Fast scientific notes with just your keyboard.\\n##### Stempad is the text editor for anyone in STEM. Try it for yourself.\\nType '/' for blocks or '\\\\' for special characters\\ufeff\\n[Open Scratchpad ](https://www.stempad.com/</editor>)\\n## Used by students at schools like\\n## Whiteboard flexibility in a digital world.\\n## Block types for all scientific disciplines.\\n/math\\nAuto-formatting math block. Supports pasting LaTeX, and copies into LaTeX.\\n/graph\\nEmbedded Desmos graphing calculator.\\nPython\\n  * Executable\\n  * Python\\n  * MATLAB\\n  * R\\n  * JavaScript\\n  * Node.js\\n  * TypeScript\\n  * Display\\n  * JSX\\n  * TSX\\n  * Rust\\n  * Go\\n  * Ruby\\n  * Java\\n  * C\\n  * C++\\n  * C#\\n  * PHP\\n  * Swift\\n  * Kotlin\\n  * Scala\\n  * Dart\\n  * Haskell\\n  * Lua\\n  * Perl\\n  * SQL\\n  * Clojure\\n  * Markdown\\n  * YAML\\n  * JSON\\n  * HTML\\n  * CSS\\n  * LaTeX\\n\\n\\n9\\n1\\n2\\n3\\n4\\n5\\n‚Ä∫\\n‚åÑ\\n‚åÑ\\ndef fibonacci(n):\\na, b = 0, 1\\nfor _ in range(n):\\nyield a\\na, b = b, a + b\\n/code\\nSyntax highlighting, multi-language support, and VSCode keybinds built in.\\n/table\\nSimple table with easy support for duplicating, moving, and adding cells.\\n**Company**| **Name**| **Country**  \\n---|---|---  \\nCake Inc.| Thomas| Germany  \\nFudge Corp| John| USA  \\n\\ufeff\\n![Chemical molecule](https://www.stempad.com/landing/chemistry.svg)\\n/chemistry\\nDraw and edit molecules.\\n/draw\\nQuick, hand-drawn like diagrams. Powered by Excalidraw.\\n/circuit\\nDraw and edit circuit schematics.\\n/geometry\\nEmbedded Desmos geometry sketcher.\\n### Reference\\n/math\\n## Shortcuts\\n  * : Superscript\\n  * : Subscript\\n  * : Type plaintext\\n  * : Latex symbols\\n\\n\\n## Keywords\\n  * `sqrt`: Square root expression (‚àö)\\n  * `sum`: Sigma notation expression (Œ£)\\n  * `prod`: Product notation expression (Œ†)\\n  * `int`: Integral expression (‚à´)\\n  * `vec`: Vector arrow characters (‚Üí)\\n  * `hat`: Hat character (^)\\n  * `pi`: Pi symbol (œÄ)\\n  * `Pi`: Uppercase Pi symbol (Œ†)\\n  * `theta`: Lowercase theta symbol (Œ∏)\\n  * `Theta`: Uppercase Theta symbol (Œò)\\n  * `rho`: Lowercase rho symbol (œÅ)\\n  * `phi`: Lowercase phi symbol (œÜ)\\n  * `Phi`: Uppercase Phi symbol (Œ¶)\\n  * `alpha`: Lowercase alpha symbol (Œ±)\\n  * `beta`: Lowercase beta symbol (Œ≤)\\n  * `gamma`: Lowercase gamma symbol (Œ≥)\\n  * `Gamma`: Uppercase Gamma symbol (Œì)\\n  * `delta`: Lowercase delta symbol (Œ¥)\\n  * `Delta`: Uppercase Delta symbol (Œî)\\n  * `epsilon`: Lowercase epsilon symbol (Œµ)\\n  * `zeta`: Lowercase zeta symbol (Œ∂)\\n  * `eta`: Lowercase eta symbol (Œ∑)\\n  * `iota`: Lowercase iota symbol (Œπ)\\n  * `kappa`: Lowercase kappa symbol (Œ∫)\\n  * `lambda`: Lowercase lambda symbol (Œª)\\n  * `Lambda`: Uppercase Lambda symbol (Œõ)\\n  * `mu`: Lowercase mu symbol (Œº)\\n  * `nu`: Lowercase nu symbol (ŒΩ)\\n  * `xi`: Lowercase xi symbol (Œæ)\\n  * `Xi`: Uppercase Xi symbol (Œû)\\n  * `omicron`: Lowercase omicron symbol (Œø)\\n  * `sigma`: Lowercase sigma symbol (œÉ)\\n  * `Sigma`: Uppercase Sigma symbol (Œ£)\\n  * `tau`: Lowercase tau symbol (œÑ)\\n  * `upsilon`: Lowercase upsilon symbol (œÖ)\\n  * `Upsilon`: Uppercase Upsilon symbol (Œ•)\\n  * `chi`: Lowercase chi symbol (œá)\\n  * `\\\\psi`: Lowercase psi symbol (œà)\\n  * `\\\\Psi`: Uppercase Psi symbol (Œ®)\\n  * `omega`: Lowercase omega symbol (œâ)\\n  * `Omega`: Uppercase Omega symbol (Œ©)\\n  * `infty`: Infinity symbol (‚àû)\\n  * `partial`: Partial derivative symbol (‚àÇ)\\n  * `nabla`: Nabla symbol (‚àá)\\n  * `prime`: Prime symbol (‚Ä≤)\\n  * `times`: Multiplication symbol (√ó)\\n  * `div`: Division symbol (√∑)\\n  * `cdot`: Centered dot symbol (¬∑)\\n  * `circ`: Ring operator symbol (‚àò)\\n  * `bullet`: Bullet operator symbol (‚Ä¢)\\n  * `odot`: Circled dot operator (‚äô)\\n  * `oplus`: Circled plus operator (‚äï)\\n  * `otimes`: Circled times operator (‚äó)\\n  * `cup`: Union symbol (‚à™)\\n  * `cap`: Intersection symbol (‚à©)\\n  * `vee`: Logical OR symbol (‚à®)\\n  * `wedge`: Logical AND symbol (‚àß)\\n  * `sim`: Similar to symbol (‚àº)\\n  * `simeq`: Asymptotically equal to symbol (‚âÉ)\\n  * `approx`: Approximately equal to symbol (‚âà)\\n  * `cong`: Congruent to symbol (‚âÖ)\\n  * `neq`: Not equal to symbol (‚â†)\\n  * `equiv`: Equivalent to symbol (‚â°)\\n  * `leq`: Less than or equal to symbol (‚â§)\\n  * `geq`: Greater than or equal to symbol (‚â•)\\n  * `ll`: Much less than symbol (‚â™)\\n  * `gg`: Much greater than symbol (‚â´)\\n  * `subset`: Subset of symbol (‚äÇ)\\n  * `supset`: Superset of symbol (‚äÉ)\\n  * `subseteq`: Subset of or equal to symbol (‚äÜ)\\n  * `supseteq`: Superset of or equal to symbol (‚äá)\\n  * `\\\\in`: An element of symbol (‚àà)\\n  * `notin`: Not an element of symbol (‚àâ)\\n  * `propto`: Proportional to symbol (‚àù)\\n  * `forall`: For all symbol (‚àÄ)\\n  * `exists`: There exists symbol (‚àÉ)\\n  * `nexists`: There does not exist symbol (‚àÑ)\\n  * `neg`: Negation symbol (¬¨)\\n  * `lnot`: Logical NOT symbol (¬¨)\\n  * `rightarrow`: Right arrow symbol (‚Üí)\\n  * `leftarrow`: Left arrow symbol (‚Üê)\\n  * `leftrightarrow`: Left-right arrow symbol (‚Üî)\\n  * `Rightarrow`: Right double arrow symbol (‚áí)\\n  * `Leftarrow`: Left double arrow symbol (‚áê)\\n  * `Leftrightarrow`: Left-right double arrow symbol (‚áî)\\n  * `mapsto`: Maps to symbol (‚Ü¶)\\n  * `to`: To symbol (‚Üí)\\n  * `aleph`: Aleph symbol (‚Ñµ)\\n  * `hbar`: Reduced Planck constant symbol (‚Ñè)\\n  * `imath`: Dotless i symbol (ƒ±)\\n  * `jmath`: Dotless j symbol (»∑)\\n  * `ell`: Script l symbol (‚Ñì)\\n  * `Re`: Real part symbol (‚Ñú)\\n  * `Im`: Imaginary part symbol (‚Ñë)\\n  * `\\\\N`: Set of natural numbers symbol (‚Ñï)\\n  * `\\\\Z`: Set of integers symbol (‚Ñ§)\\n  * `\\\\Q`: Set of rational numbers symbol (‚Ñö)\\n  * `\\\\R`: Set of real numbers symbol (‚Ñù)\\n  * `\\\\C`: Set of complex numbers symbol (‚ÑÇ)\\n  * `\\\\P`: Set of prime numbers symbol (‚Ñô)\\n  * `\\\\H`: Set of quaternions symbol (‚Ñç)\\n\\n\\n/chemistry\\n## Shortcuts\\n  * : Undo.\\n  * : Redo.\\n  * : Return to the standard editing state (carbon, single bond).\\n  * : Single bond.\\n  * : Double bond.\\n  * : 3..8 for 3 to 8 membered rings, 1 for phenyl and 0 for furyl.\\n  * : Enter delete mode.\\n  * : COOH group.\\n  * : NO2 group.\\n  * : SO3H group.\\n  * : tert-Butyl group.\\n  * : Carbon.\\n  * : Nitrogen.\\n  * : Oxygen.\\n  * : Sulfur.\\n  * : Fluorine.\\n  * : Chlorine.\\n  * : Bromine.\\n  * : Iodine.\\n  * : Phosphorus.\\n  * : Halogen.\\n\\n\\n/table\\n## Shortcuts\\n  * : With no text selected, copy current row.\\n  * : With no text selected, cut current row.\\n  * : Paste selected content. Supports pasting copied rows.\\n  * : Swap current row with row directly above.\\n  * : Swap current row with row directly below.\\n  * : Swap current column with the column directly right of it.\\n  * : Swap current column with the column directly left of it.\\n  * : Create copy of current row directly above.\\n  * : Create copy of current row directly below.\\n  * : Create copy of current column directly to the right.\\n  * : Create copy of current column directly to the left.\\n\\n\\n/code\\n## Shortcuts\\n  * : With no text selected, copy current line.\\n  * : With no text selected, cut current line.\\n  * : Paste selected content. Supports pasting copied lines.\\n  * : Swap current line with line directly above.\\n  * : Swap current line with line directly below.\\n  * : Create copy of current line directly above.\\n  * : Create copy of current line directly below.\\n\\n\\n## Supported packages\\n  * `aiohttp`: Asynchronous HTTP client/server framework\\n  * `aiosignal`: Managed signals implementation on top of asyncio\\n  * `altair`: Declarative statistical visualization library\\n  * `annotated-types`: Typing annotations for runtime type checking\\n  * `asciitree`: ASCII trees for Python\\n  * `astropy`: Astronomy and astrophysics core library\\n  * `astropy_iers_data`: IERS data for Astropy\\n  * `asttokens`: Annotate AST trees with source code positions\\n  * `async-timeout`: Timeout context manager for asyncio programs\\n  * `atomicwrites`: Atomic file writes\\n  * `attrs`: Classes without boilerplate\\n  * `autograd`: Efficiently computes derivatives of numpy code\\n  * `awkward-cpp`: CPU kernels for Awkward Array\\n  * `b2d`: Box2D physics engine Python wrapper\\n  * `bcrypt`: Modern password hashing library\\n  * `beautifulsoup4`: Screen-scraping library\\n  * `biopython`: Tools for computational molecular biology\\n  * `bitarray`: Efficient array of booleans\\n  * `bitstring`: Simple construction, analysis, and modification of binary data\\n  * `bleach`: HTML sanitizing library\\n  * `bokeh`: Interactive visualization library\\n  * `boost-histogram`: Python bindings for the C++ Boost::Histogram library\\n  * `brotli`: Brotli compression algorithm\\n  * `cachetools`: Extensible memoizing collections and decorators\\n  * `Cartopy`: Cartographic tools for Python\\n  * `cbor-diag`: CBOR diagnostic notation tools\\n  * `certifi`: Collection of root certificates for SSL/TLS verification\\n  * `cffi`: Foreign Function Interface for Python calling C code\\n  * `cffi_example`: Example package for CFFI\\n  * `cftime`: Time-handling functionality from netcdf4-python\\n  * `charset-normalizer`: The Real First Universal Charset Detector\\n  * `clarabel`: Interior point solver for convex optimization problems\\n  * `click`: Composable command line interface toolkit\\n  * `cligj`: Click params for commmand line GIS applications\\n  * `cloudpickle`: Extended pickling support for Python objects\\n  * `cmyt`: Colormaps for YT\\n  * `colorspacious`: Powerful, accurate, and easy-to-use Python library for doing colorspace conversions\\n  * `contourpy`: Python library for calculating contours of 2D quadrilateral grids\\n  * `coolprop`: Thermophysical properties for the masses\\n  * `coverage`: Code coverage measurement for Python\\n  * `cramjam`: Thin Python bindings to de/compression algorithms in Rust\\n  * `crc32c`: Python wrapper for CRC32C algorithm\\n  * `cryptography`: Cryptographic recipes and primitives\\n  * `cssselect`: CSS Selectors for Python\\n  * `cvxpy-base`: A Python-embedded modeling language for convex optimization problems\\n  * `cycler`: Composable style cycles\\n  * `cysignals`: Interrupt and signal handling for Cython\\n  * `cytoolz`: Cython implementation of Toolz\\n  * `decorator`: Decorators for Humans\\n  * `demes`: A Python API for demes data\\n  * `deprecation`: A library to handle automated deprecations\\n  * `distlib`: Distribution utilities\\n  * `docutils`: Docutils -- Python Documentation Utilities\\n  * `duckdb`: DuckDB embedded database\\n  * `ewah_bool_utils`: Bit array compression using the Enhanced Word Aligned Hybrid (EWAH) scheme\\n  * `exceptiongroup`: Backport of PEP 654 (exception groups)\\n  * `executing`: Get the currently executing AST node of a frame, and other information\\n  * `fastparquet`: Python support for Parquet file format\\n  * `fiona`: Fiona reads and writes spatial data files\\n  * `fonttools`: Tools to manipulate font files\\n  * `freesasa`: Calculate solvent accessible surface areas of proteins\\n  * `frozenlist`: A list-like structure which implements collections.abc.MutableSequence\\n  * `fsspec`: File-system specification\\n  * `future`: Clean single-source support for Python 3 and 2\\n  * `galpy`: Galactic Dynamics in Python\\n  * `gensim`: Topic modelling, document indexing and similarity retrieval with large corpora\\n  * `geopandas`: Geographic pandas extensions\\n  * `gmpy2`: GMP/MPIR, MPFR, and MPC interface to Python 2.6+ and 3.x\\n  * `gsw`: Gibbs SeaWater Oceanographic Package of TEOS-10\\n  * `h5py`: Read and write HDF5 files from Python\\n  * `html5lib`: HTML parser based on the WHATWG HTML specification\\n  * `idna`: Internationalized Domain Names in Applications (IDNA)\\n  * `igraph`: High performance graph data structures and algorithms\\n  * `imageio`: Library for reading and writing a wide range of image, video, scientific, and volumetric data formats\\n  * `iniconfig`: Brain-dead simple config-ini parsing\\n  * `ipython`: IPython: Productive Interactive Computing\\n  * `jedi`: An autocompletion tool for Python that can be used for text editors\\n  * `Jinja2`: A very fast and expressive template engine\\n  * `joblib`: Lightweight pipelining: using Python functions as pipeline jobs\\n  * `jsonschema`: An implementation of JSON Schema validation for Python\\n  * `jsonschema_specifications`: The JSON Schema meta-schemas and vocabularies, exposed as a Registry\\n  * `kiwisolver`: A fast implementation of the Cassowary constraint solver\\n  * `lakers-python`: Python bindings for the LAKERS library\\n  * `lazy-object-proxy`: A fast and thorough lazy object proxy\\n  * `lazy_loader`: lazy_loader\\n  * `libcst`: A concrete syntax tree with AST-like properties for Python 3.5, 3.6, 3.7, 3.8, 3.9, and 3.10 programs\\n  * `lightgbm`: LightGBM Python Package\\n  * `logbook`: A logging replacement for Python\\n  * `lxml`: Powerful and Pythonic XML processing library combining libxml2/libxslt with the ElementTree API\\n  * `MarkupSafe`: Safely add untrusted strings to HTML/XML markup\\n  * `matplotlib`: Python plotting package\\n  * `matplotlib-inline`: Inline Matplotlib backend for Jupyter\\n  * `matplotlib-pyodide`: Matplotlib for Pyodide\\n  * `memory-allocator`: A Python memory allocator for experimentation\\n  * `micropip`: A lightweight Python package installer for the web browser\\n  * `mmh3`: Python wrapper for MurmurHash (MurmurHash3), a set of fast and robust hash functions\\n  * `mne`: MNE: Magnetoencephalography (MEG) and Electroencephalography (EEG) in Python\\n  * `more-itertools`: More routines for operating on iterables, beyond itertools\\n  * `mpmath`: Python library for arbitrary-precision floating-point arithmetic\\n  * `msgpack`: MessagePack (de)serializer\\n  * `msgspec`: A fast serialization and validation library, with builtin support for JSON, MessagePack, YAML, and TOML\\n  * `msprime`: A fast and accurate coalescent simulator\\n  * `multidict`: multidict implementation\\n  * `munch`: A dot-accessible dictionary (a la JavaScript objects)\\n  * `mypy`: Optional static typing for Python\\n  * `netcdf4`: Provides an object-oriented python interface to the netCDF version 4 library\\n  * `networkx`: Python package for creating and manipulating graphs and networks\\n  * `newick`: A python module to read and write the Newick format\\n  * `nh3`: Ammonia: Python refactoring library\\n  * `nlopt`: Library for nonlinear optimization, wrapping many algorithms for global and local, constrained or unconstrained, optimization\\n  * `nltk`: Natural Language Toolkit\\n  * `numcodecs`: A Python package providing buffer compression and transformation codecs for use in data storage and communication applications\\n  * `numpy`: Fundamental package for array computing in Python\\n  * `opencv-python`: Wrapper package for OpenCV python bindings\\n  * `optlang`: Sympy based mathematical programming language\\n  * `orjson`: Fast, correct Python JSON library supporting dataclasses, datetimes, and numpy\\n  * `packaging`: Core utilities for Python packages\\n  * `pandas`: Powerful data structures for data analysis, time series, and statistics\\n  * `parso`: A Python Parser\\n  * `patsy`: A Python package for describing statistical models and for building design matrices\\n  * `peewee`: A small, expressive ORM\\n  * `Pillow`: Python Imaging Library (Fork)\\n  * `pillow_heif`: Python Pillow High Efficiency Image Format (HEIF) plugin\\n  * `pkgconfig`: Interface Python with pkg-config\\n  * `pluggy`: Plugin and hook calling mechanisms for python\\n  * `pplpy`: Python interface to the Parma Polyhedra Library\\n  * `primecountpy`: Python bindings for Kim Walisch's primecount library\\n  * `prompt_toolkit`: Library for building powerful interactive command lines in Python\\n  * `protobuf`: Protocol Buffers\\n  * `pure_eval`: Safely evaluate AST nodes without side effects\\n  * `py`: Library with cross-python path, ini-parsing, io, code, log facilities\\n  * `pyclipper`: Cython wrapper for the C++ translation of the Angus Johnson's Clipper library\\n  * `pycparser`: C parser in Python\\n  * `pycryptodome`: Cryptographic library for Python\\n  * `pydantic`: Data validation and settings management using Python type hints\\n  * `pydantic_core`: Core functionality for pydantic\\n  * `pyerfa`: Python bindings for ERFA\\n  * `pygame-ce`: Python Game Development\\n  * `Pygments`: Syntax highlighting package written in Python\\n  * `pyheif`: Python 3 bindings for libheif library\\n  * `pyiceberg`: Python implementation of the Apache Iceberg table format\\n  * `pyinstrument`: Call stack profiler for Python. Shows you why your code is slow!\\n  * `pynacl`: Python binding to the Networking and Cryptography (NaCl) library\\n  * `pyodide-http`: A fork of the Python 'http' package for use with Pyodide\\n  * `pyparsing`: Python parsing module\\n  * `pyproj`: Python interface to PROJ (cartographic projections and coordinate transformations library)\\n  * `pyrsistent`: Persistent/Functional/Immutable data structures\\n  * `pysam`: Python module for reading and manipulating SAM/BAM/VCF/BCF files\\n  * `pyshp`: Pure Python read/write support for ESRI Shapefile format\\n  * `pytest`: pytest: simple powerful testing with Python\\n  * `pytest-asyncio`: Pytest support for asyncio\\n  * `pytest-benchmark`: A pytest fixture for benchmarking code\\n  * `python-dateutil`: Extensions to the standard Python datetime module\\n  * `python-flint`: Python bindings for FLINT and Arb\\n  * `python-magic`: File type identification using libmagic\\n  * `python-sat`: A Python library for prototyping with SAT oracles\\n  * `python_solvespace`: Python library for SolveSpace CAD software\\n  * `pytz`: World timezone definitions, modern and historical\\n  * `pywavelets`: PyWavelets, wavelet transform module\\n  * `pyxel`: A retro game engine for Python\\n  * `pyxirr`: Calculates xirr on irregular cashflows\\n  * `pyyaml`: YAML parser and emitter for Python\\n  * `rebound`: An open-source multi-purpose N-body code\\n  * `reboundx`: A library for including additional forces in REBOUND\\n  * `referencing`: JSON Referencing + Python\\n  * `regex`: Alternative regular expression module, to replace re\\n  * `requests`: Python HTTP for Humans\\n  * `retrying`: Retrying\\n  * `rich`: Render rich text, tables, progress bars, syntax highlighting, markdown and more to the terminal\\n  * `river`: Online machine learning in Python\\n  * `RobotRaconteur`: Robot Raconteur: A communication framework for robotics, automation, and the Internet of Things\\n  * `rpds-py`: Python bindings to Rust's persistent data structures\\n  * `ruamel.yaml`: ruamel.yaml is a YAML parser/emitter that supports roundtrip preservation of comments, seq/map flow style, and map key order\\n  * `rust-panic-test`: Test package for Rust panic handling\\n  * `scikit-image`: Image processing in Python\\n  * `scikit-learn`: A set of python modules for machine learning and data mining\\n  * `scipy`: SciPy: Scientific Library for Python\\n  * `screed`: A short read database\\n  * `setuptools`: Easily download, build, install, upgrade, and uninstall Python packages\\n  * `shapely`: Geometric objects, predicates, and operations\\n  * `simplejson`: Simple, fast, extensible JSON encoder/decoder for Python\\n  * `sisl`: Siesta Input/Output Library\\n  * `six`: Python 2 and 3 compatibility utilities\\n  * `smart_open`: Utils for streaming large files (S3, HDFS, GCS, Azure Blob Storage, gzip, bz2...)\\n  * `sortedcontainers`: Sorted Containers -- Sorted List, Sorted Dict, Sorted Set\\n  * `soupsieve`: A modern CSS selector implementation for Beautiful Soup\\n  * `sourmash`: Compute and compare MinHash signatures for DNA sequences\\n  * `sparseqr`: Sparse QR Decomposition\\n  * `sqlalchemy`: Database Abstraction Library\\n  * `stack_data`: Extract data from python stack frames and tracebacks for informative displays\\n  * `statsmodels`: Statistical computations and models for Python\\n  * `strictyaml`: Type-safe YAML parser and validator\\n  * `svgwrite`: A Python library to create SVG drawings\\n  * `swiglpk`: Swig-generated Python interface to GLPK (GNU Linear Programming Kit)\\n  * `sympy`: Computer algebra system (CAS) in Python\\n  * `tblib`: Traceback serialization library\\n  * `termcolor`: ANSI color formatting for output in terminal\\n  * `texttable`: Module for creating simple ASCII tables\\n  * `threadpoolctl`: ThreadPool Control\\n  * `tomli`: A lil' TOML parser\\n  * `tomli-w`: A lil' TOML writer\\n  * `toolz`: List processing tools and functional utilities\\n  * `tqdm`: Fast, Extensible Progress Meter\\n  * `traitlets`: Traitlets Python configuration system\\n  * `traits`: Observable typed attributes for Python classes\\n  * `tskit`: The tree sequence toolkit\\n  * `typing-extensions`: Backported and Experimental Type Hints for Python 3.5+\\n  * `tzdata`: Provider of IANA time zone data\\n  * `uncertainties`: Transparent calculations with uncertainties on the quantities involved\\n  * `unyt`: A package for handling numpy arrays with units\\n  * `urllib3`: HTTP library with thread-safe connection pooling, file post, and more\\n  * `wcwidth`: Measures the displayed width of unicode strings in a terminal\\n  * `webencodings`: Character encoding aliases for legacy web content\\n  * `wordcloud`: A little word cloud generator\\n  * `wrapt`: Module for decorators, wrappers and monkey patching\\n  * `xarray`: N-D labeled arrays and datasets in Python\\n  * `xgboost`: Gradient boosting library\\n  * `xlrd`: Library for developers to extract data from Microsoft Excel (tm) spreadsheet files\\n  * `xxhash`: Python binding for xxHash\\n  * `xyzservices`: Source of XYZ tiles providers\\n  * `yarl`: Yet another URL library\\n  * `yt`: An analysis and visualization toolkit for volumetric data\\n  * `zarr`: An implementation of chunked, compressed, N-dimensional arrays for Python\\n  * `zengl`: A Python library for portable graphics development\\n  * `zstandard`: Zstandard bindings for Python\\n\\n\\n/draw\\n## Shortcuts\\n  * : Hand (panning tool).\\n  * : Selection.\\n  * : Rectangle.\\n  * : Diamond.\\n  * : Ellipse.\\n  * : Arrow.\\n  * : Line.\\n  * : Draw.\\n  * : Text.\\n  * : Insert image.\\n  * : Eraser.\\n  * : Frame tool.\\n  * : Laser pointer.\\n  * : Pick color from canvas.\\n  * : Edit line/arrow points.\\n  * : Edit text / add label.\\n  * : Add new line (text editor).\\n  * : Add new line (text editor).\\n  * : Finish editing (text editor).\\n  * : Finish editing (text editor).\\n  * : Curved arrow.\\n  * : Curved line.\\n  * : Keep selected tool active after drawing.\\n  * : Prevent arrow binding.\\n  * : Add / Update link for a selected shape.\\n  * : Zoom in.\\n  * : Zoom out.\\n  * : Reset zoom.\\n  * : Zoom to fit all elements.\\n  * : Zoom to selection.\\n  * : Move page up/down.\\n  * : Move page left/right.\\n  * : Zen mode.\\n  * : Snap to objects.\\n  * : Show grid.\\n  * : View mode.\\n  * : Toggle theme.\\n  * : Stats for nerds.\\n  * : Move canvas.\\n  * : Move canvas.\\n  * : Reset the canvas.\\n  * : Delete.\\n  * : Cut.\\n  * : Copy.\\n  * : Paste.\\n  * : Paste as plaintext.\\n  * : Select all.\\n  * : Add element to selection.\\n  * : Deep select.\\n  * : Deep select within box, and prevent dragging.\\n  * : Copy to clipboard as PNG.\\n  * : Copy styles.\\n  * : Paste styles.\\n  * : Send to back.\\n  * : Bring to front.\\n  * : Send backward.\\n  * : Bring forward.\\n  * : Align top.\\n  * : Align bottom.\\n  * : Align left.\\n  * : Align right.\\n  * : Duplicate.\\n  * : Duplicate.\\n  * : Lock/unlock selection.\\n  * : Undo.\\n  * : Redo.\\n  * : Redo.\\n  * : Group selection.\\n  * : Ungroup selection.\\n  * : Flip horizontal.\\n  * : Flip vertical.\\n  * : Show stroke color picker.\\n  * : Show background color picker.\\n  * : Decrease font size.\\n  * : Increase font size.\\n\\n\\n/graph\\n## Shortcuts\\n  * : Close a Dialog\\n  * : Show or Hide the Expression List\\n  * : Focus the Expression List\\n  * : Open Options for the Expression that has Keyboard Focus\\n  * : Show or Hide the Selected Expression\\n  * : Delete the Expression that has Keyboard Focus\\n  * : Toggle Between Degrees and Radians\\n  * : Show or Hide the Keypad\\n  * : Mute or Unmute Audio Playback\\n  * : Add an Expression\\n  * : Add a Note\\n  * : Add a Folder\\n  * : Collapse Selected Folder\\n  * : Expand Selected Folder\\n  * : Collapse All Folders\\n  * : Expand All Folders\\n  * : Add an Image\\n  * : Add a Table\\n  * : Undo\\n  * : Redo\\n  * : Zoom In\\n  * : Zoom Out\\n  * : Restore Default Viewport\\n  * : Zoom to Fit\\n  * : Turn Edit List Mode On or Off\\n  * : Open or Close the Graph Settings Menu\\n\\n\\n/geometry\\n## Shortcuts\\n  * : Close a Dialog\\n  * : Show or Hide the Expression List\\n  * : Focus the Expression List\\n  * : Open Options for the Expression that has Keyboard Focus\\n  * : Show or Hide the Selected Expression\\n  * : Delete the Expression that has Keyboard Focus\\n  * : Toggle Between Degrees and Radians\\n  * : Show or Hide the Keypad\\n  * : Mute or Unmute Audio Playback\\n  * : Add an Expression\\n  * : Add a Note\\n  * : Add a Folder\\n  * : Collapse Selected Folder\\n  * : Expand Selected Folder\\n  * : Collapse All Folders\\n  * : Expand All Folders\\n  * : Add an Image\\n  * : Add a Table\\n  * : Undo\\n  * : Redo\\n  * : Zoom In\\n  * : Zoom Out\\n  * : Restore Default Viewport\\n  * : Zoom to Fit\\n  * : Turn Edit List Mode On or Off\\n  * : Open or Close the Graph Settings Menu\\n\\n\\n/matrix\\nNothing yet!\\n/circuit\\n## Shortcuts\\n  * : Undo.\\n  * : Redo.\\n  * : Select all circuit components.\\n\\n\\n## Additional Features\\n  * `Values`: Add values (resistance, voltage, etc.): Double click on edit mode or typing while creating them.\\n\\n\\n¬© 2024 Stempad Inc.Scientific writing at the speed of thought\\n[](https://www.stempad.com/<https:/www.instagram.com/stempadhq>)[](https://www.stempad.com/<https:/x.com/StempadHQ>)[](https://www.stempad.com/<https:/www.linkedin.com/company/stempad>)[](https://www.stempad.com/<https:/www.youtube.com/@StempadHq>)[](https://www.stempad.com/<https:/discord.gg/Wb4Mdf5KsT>)|\\n###### Links\\n[Editor](https://www.stempad.com/</editor>)[Learn](https://www.stempad.com/</learn>)[Pricing](https://www.stempad.com/</pricing>)\\n###### Company\\n[Tech](https://www.stempad.com/</tech>)[Careers](https://www.stempad.com/</careers>)Contact\\n###### Legal\\n[Terms of service](https://www.stempad.com/</legal/terms-of-service>)[Privacy policy](https://www.stempad.com/</legal/privacy-policy>)\\n\" markdown_with_citations=\"‚úï\\nStempad‚ü®1‚ü©\\nLearn‚ü®2‚ü©Pricing‚ü®3‚ü©Blog‚ü®4‚ü©\\nLogin‚ü®5‚ü©Try for free‚ü®6‚ü©\\nBacked by![Backed by Y Combinator‚ü®7‚ü©]Combinator\\n# Fast scientific notes with just your keyboard.\\n##### Stempad is the text editor for anyone in STEM. Try it for yourself.\\nType '/' for blocks or '\\\\' for special characters\\ufeff\\nOpen Scratchpad ‚ü®6‚ü©\\n## Used by students at schools like\\n## Whiteboard flexibility in a digital world.\\n## Block types for all scientific disciplines.\\n/math\\nAuto-formatting math block. Supports pasting LaTeX, and copies into LaTeX.\\n/graph\\nEmbedded Desmos graphing calculator.\\nPython\\n  * Executable\\n  * Python\\n  * MATLAB\\n  * R\\n  * JavaScript\\n  * Node.js\\n  * TypeScript\\n  * Display\\n  * JSX\\n  * TSX\\n  * Rust\\n  * Go\\n  * Ruby\\n  * Java\\n  * C\\n  * C++\\n  * C#\\n  * PHP\\n  * Swift\\n  * Kotlin\\n  * Scala\\n  * Dart\\n  * Haskell\\n  * Lua\\n  * Perl\\n  * SQL\\n  * Clojure\\n  * Markdown\\n  * YAML\\n  * JSON\\n  * HTML\\n  * CSS\\n  * LaTeX\\n\\n\\n9\\n1\\n2\\n3\\n4\\n5\\n‚Ä∫\\n‚åÑ\\n‚åÑ\\ndef fibonacci(n):\\na, b = 0, 1\\nfor _ in range(n):\\nyield a\\na, b = b, a + b\\n/code\\nSyntax highlighting, multi-language support, and VSCode keybinds built in.\\n/table\\nSimple table with easy support for duplicating, moving, and adding cells.\\n**Company**| **Name**| **Country**  \\n---|---|---  \\nCake Inc.| Thomas| Germany  \\nFudge Corp| John| USA  \\n\\ufeff\\n![Chemical molecule‚ü®8‚ü©]\\n/chemistry\\nDraw and edit molecules.\\n/draw\\nQuick, hand-drawn like diagrams. Powered by Excalidraw.\\n/circuit\\nDraw and edit circuit schematics.\\n/geometry\\nEmbedded Desmos geometry sketcher.\\n### Reference\\n/math\\n## Shortcuts\\n  * : Superscript\\n  * : Subscript\\n  * : Type plaintext\\n  * : Latex symbols\\n\\n\\n## Keywords\\n  * `sqrt`: Square root expression (‚àö)\\n  * `sum`: Sigma notation expression (Œ£)\\n  * `prod`: Product notation expression (Œ†)\\n  * `int`: Integral expression (‚à´)\\n  * `vec`: Vector arrow characters (‚Üí)\\n  * `hat`: Hat character (^)\\n  * `pi`: Pi symbol (œÄ)\\n  * `Pi`: Uppercase Pi symbol (Œ†)\\n  * `theta`: Lowercase theta symbol (Œ∏)\\n  * `Theta`: Uppercase Theta symbol (Œò)\\n  * `rho`: Lowercase rho symbol (œÅ)\\n  * `phi`: Lowercase phi symbol (œÜ)\\n  * `Phi`: Uppercase Phi symbol (Œ¶)\\n  * `alpha`: Lowercase alpha symbol (Œ±)\\n  * `beta`: Lowercase beta symbol (Œ≤)\\n  * `gamma`: Lowercase gamma symbol (Œ≥)\\n  * `Gamma`: Uppercase Gamma symbol (Œì)\\n  * `delta`: Lowercase delta symbol (Œ¥)\\n  * `Delta`: Uppercase Delta symbol (Œî)\\n  * `epsilon`: Lowercase epsilon symbol (Œµ)\\n  * `zeta`: Lowercase zeta symbol (Œ∂)\\n  * `eta`: Lowercase eta symbol (Œ∑)\\n  * `iota`: Lowercase iota symbol (Œπ)\\n  * `kappa`: Lowercase kappa symbol (Œ∫)\\n  * `lambda`: Lowercase lambda symbol (Œª)\\n  * `Lambda`: Uppercase Lambda symbol (Œõ)\\n  * `mu`: Lowercase mu symbol (Œº)\\n  * `nu`: Lowercase nu symbol (ŒΩ)\\n  * `xi`: Lowercase xi symbol (Œæ)\\n  * `Xi`: Uppercase Xi symbol (Œû)\\n  * `omicron`: Lowercase omicron symbol (Œø)\\n  * `sigma`: Lowercase sigma symbol (œÉ)\\n  * `Sigma`: Uppercase Sigma symbol (Œ£)\\n  * `tau`: Lowercase tau symbol (œÑ)\\n  * `upsilon`: Lowercase upsilon symbol (œÖ)\\n  * `Upsilon`: Uppercase Upsilon symbol (Œ•)\\n  * `chi`: Lowercase chi symbol (œá)\\n  * `\\\\psi`: Lowercase psi symbol (œà)\\n  * `\\\\Psi`: Uppercase Psi symbol (Œ®)\\n  * `omega`: Lowercase omega symbol (œâ)\\n  * `Omega`: Uppercase Omega symbol (Œ©)\\n  * `infty`: Infinity symbol (‚àû)\\n  * `partial`: Partial derivative symbol (‚àÇ)\\n  * `nabla`: Nabla symbol (‚àá)\\n  * `prime`: Prime symbol (‚Ä≤)\\n  * `times`: Multiplication symbol (√ó)\\n  * `div`: Division symbol (√∑)\\n  * `cdot`: Centered dot symbol (¬∑)\\n  * `circ`: Ring operator symbol (‚àò)\\n  * `bullet`: Bullet operator symbol (‚Ä¢)\\n  * `odot`: Circled dot operator (‚äô)\\n  * `oplus`: Circled plus operator (‚äï)\\n  * `otimes`: Circled times operator (‚äó)\\n  * `cup`: Union symbol (‚à™)\\n  * `cap`: Intersection symbol (‚à©)\\n  * `vee`: Logical OR symbol (‚à®)\\n  * `wedge`: Logical AND symbol (‚àß)\\n  * `sim`: Similar to symbol (‚àº)\\n  * `simeq`: Asymptotically equal to symbol (‚âÉ)\\n  * `approx`: Approximately equal to symbol (‚âà)\\n  * `cong`: Congruent to symbol (‚âÖ)\\n  * `neq`: Not equal to symbol (‚â†)\\n  * `equiv`: Equivalent to symbol (‚â°)\\n  * `leq`: Less than or equal to symbol (‚â§)\\n  * `geq`: Greater than or equal to symbol (‚â•)\\n  * `ll`: Much less than symbol (‚â™)\\n  * `gg`: Much greater than symbol (‚â´)\\n  * `subset`: Subset of symbol (‚äÇ)\\n  * `supset`: Superset of symbol (‚äÉ)\\n  * `subseteq`: Subset of or equal to symbol (‚äÜ)\\n  * `supseteq`: Superset of or equal to symbol (‚äá)\\n  * `\\\\in`: An element of symbol (‚àà)\\n  * `notin`: Not an element of symbol (‚àâ)\\n  * `propto`: Proportional to symbol (‚àù)\\n  * `forall`: For all symbol (‚àÄ)\\n  * `exists`: There exists symbol (‚àÉ)\\n  * `nexists`: There does not exist symbol (‚àÑ)\\n  * `neg`: Negation symbol (¬¨)\\n  * `lnot`: Logical NOT symbol (¬¨)\\n  * `rightarrow`: Right arrow symbol (‚Üí)\\n  * `leftarrow`: Left arrow symbol (‚Üê)\\n  * `leftrightarrow`: Left-right arrow symbol (‚Üî)\\n  * `Rightarrow`: Right double arrow symbol (‚áí)\\n  * `Leftarrow`: Left double arrow symbol (‚áê)\\n  * `Leftrightarrow`: Left-right double arrow symbol (‚áî)\\n  * `mapsto`: Maps to symbol (‚Ü¶)\\n  * `to`: To symbol (‚Üí)\\n  * `aleph`: Aleph symbol (‚Ñµ)\\n  * `hbar`: Reduced Planck constant symbol (‚Ñè)\\n  * `imath`: Dotless i symbol (ƒ±)\\n  * `jmath`: Dotless j symbol (»∑)\\n  * `ell`: Script l symbol (‚Ñì)\\n  * `Re`: Real part symbol (‚Ñú)\\n  * `Im`: Imaginary part symbol (‚Ñë)\\n  * `\\\\N`: Set of natural numbers symbol (‚Ñï)\\n  * `\\\\Z`: Set of integers symbol (‚Ñ§)\\n  * `\\\\Q`: Set of rational numbers symbol (‚Ñö)\\n  * `\\\\R`: Set of real numbers symbol (‚Ñù)\\n  * `\\\\C`: Set of complex numbers symbol (‚ÑÇ)\\n  * `\\\\P`: Set of prime numbers symbol (‚Ñô)\\n  * `\\\\H`: Set of quaternions symbol (‚Ñç)\\n\\n\\n/chemistry\\n## Shortcuts\\n  * : Undo.\\n  * : Redo.\\n  * : Return to the standard editing state (carbon, single bond).\\n  * : Single bond.\\n  * : Double bond.\\n  * : 3..8 for 3 to 8 membered rings, 1 for phenyl and 0 for furyl.\\n  * : Enter delete mode.\\n  * : COOH group.\\n  * : NO2 group.\\n  * : SO3H group.\\n  * : tert-Butyl group.\\n  * : Carbon.\\n  * : Nitrogen.\\n  * : Oxygen.\\n  * : Sulfur.\\n  * : Fluorine.\\n  * : Chlorine.\\n  * : Bromine.\\n  * : Iodine.\\n  * : Phosphorus.\\n  * : Halogen.\\n\\n\\n/table\\n## Shortcuts\\n  * : With no text selected, copy current row.\\n  * : With no text selected, cut current row.\\n  * : Paste selected content. Supports pasting copied rows.\\n  * : Swap current row with row directly above.\\n  * : Swap current row with row directly below.\\n  * : Swap current column with the column directly right of it.\\n  * : Swap current column with the column directly left of it.\\n  * : Create copy of current row directly above.\\n  * : Create copy of current row directly below.\\n  * : Create copy of current column directly to the right.\\n  * : Create copy of current column directly to the left.\\n\\n\\n/code\\n## Shortcuts\\n  * : With no text selected, copy current line.\\n  * : With no text selected, cut current line.\\n  * : Paste selected content. Supports pasting copied lines.\\n  * : Swap current line with line directly above.\\n  * : Swap current line with line directly below.\\n  * : Create copy of current line directly above.\\n  * : Create copy of current line directly below.\\n\\n\\n## Supported packages\\n  * `aiohttp`: Asynchronous HTTP client/server framework\\n  * `aiosignal`: Managed signals implementation on top of asyncio\\n  * `altair`: Declarative statistical visualization library\\n  * `annotated-types`: Typing annotations for runtime type checking\\n  * `asciitree`: ASCII trees for Python\\n  * `astropy`: Astronomy and astrophysics core library\\n  * `astropy_iers_data`: IERS data for Astropy\\n  * `asttokens`: Annotate AST trees with source code positions\\n  * `async-timeout`: Timeout context manager for asyncio programs\\n  * `atomicwrites`: Atomic file writes\\n  * `attrs`: Classes without boilerplate\\n  * `autograd`: Efficiently computes derivatives of numpy code\\n  * `awkward-cpp`: CPU kernels for Awkward Array\\n  * `b2d`: Box2D physics engine Python wrapper\\n  * `bcrypt`: Modern password hashing library\\n  * `beautifulsoup4`: Screen-scraping library\\n  * `biopython`: Tools for computational molecular biology\\n  * `bitarray`: Efficient array of booleans\\n  * `bitstring`: Simple construction, analysis, and modification of binary data\\n  * `bleach`: HTML sanitizing library\\n  * `bokeh`: Interactive visualization library\\n  * `boost-histogram`: Python bindings for the C++ Boost::Histogram library\\n  * `brotli`: Brotli compression algorithm\\n  * `cachetools`: Extensible memoizing collections and decorators\\n  * `Cartopy`: Cartographic tools for Python\\n  * `cbor-diag`: CBOR diagnostic notation tools\\n  * `certifi`: Collection of root certificates for SSL/TLS verification\\n  * `cffi`: Foreign Function Interface for Python calling C code\\n  * `cffi_example`: Example package for CFFI\\n  * `cftime`: Time-handling functionality from netcdf4-python\\n  * `charset-normalizer`: The Real First Universal Charset Detector\\n  * `clarabel`: Interior point solver for convex optimization problems\\n  * `click`: Composable command line interface toolkit\\n  * `cligj`: Click params for commmand line GIS applications\\n  * `cloudpickle`: Extended pickling support for Python objects\\n  * `cmyt`: Colormaps for YT\\n  * `colorspacious`: Powerful, accurate, and easy-to-use Python library for doing colorspace conversions\\n  * `contourpy`: Python library for calculating contours of 2D quadrilateral grids\\n  * `coolprop`: Thermophysical properties for the masses\\n  * `coverage`: Code coverage measurement for Python\\n  * `cramjam`: Thin Python bindings to de/compression algorithms in Rust\\n  * `crc32c`: Python wrapper for CRC32C algorithm\\n  * `cryptography`: Cryptographic recipes and primitives\\n  * `cssselect`: CSS Selectors for Python\\n  * `cvxpy-base`: A Python-embedded modeling language for convex optimization problems\\n  * `cycler`: Composable style cycles\\n  * `cysignals`: Interrupt and signal handling for Cython\\n  * `cytoolz`: Cython implementation of Toolz\\n  * `decorator`: Decorators for Humans\\n  * `demes`: A Python API for demes data\\n  * `deprecation`: A library to handle automated deprecations\\n  * `distlib`: Distribution utilities\\n  * `docutils`: Docutils -- Python Documentation Utilities\\n  * `duckdb`: DuckDB embedded database\\n  * `ewah_bool_utils`: Bit array compression using the Enhanced Word Aligned Hybrid (EWAH) scheme\\n  * `exceptiongroup`: Backport of PEP 654 (exception groups)\\n  * `executing`: Get the currently executing AST node of a frame, and other information\\n  * `fastparquet`: Python support for Parquet file format\\n  * `fiona`: Fiona reads and writes spatial data files\\n  * `fonttools`: Tools to manipulate font files\\n  * `freesasa`: Calculate solvent accessible surface areas of proteins\\n  * `frozenlist`: A list-like structure which implements collections.abc.MutableSequence\\n  * `fsspec`: File-system specification\\n  * `future`: Clean single-source support for Python 3 and 2\\n  * `galpy`: Galactic Dynamics in Python\\n  * `gensim`: Topic modelling, document indexing and similarity retrieval with large corpora\\n  * `geopandas`: Geographic pandas extensions\\n  * `gmpy2`: GMP/MPIR, MPFR, and MPC interface to Python 2.6+ and 3.x\\n  * `gsw`: Gibbs SeaWater Oceanographic Package of TEOS-10\\n  * `h5py`: Read and write HDF5 files from Python\\n  * `html5lib`: HTML parser based on the WHATWG HTML specification\\n  * `idna`: Internationalized Domain Names in Applications (IDNA)\\n  * `igraph`: High performance graph data structures and algorithms\\n  * `imageio`: Library for reading and writing a wide range of image, video, scientific, and volumetric data formats\\n  * `iniconfig`: Brain-dead simple config-ini parsing\\n  * `ipython`: IPython: Productive Interactive Computing\\n  * `jedi`: An autocompletion tool for Python that can be used for text editors\\n  * `Jinja2`: A very fast and expressive template engine\\n  * `joblib`: Lightweight pipelining: using Python functions as pipeline jobs\\n  * `jsonschema`: An implementation of JSON Schema validation for Python\\n  * `jsonschema_specifications`: The JSON Schema meta-schemas and vocabularies, exposed as a Registry\\n  * `kiwisolver`: A fast implementation of the Cassowary constraint solver\\n  * `lakers-python`: Python bindings for the LAKERS library\\n  * `lazy-object-proxy`: A fast and thorough lazy object proxy\\n  * `lazy_loader`: lazy_loader\\n  * `libcst`: A concrete syntax tree with AST-like properties for Python 3.5, 3.6, 3.7, 3.8, 3.9, and 3.10 programs\\n  * `lightgbm`: LightGBM Python Package\\n  * `logbook`: A logging replacement for Python\\n  * `lxml`: Powerful and Pythonic XML processing library combining libxml2/libxslt with the ElementTree API\\n  * `MarkupSafe`: Safely add untrusted strings to HTML/XML markup\\n  * `matplotlib`: Python plotting package\\n  * `matplotlib-inline`: Inline Matplotlib backend for Jupyter\\n  * `matplotlib-pyodide`: Matplotlib for Pyodide\\n  * `memory-allocator`: A Python memory allocator for experimentation\\n  * `micropip`: A lightweight Python package installer for the web browser\\n  * `mmh3`: Python wrapper for MurmurHash (MurmurHash3), a set of fast and robust hash functions\\n  * `mne`: MNE: Magnetoencephalography (MEG) and Electroencephalography (EEG) in Python\\n  * `more-itertools`: More routines for operating on iterables, beyond itertools\\n  * `mpmath`: Python library for arbitrary-precision floating-point arithmetic\\n  * `msgpack`: MessagePack (de)serializer\\n  * `msgspec`: A fast serialization and validation library, with builtin support for JSON, MessagePack, YAML, and TOML\\n  * `msprime`: A fast and accurate coalescent simulator\\n  * `multidict`: multidict implementation\\n  * `munch`: A dot-accessible dictionary (a la JavaScript objects)\\n  * `mypy`: Optional static typing for Python\\n  * `netcdf4`: Provides an object-oriented python interface to the netCDF version 4 library\\n  * `networkx`: Python package for creating and manipulating graphs and networks\\n  * `newick`: A python module to read and write the Newick format\\n  * `nh3`: Ammonia: Python refactoring library\\n  * `nlopt`: Library for nonlinear optimization, wrapping many algorithms for global and local, constrained or unconstrained, optimization\\n  * `nltk`: Natural Language Toolkit\\n  * `numcodecs`: A Python package providing buffer compression and transformation codecs for use in data storage and communication applications\\n  * `numpy`: Fundamental package for array computing in Python\\n  * `opencv-python`: Wrapper package for OpenCV python bindings\\n  * `optlang`: Sympy based mathematical programming language\\n  * `orjson`: Fast, correct Python JSON library supporting dataclasses, datetimes, and numpy\\n  * `packaging`: Core utilities for Python packages\\n  * `pandas`: Powerful data structures for data analysis, time series, and statistics\\n  * `parso`: A Python Parser\\n  * `patsy`: A Python package for describing statistical models and for building design matrices\\n  * `peewee`: A small, expressive ORM\\n  * `Pillow`: Python Imaging Library (Fork)\\n  * `pillow_heif`: Python Pillow High Efficiency Image Format (HEIF) plugin\\n  * `pkgconfig`: Interface Python with pkg-config\\n  * `pluggy`: Plugin and hook calling mechanisms for python\\n  * `pplpy`: Python interface to the Parma Polyhedra Library\\n  * `primecountpy`: Python bindings for Kim Walisch's primecount library\\n  * `prompt_toolkit`: Library for building powerful interactive command lines in Python\\n  * `protobuf`: Protocol Buffers\\n  * `pure_eval`: Safely evaluate AST nodes without side effects\\n  * `py`: Library with cross-python path, ini-parsing, io, code, log facilities\\n  * `pyclipper`: Cython wrapper for the C++ translation of the Angus Johnson's Clipper library\\n  * `pycparser`: C parser in Python\\n  * `pycryptodome`: Cryptographic library for Python\\n  * `pydantic`: Data validation and settings management using Python type hints\\n  * `pydantic_core`: Core functionality for pydantic\\n  * `pyerfa`: Python bindings for ERFA\\n  * `pygame-ce`: Python Game Development\\n  * `Pygments`: Syntax highlighting package written in Python\\n  * `pyheif`: Python 3 bindings for libheif library\\n  * `pyiceberg`: Python implementation of the Apache Iceberg table format\\n  * `pyinstrument`: Call stack profiler for Python. Shows you why your code is slow!\\n  * `pynacl`: Python binding to the Networking and Cryptography (NaCl) library\\n  * `pyodide-http`: A fork of the Python 'http' package for use with Pyodide\\n  * `pyparsing`: Python parsing module\\n  * `pyproj`: Python interface to PROJ (cartographic projections and coordinate transformations library)\\n  * `pyrsistent`: Persistent/Functional/Immutable data structures\\n  * `pysam`: Python module for reading and manipulating SAM/BAM/VCF/BCF files\\n  * `pyshp`: Pure Python read/write support for ESRI Shapefile format\\n  * `pytest`: pytest: simple powerful testing with Python\\n  * `pytest-asyncio`: Pytest support for asyncio\\n  * `pytest-benchmark`: A pytest fixture for benchmarking code\\n  * `python-dateutil`: Extensions to the standard Python datetime module\\n  * `python-flint`: Python bindings for FLINT and Arb\\n  * `python-magic`: File type identification using libmagic\\n  * `python-sat`: A Python library for prototyping with SAT oracles\\n  * `python_solvespace`: Python library for SolveSpace CAD software\\n  * `pytz`: World timezone definitions, modern and historical\\n  * `pywavelets`: PyWavelets, wavelet transform module\\n  * `pyxel`: A retro game engine for Python\\n  * `pyxirr`: Calculates xirr on irregular cashflows\\n  * `pyyaml`: YAML parser and emitter for Python\\n  * `rebound`: An open-source multi-purpose N-body code\\n  * `reboundx`: A library for including additional forces in REBOUND\\n  * `referencing`: JSON Referencing + Python\\n  * `regex`: Alternative regular expression module, to replace re\\n  * `requests`: Python HTTP for Humans\\n  * `retrying`: Retrying\\n  * `rich`: Render rich text, tables, progress bars, syntax highlighting, markdown and more to the terminal\\n  * `river`: Online machine learning in Python\\n  * `RobotRaconteur`: Robot Raconteur: A communication framework for robotics, automation, and the Internet of Things\\n  * `rpds-py`: Python bindings to Rust's persistent data structures\\n  * `ruamel.yaml`: ruamel.yaml is a YAML parser/emitter that supports roundtrip preservation of comments, seq/map flow style, and map key order\\n  * `rust-panic-test`: Test package for Rust panic handling\\n  * `scikit-image`: Image processing in Python\\n  * `scikit-learn`: A set of python modules for machine learning and data mining\\n  * `scipy`: SciPy: Scientific Library for Python\\n  * `screed`: A short read database\\n  * `setuptools`: Easily download, build, install, upgrade, and uninstall Python packages\\n  * `shapely`: Geometric objects, predicates, and operations\\n  * `simplejson`: Simple, fast, extensible JSON encoder/decoder for Python\\n  * `sisl`: Siesta Input/Output Library\\n  * `six`: Python 2 and 3 compatibility utilities\\n  * `smart_open`: Utils for streaming large files (S3, HDFS, GCS, Azure Blob Storage, gzip, bz2...)\\n  * `sortedcontainers`: Sorted Containers -- Sorted List, Sorted Dict, Sorted Set\\n  * `soupsieve`: A modern CSS selector implementation for Beautiful Soup\\n  * `sourmash`: Compute and compare MinHash signatures for DNA sequences\\n  * `sparseqr`: Sparse QR Decomposition\\n  * `sqlalchemy`: Database Abstraction Library\\n  * `stack_data`: Extract data from python stack frames and tracebacks for informative displays\\n  * `statsmodels`: Statistical computations and models for Python\\n  * `strictyaml`: Type-safe YAML parser and validator\\n  * `svgwrite`: A Python library to create SVG drawings\\n  * `swiglpk`: Swig-generated Python interface to GLPK (GNU Linear Programming Kit)\\n  * `sympy`: Computer algebra system (CAS) in Python\\n  * `tblib`: Traceback serialization library\\n  * `termcolor`: ANSI color formatting for output in terminal\\n  * `texttable`: Module for creating simple ASCII tables\\n  * `threadpoolctl`: ThreadPool Control\\n  * `tomli`: A lil' TOML parser\\n  * `tomli-w`: A lil' TOML writer\\n  * `toolz`: List processing tools and functional utilities\\n  * `tqdm`: Fast, Extensible Progress Meter\\n  * `traitlets`: Traitlets Python configuration system\\n  * `traits`: Observable typed attributes for Python classes\\n  * `tskit`: The tree sequence toolkit\\n  * `typing-extensions`: Backported and Experimental Type Hints for Python 3.5+\\n  * `tzdata`: Provider of IANA time zone data\\n  * `uncertainties`: Transparent calculations with uncertainties on the quantities involved\\n  * `unyt`: A package for handling numpy arrays with units\\n  * `urllib3`: HTTP library with thread-safe connection pooling, file post, and more\\n  * `wcwidth`: Measures the displayed width of unicode strings in a terminal\\n  * `webencodings`: Character encoding aliases for legacy web content\\n  * `wordcloud`: A little word cloud generator\\n  * `wrapt`: Module for decorators, wrappers and monkey patching\\n  * `xarray`: N-D labeled arrays and datasets in Python\\n  * `xgboost`: Gradient boosting library\\n  * `xlrd`: Library for developers to extract data from Microsoft Excel (tm) spreadsheet files\\n  * `xxhash`: Python binding for xxHash\\n  * `xyzservices`: Source of XYZ tiles providers\\n  * `yarl`: Yet another URL library\\n  * `yt`: An analysis and visualization toolkit for volumetric data\\n  * `zarr`: An implementation of chunked, compressed, N-dimensional arrays for Python\\n  * `zengl`: A Python library for portable graphics development\\n  * `zstandard`: Zstandard bindings for Python\\n\\n\\n/draw\\n## Shortcuts\\n  * : Hand (panning tool).\\n  * : Selection.\\n  * : Rectangle.\\n  * : Diamond.\\n  * : Ellipse.\\n  * : Arrow.\\n  * : Line.\\n  * : Draw.\\n  * : Text.\\n  * : Insert image.\\n  * : Eraser.\\n  * : Frame tool.\\n  * : Laser pointer.\\n  * : Pick color from canvas.\\n  * : Edit line/arrow points.\\n  * : Edit text / add label.\\n  * : Add new line (text editor).\\n  * : Add new line (text editor).\\n  * : Finish editing (text editor).\\n  * : Finish editing (text editor).\\n  * : Curved arrow.\\n  * : Curved line.\\n  * : Keep selected tool active after drawing.\\n  * : Prevent arrow binding.\\n  * : Add / Update link for a selected shape.\\n  * : Zoom in.\\n  * : Zoom out.\\n  * : Reset zoom.\\n  * : Zoom to fit all elements.\\n  * : Zoom to selection.\\n  * : Move page up/down.\\n  * : Move page left/right.\\n  * : Zen mode.\\n  * : Snap to objects.\\n  * : Show grid.\\n  * : View mode.\\n  * : Toggle theme.\\n  * : Stats for nerds.\\n  * : Move canvas.\\n  * : Move canvas.\\n  * : Reset the canvas.\\n  * : Delete.\\n  * : Cut.\\n  * : Copy.\\n  * : Paste.\\n  * : Paste as plaintext.\\n  * : Select all.\\n  * : Add element to selection.\\n  * : Deep select.\\n  * : Deep select within box, and prevent dragging.\\n  * : Copy to clipboard as PNG.\\n  * : Copy styles.\\n  * : Paste styles.\\n  * : Send to back.\\n  * : Bring to front.\\n  * : Send backward.\\n  * : Bring forward.\\n  * : Align top.\\n  * : Align bottom.\\n  * : Align left.\\n  * : Align right.\\n  * : Duplicate.\\n  * : Duplicate.\\n  * : Lock/unlock selection.\\n  * : Undo.\\n  * : Redo.\\n  * : Redo.\\n  * : Group selection.\\n  * : Ungroup selection.\\n  * : Flip horizontal.\\n  * : Flip vertical.\\n  * : Show stroke color picker.\\n  * : Show background color picker.\\n  * : Decrease font size.\\n  * : Increase font size.\\n\\n\\n/graph\\n## Shortcuts\\n  * : Close a Dialog\\n  * : Show or Hide the Expression List\\n  * : Focus the Expression List\\n  * : Open Options for the Expression that has Keyboard Focus\\n  * : Show or Hide the Selected Expression\\n  * : Delete the Expression that has Keyboard Focus\\n  * : Toggle Between Degrees and Radians\\n  * : Show or Hide the Keypad\\n  * : Mute or Unmute Audio Playback\\n  * : Add an Expression\\n  * : Add a Note\\n  * : Add a Folder\\n  * : Collapse Selected Folder\\n  * : Expand Selected Folder\\n  * : Collapse All Folders\\n  * : Expand All Folders\\n  * : Add an Image\\n  * : Add a Table\\n  * : Undo\\n  * : Redo\\n  * : Zoom In\\n  * : Zoom Out\\n  * : Restore Default Viewport\\n  * : Zoom to Fit\\n  * : Turn Edit List Mode On or Off\\n  * : Open or Close the Graph Settings Menu\\n\\n\\n/geometry\\n## Shortcuts\\n  * : Close a Dialog\\n  * : Show or Hide the Expression List\\n  * : Focus the Expression List\\n  * : Open Options for the Expression that has Keyboard Focus\\n  * : Show or Hide the Selected Expression\\n  * : Delete the Expression that has Keyboard Focus\\n  * : Toggle Between Degrees and Radians\\n  * : Show or Hide the Keypad\\n  * : Mute or Unmute Audio Playback\\n  * : Add an Expression\\n  * : Add a Note\\n  * : Add a Folder\\n  * : Collapse Selected Folder\\n  * : Expand Selected Folder\\n  * : Collapse All Folders\\n  * : Expand All Folders\\n  * : Add an Image\\n  * : Add a Table\\n  * : Undo\\n  * : Redo\\n  * : Zoom In\\n  * : Zoom Out\\n  * : Restore Default Viewport\\n  * : Zoom to Fit\\n  * : Turn Edit List Mode On or Off\\n  * : Open or Close the Graph Settings Menu\\n\\n\\n/matrix\\nNothing yet!\\n/circuit\\n## Shortcuts\\n  * : Undo.\\n  * : Redo.\\n  * : Select all circuit components.\\n\\n\\n## Additional Features\\n  * `Values`: Add values (resistance, voltage, etc.): Double click on edit mode or typing while creating them.\\n\\n\\n¬© 2024 Stempad Inc.Scientific writing at the speed of thought\\n[](https://www.stempad.com/<https:/www.instagram.com/stempadhq>)[](https://www.stempad.com/<https:/x.com/StempadHQ>)[](https://www.stempad.com/<https:/www.linkedin.com/company/stempad>)[](https://www.stempad.com/<https:/www.youtube.com/@StempadHq>)[](https://www.stempad.com/<https:/discord.gg/Wb4Mdf5KsT>)|\\n###### Links\\nEditor‚ü®6‚ü©Learn‚ü®2‚ü©Pricing‚ü®3‚ü©\\n###### Company\\nTech‚ü®9‚ü©Careers‚ü®10‚ü©Contact\\n###### Legal\\nTerms of service‚ü®11‚ü©Privacy policy‚ü®12‚ü©\\n\" references_markdown='\\n\\n## References\\n\\n‚ü®1‚ü© https://www.stempad.com/</>: Stempad\\n‚ü®2‚ü© https://www.stempad.com/</learn>: Learn\\n‚ü®3‚ü© https://www.stempad.com/</pricing>: Pricing\\n‚ü®4‚ü© https://www.stempad.com/</blog>: Blog\\n‚ü®5‚ü© https://www.stempad.com/</login>: Login\\n‚ü®6‚ü© https://www.stempad.com/</editor>: Try for free\\n‚ü®7‚ü© https://www.stempad.com/yc/YC-Logo-Square.svg: Backed by Y Combinator\\n‚ü®8‚ü© https://www.stempad.com/landing/chemistry.svg: Chemical molecule\\n‚ü®9‚ü© https://www.stempad.com/</tech>: Tech\\n‚ü®10‚ü© https://www.stempad.com/</careers>: Careers\\n‚ü®11‚ü© https://www.stempad.com/</legal/terms-of-service>: Terms of service\\n‚ü®12‚ü© https://www.stempad.com/</legal/privacy-policy>: Privacy policy\\n' fit_markdown='' fit_html=''",
  "generated_description": "**Stempad: The Notion for Science**\n\nFounded in 2024 and part of Y Combinator's Batch S24, Stempad aims to revolutionize the way students and scientists approach scientific writing and collaboration. Think of it as the \"Notion for science\"‚Äîa versatile platform that combines the flexibility of a whiteboard with the precision and convenience of a digital workspace.\n\n### What Stempad Offers\nStempad is the world‚Äôs first true pen-and-paper alternative tailored for fast scientific writing. It empowers users to seamlessly switch between various technical visualizations, annotate work, write papers, plan projects, take notes, create presentations, and collaborate in real-time. In essence, it‚Äôs an all-in-one tool for anyone in the STEM fields.\n\nSome standout features include:\n- **Markdown Formatting**: Effortlessly format equations with LaTeX support.\n- **Interactive Elements**: Integrated tools like an executable Python environment, graphing calculators, and even circuit drawing capabilities.\n- **Collaboration**: Real-time editing makes it ideal for team projects and discussions.\n\nIn its initial stages, Stempad is operated by a nimble team of one (the founder) and is based in [location: \"nan\"]. Harj Taggar, a veteran from Y Combinator, serves as their group partner, lending invaluable guidance as they grow.\n\n### The Vision\nStempad's mission is clear: make it faster and easier for STEM students and researchers to digitize and share their scientific ideas. In a world where collaboration and efficiency are paramount, Stempad is poised to become an essential tool in the scientific community, allowing ideas to flow as freely as the ink on paper.\n\nWant to get started? Head over to [Stempad‚Äôs website](https://www.stempad.com) to try it for free and experience the new frontier of scientific documentation.\n\nIn summary, whether you're drafting a complex research paper or just jotting down notes, Stempad is here to redefine what a scientific workspace looks like. It's more than just a tool; it's a movement toward more fluid and interactive scientific collaboration."
}