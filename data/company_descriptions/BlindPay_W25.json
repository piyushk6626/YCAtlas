{
  "links": "https://www.ycombinator.com/companies/blindpay",
  "name": "BlindPay",
  "headline": "Stablecoin API for global payments",
  "batch": "W25",
  "description": "BlindPay is a stablecoin API that enables companies to send and receive money worldwide using fiat money, stablecoins and multiple blockchains. We handle all the complex compliance and regulatory requirements, so companies can focus on their core business.",
  "activity_status": "Active",
  "website": "https://blindpay.com/",
  "founded_date": 2024.0,
  "team_size": 4.0,
  "location": null,
  "group_partner": "Harj Taggar",
  "group_partner_yc": "https://www.ycombinator.com/people/harj-taggar",
  "company_linkedin": null,
  "company_twitter": null,
  "tags": "industry:fintech; industry:crypto-web3; industry:payments; industry:api",
  "founders": [
    {
      "name": "Joao Borges, Founder",
      "description": "Co-Founder @ BlindPay — Stablecoin API for global payments — A prominent leader and entrepreneur, best known for founding one of Brazil's largest blockchain startups. In its first year of operation, he successfully scaled the company to seven-digit revenue and raised millions of dollars from top-tier venture capitalists. Borges is also an active contributor to the Nouns DAO ecosystem and has been recognized on the Forbes 30 Under 30 list.",
      "linkedin": "https://www.linkedin.com/in/joaoborgesjr/"
    },
    {
      "name": "Gabriel Lyra, Founder",
      "description": "Co-Founder & CTO @ BlindPay — Stablecoin API for global payments. Led software engineering at LendingClub, where he architected and implemented critical financial infrastructure handling $50B in monthly loan transactions. Previously at AWS, he optimized infrastructure scripts, reducing monthly costs from $15M to $1M.",
      "linkedin": "https://www.linkedin.com/in/gabriel-miranda-lyra-10a06448/"
    },
    {
      "name": "Gustavo Marinho, Founder",
      "description": "Co-Founder & CPO @ BlindPay — Stablecoin API for global payments. Specializing in consumer-facing financial products for Latin America, I bring over 8 years of experience building digital products. At PicPay (60M+ users), I led the design of a loans marketplace and instant payment initiatives, processing $1.2M in daily loans during MVP phase. As Co-founder of Dropull, I built and scaled a social gaming platform to 1M users.",
      "linkedin": "https://www.linkedin.com/in/gustavomarinho/"
    },
    {
      "name": "Bernardo Simonassi, Founder",
      "description": "Co-Founder & CEO @ BlindPay — Stablecoin API for global payments. Has been shaping the stablecoin payments industry for the past 3 years, during which he developed the first payroll platform powered by stablecoins. Previously at PicPay, he developed instant payment solutions serving 60M+ users.",
      "linkedin": "https://linkedin.com/in/bernardosm"
    }
  ],
  "status": true,
  "markdown": "raw_markdown='[](https://blindpay.com/</#hero>)\\n[Benefits](https://blindpay.com/</#benefits>)[Solutions](https://blindpay.com/</#solutions>)[Docs](https://blindpay.com/</docs/getting-started/overview>)\\n[Open App](https://blindpay.com/<https:/app.blindpay.com/>)\\n[Backed byCombinator (W25)](https://blindpay.com/<https:/www.ycombinator.com/launches/MeM-blindpay-stablecoin-api-for-global-payments>)\\n#  Stablecoin API for global payments \\nPower instant global transfers with a single integration.\\nGrow more, pay less, move faster.\\n[Get Started](https://blindpay.com/<https:/app.blindpay.com/sign-up>)[Get a Demo](https://blindpay.com/<https:/cal.com/bernardo-simonassi-nbxjop/demo-call>)\\n![BlindPay App & Dashboard](https://blindpay.com/home/blindpay-dashboard.jpg)\\n##  Process payments 24/7, anywhere. \\nEnable **instant** settlements and expand your global reach. \\nWe take care of the compliance and tech. \\n### Easy stablecoin integration\\nQuickly integrate stablecoins into your existing payment flow using our developer-friendly APIs.\\n### Offer instant onramp and offramp\\nConnect any blockchain wallet, get real-time quotes and enjoy low fees for a smooth user experience.\\n### Stay compliant everywhere\\nWe handle all regulatory, compliance, and technical hurdles. Concentrate on your core business.\\n###  As partners of industry leaders, we deliver the highest quality services. \\n##  Powering next-gen companies. \\nEnabling secure international payments in under 60 seconds, cutting traditional transaction times by 80%. \\n### Global Payroll\\nPay your contractors in any currency, no matter where they are.\\n### Enterprise Payouts\\nEfficiently manage mass global payments with ease.\\n### Merchant Settlement\\nExpedite payouts with automatic currency consolidation.\\n### Business Invoicing\\nStreamline your invoicing process with stablecoin transactions.\\n### Remittances\\nOffer fast and affordable remittance solutions to your customers.\\n##  Secure by design, across all stacks. \\nAdd fiat gateways to your apps with minimal code. Our SDKs support multiple languages and frameworks, backed by a developer-friendly REST API with public OpenAPI documentation. \\nKYC/B\\nBank Accounts\\nCrypto to Fiat\\nBlockchain Wallets\\nFiat to Crypto\\n```\\nimport { BlindPay } from \\'blindpay\\';\\nconst blindpay = new BlindPay(\\'<api_key>\\');\\n(async function() {\\n // Light KYC\\n await blindpay.customers.create(\\'<instance_id>\\', {\\n   type: \"individual\",\\n   kyc_type: \"light\",\\n   email: \"email@example.com\",\\n   tax_id: \"12345678\",\\n   country: \"US\",\\n   first_name: \"John\",\\n   last_name: \"Doe\",\\n   date_of_birth: \"1998-01-01T00:00:00Z\",\\n });\\n // Standard KYC\\n await blindpay.customers.create(\\'<instance_id>\\', {\\n   type: \"individual\",\\n   kyc_type: \"standard\",\\n   email: \"email@example.com\",\\n   tax_id: \"12345678\",\\n   address_line_1: \"8 The Green\",\\n   address_line_2: \"#12345\",\\n   city: \"Dover\",\\n   state_province_region: \"DE\",\\n   country: \"US\",\\n   postal_code: \"02050\",\\n   ip_address: \"127.0.0.1\",\\n   phone_number: \"+1234567890\",\\n   proof_of_address_doc_type: \"UTILITY_BILL\",\\n   proof_of_address_doc_file: \"https://pub-4fabf5dd55154f19a0384b16f2b816d9.r2.dev/v4-460px-Get-Proof-of-Address-Step-3-Version-2.jpg.jpeg\",\\n   first_name: \"John\",\\n   last_name: \"Doe\",\\n   date_of_birth: \"1998-01-01T00:00:00Z\",\\n   id_doc_country: \"US\",\\n   id_doc_type: \"PASSPORT\",\\n   id_doc_front_file: \"https://pub-4fabf5dd55154f19a0384b16f2b816d9.r2.dev/1000_F_365165797_VwQbNaD4yjWwQ6y1ENKh1xS0TXauOQvj.jpg\"\\n });\\n // Standard KYB\\n await blindpay.customers.create(\\'<instance_id>\\', {\\n  type: \\'business\\',\\n  kyc_type: \\'standard\\',\\n  email: \\'bernardo@blindpay.com\\',\\n  tax_id: \\'1234567\\',\\n  address_line_1: \\'8 The Green\\',\\n  address_line_2: \\'#19364\\',\\n  city: \\'Dover\\',\\n  state_province_region: \\'DE\\',\\n  country: \\'US\\',\\n  postal_code: \\'19901\\',\\n  proof_of_address_doc_type: \\'UTILITY_BILL\\',\\n  proof_of_address_doc_file: \\'https://onb-bucket.blindpay.io/1739822718778-logo.jpg\\',\\n  legal_name: \\'Blind Pay, Inc.\\',\\n  alternate_name: \\'BlindPay\\',\\n  formation_date: \\'2024-05-02T00:00:00.000Z\\',\\n  website: \\'https://blindpay.com\\',\\n  owners: [\\n   {\\n     role: \\'beneficial_controlling\\',\\n     first_name: \\'Bernardo\\',\\n     last_name: \\'Simonassi Moura\\',\\n     date_of_birth: \\'1990-11-28T00:00:00.000Z\\',\\n     tax_id: \\'14947677768\\',\\n     address_line_1: \\'137 The Green\\',\\n     address_line_2: \\'Apt 902\\',\\n     city: \\'Dover\\',\\n     state_province_region: \\'DE\\',\\n     country: \\'US\\',\\n     postal_code: \\'94101\\',\\n     id_doc_country: \\'US\\',\\n     id_doc_type: \\'PASSPORT\\',\\n     id_doc_front_file: \\'https://onb-bucket.blindpay.io/1739822686976-logo.jpg\\',\\n     id_doc_back_file: \\'https://onb-bucket.blindpay.io/1739822697594-logo.jpg\\',\\n     proof_of_address_doc_type: \\'UTILITY_BILL\\',\\n     proof_of_address_doc_file: \\'https://onb-bucket.blindpay.io/1739822701998-logo.jpg\\',\\n   },\\n  ],\\n  incorporation_doc_file: \\'https://onb-bucket.blindpay.io/1739822713152-logo.jpg\\',\\n  proof_of_ownership_doc_file: \\'https://onb-bucket.blindpay.io/1739822716647-logo.jpg\\',\\n  })\\n})\\n\\n```\\n\\n```\\nimport { BlindPay } from \\'blindpay\\';\\nconst blindpay = new BlindPay(\\'<api_key>\\');\\n(async function() {\\n // ACH\\n await blindpay.bankAccounts.add(\\'<instance_id>\\', \\'<customer_id>\\', {\\n  type: \"ach\",\\n  name: \"Display Name\",\\n  beneficiary_name: \"<Replace this>\",\\n  routing_number: \"<Replace this>\",\\n  account_number: \"<Replace this>\",\\n  account_type: \"checking\",\\n  account_class: \"individual\"\\n });\\n // Domestic Wire\\n await blindpay.bankAccounts.add(\\'<instance_id>\\', \\'<customer_id>\\', {\\n  type: \"wire\",\\n  name: \"Display Name\",\\n  beneficiary_name: \"<Replace this>\",\\n  routing_number: \"<Replace this>\",\\n  account_number: \"<Replace this>\",\\n  address_line_1: \"8 The Green\",\\n  address_line_2: \"#12345\",\\n  city: \"Dover\",\\n  state_province_region: \"DE\",\\n  country: \"US\",\\n  postal_code: \"02050\"\\n });\\n // PIX (Brazil)\\n await blindpay.bankAccounts.add(\\'<instance_id>\\', \\'<customer_id>\\', {\\n  type: \"pix\",\\n  name: \"Display Name\",\\n  pix_key: \"<Replace this>\",\\n });\\n // SPEI (Mexico)\\n await blindpay.bankAccounts.add(\\'<instance_id>\\', \\'<customer_id>\\', {\\n  type: \"spei_bitso\",\\n  name: \"MXN Account\",\\n  spei_protocol: \"debitcard\",\\n  spei_clabe: \"5482347403740546\",\\n  spei_institution_code: \"40002\",\\n  beneficiary_name: \"Juan Pérez\"\\n });\\n // ACH COP (Colombia)\\n await blindpay.bankAccounts.add(\\'<instance_id>\\', \\'<customer_id>\\', {\\n  type: \"ach_cop_bitso\",\\n  name: \"COP Account\",\\n  ach_cop_beneficiary_first_name: \"Fernando\",\\n  ach_cop_beneficiary_last_name: \"Guzman Alarcón\",\\n  ach_cop_document_id: \"1661105408\",\\n  ach_cop_document_type: \"CC\",\\n  ach_cop_email: \"fernando.guzman@gmail.com\",\\n  ach_cop_bank_code: \"051\",\\n  ach_cop_bank_account: \"12345671\",\\n  account_type: \"saving\"\\n });\\n // Transfers 3.0 (Argentina)\\n await blindpay.bankAccounts.add(\\'<instance_id>\\', \\'<customer_id>\\', {\\n  type: \"transfers_bitso\",\\n  name: \"ARS Account\",\\n  transfers_type: \"ALIAS\",\\n  transfers_account: \"BM123123123123\",\\n  beneficiary_name: \"Bryan Montes\"\\n });\\n})\\n\\n```\\n\\n```\\nimport { BlindPay } from \\'blindpay\\';\\nconst blindpay = new BlindPay(\\'<api_key>\\');\\n(async function() {\\n // Request a quote\\n const { id } = await blindpay.payouts.getQuote(\\'<instance_id>\\', \\'<bank_account_id>\\', {\\n  currency_type: \"sender\",\\n  cover_fees: true,\\n  request_amount: 1000,\\n  network: \"base\",\\n  token: \"USDC\"\\n });\\n // Execute payout\\n await blindpay.payouts.executeEvm(\\'<instance_id>\\', \\'<quote_id>\\', {\\n  sender_wallet_address: \\'0x...\\'\\n });\\n})\\n\\n```\\n\\n```\\nimport { BlindPay } from \\'blindpay\\';\\nimport { http, createConfig, wagmiConfig } from \\'wagmi\\'\\nimport { base, arbitrum, polygon } from \\'wagmi/chains\\'\\nexport const config = createConfig({\\n chains: [base, arbitrum, polygon],\\n transports: {\\n  [base.id]: http(),\\n  [arbitrum.id]: http(),\\n  [polygon.id]: http(),\\n },\\n})\\nconst blindpay = new BlindPay(\\'<api_key>\\');\\n(async function() {\\n // Request message to sign\\n const { message } = await blindpay.blockchainWallets.getMessage();\\n // Sign message on chain\\n const signature_tx_hash = await signMessage(wagmiConfig, {\\n  message,\\n })\\n await blindpay.blockchainWallets.add(\\'<instance_id>\\', \\'<customer_id>\\', {\\n  name: \"Display Name\",\\n  network: \"base\",\\n  token: \"USDC\",\\n  signature_tx_hash,\\n });\\n})\\n\\n```\\n\\n```\\nimport { BlindPay } from \\'blindpay\\';\\nconst blindpay = new BlindPay(\\'<api_key>\\');\\n(async function() {\\n // Request a quote\\n const { id } = await blindpay.payins.getQuote(\\'<instance_id>\\', \\'<blockchain_wallet_id>\\', {\\n  currency_type: \"sender\",\\n  cover_fees: true,\\n  request_amount: 1000,\\n  network: \"base\",\\n  token: \"USDC\"\\n });\\n // Execute payin\\n await blindpay.payins.getTransferDetails(\\'<instance_id>\\', \\'<quote_id>\\');\\n})\\n\\n```\\n\\n##  One API. Multiple payment rails. \\n[Get a Demo](https://blindpay.com/<https:/cal.com/bernardo-simonassi-nbxjop/demo-call>)[Go to Docs](https://blindpay.com/</docs/getting-started/overview>)\\nBlindPay, Inc. is a financial technology company and is a registered Money Services Business with the US Treasury\\'s Financial Crimes Enforcement Network, also known as FinCEN. We are not a bank. By creating and using your account at BlindPay, you agree to BlindPay, Inc.\\'s Terms of Service, to all applicable laws and regulations, and agree that you are responsible for compliance with any and all applicable local laws. \\n[](https://blindpay.com/<https:/twitter.com/blindpaylabs>)[](https://blindpay.com/<https:/www.linkedin.com/company/blindpay>)[](https://blindpay.com/<https:/github.com/blindpaylabs>)[](https://blindpay.com/<https:/discord.gg/2DFKYaxjpp>)\\n[All systems operational](https://blindpay.com/<https:/blindpay.openstatus.dev/>)\\n####  Company \\n[Support](https://blindpay.com/<https:/discord.gg/2DFKYaxjpp>)[Privacy Policy](https://blindpay.com/</privacy-policy>)[Terms of Service](https://blindpay.com/</terms-of-service>)\\n####  Developers \\n[API Documentation](https://blindpay.com/</docs/getting-started/overview>)[API Reference](https://blindpay.com/<https:/api.blindpay.com/reference>)\\n' markdown_with_citations='[](https://blindpay.com/</#hero>)\\nBenefits⟨1⟩Solutions⟨2⟩Docs⟨3⟩\\nOpen App⟨4⟩\\nBacked byCombinator (W25)⟨5⟩\\n#  Stablecoin API for global payments \\nPower instant global transfers with a single integration.\\nGrow more, pay less, move faster.\\nGet Started⟨6⟩Get a Demo⟨7⟩\\n![BlindPay App & Dashboard⟨8⟩]\\n##  Process payments 24/7, anywhere. \\nEnable **instant** settlements and expand your global reach. \\nWe take care of the compliance and tech. \\n### Easy stablecoin integration\\nQuickly integrate stablecoins into your existing payment flow using our developer-friendly APIs.\\n### Offer instant onramp and offramp\\nConnect any blockchain wallet, get real-time quotes and enjoy low fees for a smooth user experience.\\n### Stay compliant everywhere\\nWe handle all regulatory, compliance, and technical hurdles. Concentrate on your core business.\\n###  As partners of industry leaders, we deliver the highest quality services. \\n##  Powering next-gen companies. \\nEnabling secure international payments in under 60 seconds, cutting traditional transaction times by 80%. \\n### Global Payroll\\nPay your contractors in any currency, no matter where they are.\\n### Enterprise Payouts\\nEfficiently manage mass global payments with ease.\\n### Merchant Settlement\\nExpedite payouts with automatic currency consolidation.\\n### Business Invoicing\\nStreamline your invoicing process with stablecoin transactions.\\n### Remittances\\nOffer fast and affordable remittance solutions to your customers.\\n##  Secure by design, across all stacks. \\nAdd fiat gateways to your apps with minimal code. Our SDKs support multiple languages and frameworks, backed by a developer-friendly REST API with public OpenAPI documentation. \\nKYC/B\\nBank Accounts\\nCrypto to Fiat\\nBlockchain Wallets\\nFiat to Crypto\\n```\\nimport { BlindPay } from \\'blindpay\\';\\nconst blindpay = new BlindPay(\\'<api_key>\\');\\n(async function() {\\n // Light KYC\\n await blindpay.customers.create(\\'<instance_id>\\', {\\n   type: \"individual\",\\n   kyc_type: \"light\",\\n   email: \"email@example.com\",\\n   tax_id: \"12345678\",\\n   country: \"US\",\\n   first_name: \"John\",\\n   last_name: \"Doe\",\\n   date_of_birth: \"1998-01-01T00:00:00Z\",\\n });\\n // Standard KYC\\n await blindpay.customers.create(\\'<instance_id>\\', {\\n   type: \"individual\",\\n   kyc_type: \"standard\",\\n   email: \"email@example.com\",\\n   tax_id: \"12345678\",\\n   address_line_1: \"8 The Green\",\\n   address_line_2: \"#12345\",\\n   city: \"Dover\",\\n   state_province_region: \"DE\",\\n   country: \"US\",\\n   postal_code: \"02050\",\\n   ip_address: \"127.0.0.1\",\\n   phone_number: \"+1234567890\",\\n   proof_of_address_doc_type: \"UTILITY_BILL\",\\n   proof_of_address_doc_file: \"https://pub-4fabf5dd55154f19a0384b16f2b816d9.r2.dev/v4-460px-Get-Proof-of-Address-Step-3-Version-2.jpg.jpeg\",\\n   first_name: \"John\",\\n   last_name: \"Doe\",\\n   date_of_birth: \"1998-01-01T00:00:00Z\",\\n   id_doc_country: \"US\",\\n   id_doc_type: \"PASSPORT\",\\n   id_doc_front_file: \"https://pub-4fabf5dd55154f19a0384b16f2b816d9.r2.dev/1000_F_365165797_VwQbNaD4yjWwQ6y1ENKh1xS0TXauOQvj.jpg\"\\n });\\n // Standard KYB\\n await blindpay.customers.create(\\'<instance_id>\\', {\\n  type: \\'business\\',\\n  kyc_type: \\'standard\\',\\n  email: \\'bernardo@blindpay.com\\',\\n  tax_id: \\'1234567\\',\\n  address_line_1: \\'8 The Green\\',\\n  address_line_2: \\'#19364\\',\\n  city: \\'Dover\\',\\n  state_province_region: \\'DE\\',\\n  country: \\'US\\',\\n  postal_code: \\'19901\\',\\n  proof_of_address_doc_type: \\'UTILITY_BILL\\',\\n  proof_of_address_doc_file: \\'https://onb-bucket.blindpay.io/1739822718778-logo.jpg\\',\\n  legal_name: \\'Blind Pay, Inc.\\',\\n  alternate_name: \\'BlindPay\\',\\n  formation_date: \\'2024-05-02T00:00:00.000Z\\',\\n  website: \\'https://blindpay.com\\',\\n  owners: [\\n   {\\n     role: \\'beneficial_controlling\\',\\n     first_name: \\'Bernardo\\',\\n     last_name: \\'Simonassi Moura\\',\\n     date_of_birth: \\'1990-11-28T00:00:00.000Z\\',\\n     tax_id: \\'14947677768\\',\\n     address_line_1: \\'137 The Green\\',\\n     address_line_2: \\'Apt 902\\',\\n     city: \\'Dover\\',\\n     state_province_region: \\'DE\\',\\n     country: \\'US\\',\\n     postal_code: \\'94101\\',\\n     id_doc_country: \\'US\\',\\n     id_doc_type: \\'PASSPORT\\',\\n     id_doc_front_file: \\'https://onb-bucket.blindpay.io/1739822686976-logo.jpg\\',\\n     id_doc_back_file: \\'https://onb-bucket.blindpay.io/1739822697594-logo.jpg\\',\\n     proof_of_address_doc_type: \\'UTILITY_BILL\\',\\n     proof_of_address_doc_file: \\'https://onb-bucket.blindpay.io/1739822701998-logo.jpg\\',\\n   },\\n  ],\\n  incorporation_doc_file: \\'https://onb-bucket.blindpay.io/1739822713152-logo.jpg\\',\\n  proof_of_ownership_doc_file: \\'https://onb-bucket.blindpay.io/1739822716647-logo.jpg\\',\\n  })\\n})\\n\\n```\\n\\n```\\nimport { BlindPay } from \\'blindpay\\';\\nconst blindpay = new BlindPay(\\'<api_key>\\');\\n(async function() {\\n // ACH\\n await blindpay.bankAccounts.add(\\'<instance_id>\\', \\'<customer_id>\\', {\\n  type: \"ach\",\\n  name: \"Display Name\",\\n  beneficiary_name: \"<Replace this>\",\\n  routing_number: \"<Replace this>\",\\n  account_number: \"<Replace this>\",\\n  account_type: \"checking\",\\n  account_class: \"individual\"\\n });\\n // Domestic Wire\\n await blindpay.bankAccounts.add(\\'<instance_id>\\', \\'<customer_id>\\', {\\n  type: \"wire\",\\n  name: \"Display Name\",\\n  beneficiary_name: \"<Replace this>\",\\n  routing_number: \"<Replace this>\",\\n  account_number: \"<Replace this>\",\\n  address_line_1: \"8 The Green\",\\n  address_line_2: \"#12345\",\\n  city: \"Dover\",\\n  state_province_region: \"DE\",\\n  country: \"US\",\\n  postal_code: \"02050\"\\n });\\n // PIX (Brazil)\\n await blindpay.bankAccounts.add(\\'<instance_id>\\', \\'<customer_id>\\', {\\n  type: \"pix\",\\n  name: \"Display Name\",\\n  pix_key: \"<Replace this>\",\\n });\\n // SPEI (Mexico)\\n await blindpay.bankAccounts.add(\\'<instance_id>\\', \\'<customer_id>\\', {\\n  type: \"spei_bitso\",\\n  name: \"MXN Account\",\\n  spei_protocol: \"debitcard\",\\n  spei_clabe: \"5482347403740546\",\\n  spei_institution_code: \"40002\",\\n  beneficiary_name: \"Juan Pérez\"\\n });\\n // ACH COP (Colombia)\\n await blindpay.bankAccounts.add(\\'<instance_id>\\', \\'<customer_id>\\', {\\n  type: \"ach_cop_bitso\",\\n  name: \"COP Account\",\\n  ach_cop_beneficiary_first_name: \"Fernando\",\\n  ach_cop_beneficiary_last_name: \"Guzman Alarcón\",\\n  ach_cop_document_id: \"1661105408\",\\n  ach_cop_document_type: \"CC\",\\n  ach_cop_email: \"fernando.guzman@gmail.com\",\\n  ach_cop_bank_code: \"051\",\\n  ach_cop_bank_account: \"12345671\",\\n  account_type: \"saving\"\\n });\\n // Transfers 3.0 (Argentina)\\n await blindpay.bankAccounts.add(\\'<instance_id>\\', \\'<customer_id>\\', {\\n  type: \"transfers_bitso\",\\n  name: \"ARS Account\",\\n  transfers_type: \"ALIAS\",\\n  transfers_account: \"BM123123123123\",\\n  beneficiary_name: \"Bryan Montes\"\\n });\\n})\\n\\n```\\n\\n```\\nimport { BlindPay } from \\'blindpay\\';\\nconst blindpay = new BlindPay(\\'<api_key>\\');\\n(async function() {\\n // Request a quote\\n const { id } = await blindpay.payouts.getQuote(\\'<instance_id>\\', \\'<bank_account_id>\\', {\\n  currency_type: \"sender\",\\n  cover_fees: true,\\n  request_amount: 1000,\\n  network: \"base\",\\n  token: \"USDC\"\\n });\\n // Execute payout\\n await blindpay.payouts.executeEvm(\\'<instance_id>\\', \\'<quote_id>\\', {\\n  sender_wallet_address: \\'0x...\\'\\n });\\n})\\n\\n```\\n\\n```\\nimport { BlindPay } from \\'blindpay\\';\\nimport { http, createConfig, wagmiConfig } from \\'wagmi\\'\\nimport { base, arbitrum, polygon } from \\'wagmi/chains\\'\\nexport const config = createConfig({\\n chains: [base, arbitrum, polygon],\\n transports: {\\n  [base.id]: http(),\\n  [arbitrum.id]: http(),\\n  [polygon.id]: http(),\\n },\\n})\\nconst blindpay = new BlindPay(\\'<api_key>\\');\\n(async function() {\\n // Request message to sign\\n const { message } = await blindpay.blockchainWallets.getMessage();\\n // Sign message on chain\\n const signature_tx_hash = await signMessage(wagmiConfig, {\\n  message,\\n })\\n await blindpay.blockchainWallets.add(\\'<instance_id>\\', \\'<customer_id>\\', {\\n  name: \"Display Name\",\\n  network: \"base\",\\n  token: \"USDC\",\\n  signature_tx_hash,\\n });\\n})\\n\\n```\\n\\n```\\nimport { BlindPay } from \\'blindpay\\';\\nconst blindpay = new BlindPay(\\'<api_key>\\');\\n(async function() {\\n // Request a quote\\n const { id } = await blindpay.payins.getQuote(\\'<instance_id>\\', \\'<blockchain_wallet_id>\\', {\\n  currency_type: \"sender\",\\n  cover_fees: true,\\n  request_amount: 1000,\\n  network: \"base\",\\n  token: \"USDC\"\\n });\\n // Execute payin\\n await blindpay.payins.getTransferDetails(\\'<instance_id>\\', \\'<quote_id>\\');\\n})\\n\\n```\\n\\n##  One API. Multiple payment rails. \\nGet a Demo⟨7⟩Go to Docs⟨3⟩\\nBlindPay, Inc. is a financial technology company and is a registered Money Services Business with the US Treasury\\'s Financial Crimes Enforcement Network, also known as FinCEN. We are not a bank. By creating and using your account at BlindPay, you agree to BlindPay, Inc.\\'s Terms of Service, to all applicable laws and regulations, and agree that you are responsible for compliance with any and all applicable local laws. \\n[](https://blindpay.com/<https:/twitter.com/blindpaylabs>)[](https://blindpay.com/<https:/www.linkedin.com/company/blindpay>)[](https://blindpay.com/<https:/github.com/blindpaylabs>)[](https://blindpay.com/<https:/discord.gg/2DFKYaxjpp>)\\nAll systems operational⟨9⟩\\n####  Company \\nSupport⟨10⟩Privacy Policy⟨11⟩Terms of Service⟨12⟩\\n####  Developers \\nAPI Documentation⟨3⟩API Reference⟨13⟩\\n' references_markdown='\\n\\n## References\\n\\n⟨1⟩ https://blindpay.com/</#benefits>: Benefits\\n⟨2⟩ https://blindpay.com/</#solutions>: Solutions\\n⟨3⟩ https://blindpay.com/</docs/getting-started/overview>: Docs\\n⟨4⟩ https://blindpay.com/<https:/app.blindpay.com/>: Open App\\n⟨5⟩ https://blindpay.com/<https:/www.ycombinator.com/launches/MeM-blindpay-stablecoin-api-for-global-payments>: Backed byCombinator (W25)\\n⟨6⟩ https://blindpay.com/<https:/app.blindpay.com/sign-up>: Get Started\\n⟨7⟩ https://blindpay.com/<https:/cal.com/bernardo-simonassi-nbxjop/demo-call>: Get a Demo\\n⟨8⟩ https://blindpay.com/home/blindpay-dashboard.jpg: BlindPay App & Dashboard\\n⟨9⟩ https://blindpay.com/<https:/blindpay.openstatus.dev/>: All systems operational\\n⟨10⟩ https://blindpay.com/<https:/discord.gg/2DFKYaxjpp>: Support\\n⟨11⟩ https://blindpay.com/</privacy-policy>: Privacy Policy\\n⟨12⟩ https://blindpay.com/</terms-of-service>: Terms of Service\\n⟨13⟩ https://blindpay.com/<https:/api.blindpay.com/reference>: API Reference\\n' fit_markdown='' fit_html=''",
  "generated_description": "**BlindPay: Simplifying Global Transactions with Stablecoin**\n\nFounded in 2024 and part of Y Combinator's W25 batch, BlindPay is on a mission to revolutionize global payments through its stablecoin API. In a world where financial transactions can feel complicated and bogged down by red tape, BlindPay handles all the regulatory and compliance headaches. This lets businesses focus on what they do best—growing their operations.\n\n### What They Do\nBlindPay provides a seamless way for companies to send and receive money globally using a mix of fiat currencies and stablecoins, all while utilizing different blockchains. Their solution enables instant settlements and significantly reduces transaction times—up to 80% faster than traditional frameworks.\n\n### Why It Matters\nThe ability to integrate stablecoins into existing payment flows offers companies a modern edge. Instant on- and off-ramps are possible, connecting any blockchain wallet with real-time quotes and low fees. This isn’t just tech talk; it holds practical implications for everything from global payroll to merchant settlements.\n\n### Key Features\n- **Easy Integration**: Developers can jump in with a user-friendly API that supports various languages and frameworks.\n- **24/7 Operations**: Businesses can process payments anytime, anywhere.\n- **Compliance and Security**: BlindPay takes care of all KYC and compliance aspects, allowing you to focus on growth.\n  \n### Their Market\nBlindPay is clearly positioned at the intersection of fintech, crypto-web3, and payment systems. They cater to enterprises needing to streamline invoicing, manage global payouts, and offer affordable remittance solutions.\n\n### The Team\nLocated in Dover, Delaware, BlindPay operates with a small yet fierce team of four. Their Group Partner, Harj Taggar, brings valuable insights from their time at Y Combinator, ensuring that the company leverages the best practices in the startup ecosystem.\n\n### Get Involved\nIf you're a developer or a business looking for a robust payment solution, BlindPay makes it easy to get started through demos and comprehensive documentation available on their [website](https://blindpay.com).\n\nIn a nutshell, BlindPay demonstrates how fintech can evolve by harnessing the power of stablecoins, making global transactions accessible, efficient, and compliant. They're not just creating a product; they're paving the way for the next generation of financial services."
}