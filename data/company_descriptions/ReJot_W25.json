{
  "links": "https://www.ycombinator.com/companies/rejot",
  "name": "ReJot",
  "headline": "Sync engine to enable reactive backends for cross-team integrations",
  "batch": "W25",
  "description": "At ReJot, we're building a synchronization engine to modernize sharing data between backend services within larger organizations. Traditional approaches for internal data transfer such as HTTP requests and event streaming require significant effort to implement and maintain. The biggest hurdle however, is the coordination required to get teams to start the actual integration work.\r\n\nOur approach is based on synchronization, teams define what data their backend publishes and requires, and we'll make sure everything is reactively up-to-date. By being declarative about integrations, project management overhead as well as technical integration burdens are avoided. ReJot uses your existing infrastructure such as Postgres and Kafka.",
  "activity_status": "Active",
  "website": "https://rejot.dev",
  "founded_date": 2024.0,
  "team_size": 2.0,
  "location": "Amsterdam, Netherlands",
  "group_partner": "Harj Taggar",
  "group_partner_yc": "https://www.ycombinator.com/people/harj-taggar",
  "company_linkedin": null,
  "company_twitter": null,
  "tags": "industry:developer-tools; industry:enterprise-software; industry:infrastructure; industry:databases",
  "founders": [
    {
      "name": "Wilco Kruijer, Founder",
      "description": "CEO & Co-founder at ReJot, previously worked on a distributed financial platform at Adyen. Interested in the relation between distributed data and software maintainability.",
      "linkedin": "https://linkedin.com/in/wilcokruijer/"
    },
    {
      "name": "Jan Schutte, CTO /  Co-Founder",
      "description": "CTO & Co-founder at ReJot, former Data Platform Engineer at Adyen, interested in distributed systems and database technologies.",
      "linkedin": "https://www.linkedin.com/in/jan-schutte-183145135/"
    }
  ],
  "status": true,
  "markdown": "raw_markdown=\"[ ](https://rejot.dev/</>)\\n[ ](https://rejot.dev/</>)\\n[ Blog ](https://rejot.dev/</blog>) [ About ](https://rejot.dev/</about>) [ Contact ](https://rejot.dev/</contact>)\\n#  Integration through Synchronization \\nSynchronization engine to enable reactive backends for cross-team integrations \\n[ Contact Us ](https://rejot.dev/</contact/>) [ About Us ](https://rejot.dev/</about/>)\\n![YCombinator logo](https://rejot.dev/yc-y.svg) Backed by Y Combinator\\n##  Define \\nTeams own their data like they own their code. Data owners define a contract, add transformations, and apply access control rules. Ownership leads to autonomy and speed. \\n##  Integrate \\nIntegrators find data in the catalog. They create derived data from it to enhance their products. Deep integration creates a cohesive platform. \\n##  Synchronize \\nReJot's synchronization engine moves data between teams as soon as it's created. Manual data fetching and integration tasks are a thing of the past. \\n## Use Cases\\nExamples of how _integration through synchronization_ can help you. \\nDeep Product Integration  Local-First Software Backend-For-Frontend Data Migrations\\n## Deep Product Integration\\nAt enterprise scale, data is often siloed leading to poor integration between products. ReJot lets teams expose the operational data created by their product in a data catalog. Other teams are able to enhance their products with that data. Deep data integration leads to a more cohesive user experience for the products in your platform. \\n## Local-First Software\\nBuild responsive frontends that work offline. ReJot can synchronize data from your catalog directly (or with transformations) to frontend applications. This enables super fast interactions and live collaboration between users. \\n## Backend-For-Frontend\\nConsolidate data from multiple services into a single service that can be consumed by your frontend. Simplifying the data retrieval and transformation processes. \\n## Data Migrations\\nSeamlessly migrate your data between different database systems or schemas while maintaining data integrity and avoiding downtime. Use ReJot to model new data schemas and migrate to them while ensuring: \\n  * Zero Downtime\\n  * Data Integrity\\n  * Rollback Safety\\n\\n\\n# Benefits\\nYour organization will benefit from ReJot in these ways. \\n##  Operate as One Platform \\nDeeply integrate all aspects of your product catalog to create one cohesive platform. \\n##  Fearless Product Evolution \\nEmpower teams to change their product and implementation without worrying about dependent business units. \\n##  Boost Developer Productivity \\nSpeed up development cycles by cutting down on repetitive integration tasks. Define your data contracts, and we'll make sure there are no breaches. \\n## Say goodbye to...\\n#  Project Management Overhead \\nLet your product managers focus on talking to users instead of talking to other teams. \\n#  Data Silos \\nData is most useful when it’s available to everyone. Publish data seamlessly without compromising on control & autonomy. \\n#  Reverse ETL \\nCombine data directly in the operational layer using the catalog of contracts. Stop abusing your data warehouse. \\n## How we integrate\\n### Bring-your-own-infrastructure\\nWe integrate with the databases you already use and communicate using the infrastructure that is already present. We don’t force you to integrate with yet another data store, instead we extract the most out of what you already have. \\n### Your data, your network\\nReJot operates using either a hybrid or self-hosted deployment model. Critical data never has to leave your infrastructure. \\n## An Essay on the Burdens of Data\\nData is valuable to organisations, but also a burden to software engineers. This essay is core to the philosophy of ReJot, it explores how to unburden software engineers while extracting value from data. \\n[ Read the essay ](https://rejot.dev/</blog/essay>)\\n# Get in touch\\nLet us know how we can help you!\\n[ Contact Us ](https://rejot.dev/</contact/>)\\n- or -\\n# Get notified\\nReceive email updates from ReJot\\nSign Up \\nReJot, Inc. 1111B S Governors Ave STE 25611 Dover, DE 19904 \\n[Blog](https://rejot.dev/</blog>) [About](https://rejot.dev/</about>) [Contact](https://rejot.dev/</contact>) [Privacy Policy](https://rejot.dev/</privacy-policy>)\\n© 2025 ReJot, inc. \\n[ ](https://rejot.dev/<https:/x.com/ReJotSync>) [ ](https://rejot.dev/<https:/bsky.app/profile/ReJot.dev>) [ ](https://rejot.dev/<https:/www.linkedin.com/company/rejot>)\\n\" markdown_with_citations=\" ⟨1⟩\\n ⟨1⟩\\n Blog ⟨2⟩  About ⟨3⟩  Contact ⟨4⟩\\n#  Integration through Synchronization \\nSynchronization engine to enable reactive backends for cross-team integrations \\n Contact Us ⟨5⟩  About Us ⟨6⟩\\n![YCombinator logo⟨7⟩] Backed by Y Combinator\\n##  Define \\nTeams own their data like they own their code. Data owners define a contract, add transformations, and apply access control rules. Ownership leads to autonomy and speed. \\n##  Integrate \\nIntegrators find data in the catalog. They create derived data from it to enhance their products. Deep integration creates a cohesive platform. \\n##  Synchronize \\nReJot's synchronization engine moves data between teams as soon as it's created. Manual data fetching and integration tasks are a thing of the past. \\n## Use Cases\\nExamples of how _integration through synchronization_ can help you. \\nDeep Product Integration  Local-First Software Backend-For-Frontend Data Migrations\\n## Deep Product Integration\\nAt enterprise scale, data is often siloed leading to poor integration between products. ReJot lets teams expose the operational data created by their product in a data catalog. Other teams are able to enhance their products with that data. Deep data integration leads to a more cohesive user experience for the products in your platform. \\n## Local-First Software\\nBuild responsive frontends that work offline. ReJot can synchronize data from your catalog directly (or with transformations) to frontend applications. This enables super fast interactions and live collaboration between users. \\n## Backend-For-Frontend\\nConsolidate data from multiple services into a single service that can be consumed by your frontend. Simplifying the data retrieval and transformation processes. \\n## Data Migrations\\nSeamlessly migrate your data between different database systems or schemas while maintaining data integrity and avoiding downtime. Use ReJot to model new data schemas and migrate to them while ensuring: \\n  * Zero Downtime\\n  * Data Integrity\\n  * Rollback Safety\\n\\n\\n# Benefits\\nYour organization will benefit from ReJot in these ways. \\n##  Operate as One Platform \\nDeeply integrate all aspects of your product catalog to create one cohesive platform. \\n##  Fearless Product Evolution \\nEmpower teams to change their product and implementation without worrying about dependent business units. \\n##  Boost Developer Productivity \\nSpeed up development cycles by cutting down on repetitive integration tasks. Define your data contracts, and we'll make sure there are no breaches. \\n## Say goodbye to...\\n#  Project Management Overhead \\nLet your product managers focus on talking to users instead of talking to other teams. \\n#  Data Silos \\nData is most useful when it’s available to everyone. Publish data seamlessly without compromising on control & autonomy. \\n#  Reverse ETL \\nCombine data directly in the operational layer using the catalog of contracts. Stop abusing your data warehouse. \\n## How we integrate\\n### Bring-your-own-infrastructure\\nWe integrate with the databases you already use and communicate using the infrastructure that is already present. We don’t force you to integrate with yet another data store, instead we extract the most out of what you already have. \\n### Your data, your network\\nReJot operates using either a hybrid or self-hosted deployment model. Critical data never has to leave your infrastructure. \\n## An Essay on the Burdens of Data\\nData is valuable to organisations, but also a burden to software engineers. This essay is core to the philosophy of ReJot, it explores how to unburden software engineers while extracting value from data. \\n Read the essay ⟨8⟩\\n# Get in touch\\nLet us know how we can help you!\\n Contact Us ⟨5⟩\\n- or -\\n# Get notified\\nReceive email updates from ReJot\\nSign Up \\nReJot, Inc. 1111B S Governors Ave STE 25611 Dover, DE 19904 \\nBlog⟨2⟩ About⟨3⟩ Contact⟨4⟩ Privacy Policy⟨9⟩\\n© 2025 ReJot, inc. \\n ⟨10⟩  ⟨11⟩  ⟨12⟩\\n\" references_markdown='\\n\\n## References\\n\\n⟨1⟩ https://rejot.dev/</>:  \\n⟨2⟩ https://rejot.dev/</blog>:  Blog \\n⟨3⟩ https://rejot.dev/</about>:  About \\n⟨4⟩ https://rejot.dev/</contact>:  Contact \\n⟨5⟩ https://rejot.dev/</contact/>:  Contact Us \\n⟨6⟩ https://rejot.dev/</about/>:  About Us \\n⟨7⟩ https://rejot.dev/yc-y.svg: YCombinator logo\\n⟨8⟩ https://rejot.dev/</blog/essay>:  Read the essay \\n⟨9⟩ https://rejot.dev/</privacy-policy>: Privacy Policy\\n⟨10⟩ https://rejot.dev/<https:/x.com/ReJotSync>:  \\n⟨11⟩ https://rejot.dev/<https:/bsky.app/profile/ReJot.dev>:  \\n⟨12⟩ https://rejot.dev/<https:/www.linkedin.com/company/rejot>:  \\n' fit_markdown='' fit_html=''",
  "generated_description": "## ReJot Summary\n\n**Company Overview:**  \nReJot is a startup founded in 2024, located in Amsterdam, Netherlands, and is part of Y Combinator’s Batch W25. The company consists of a lean team of 2 employees. Harj Taggar serves as their group partner.\n\n**Mission:**  \nReJot aims to create a synchronization engine that enhances cross-team integrations by modernizing the way backend services share data within larger organizations. The company acknowledges the traditional challenges of data transfer, such as the extensive efforts needed for implementation and the coordination among teams that often stalls integration work.\n\n**Core Approach:**  \nReJot promotes a declarative model to data integration, where teams can define what data they need to publish and consume. The synchronization engine ensures that all relevant data stays up-to-date without manual intervention. By leveraging existing infrastructure—like Postgres and Kafka—ReJot minimizes setup overhead and focuses on simplifying the integration process.\n\n**Key Features:**\n1. **Define:** Teams maintain ownership of their data, establishing contracts, transformations, and access controls to foster autonomy.\n2. **Integrate:** Data integrators can access a catalog of data, enabling them to create derived datasets and reinforce product functionality.\n3. **Synchronize:** ReJot's engine automates data movement between teams immediately upon creation, eliminating manual integration tasks.\n\n**Use Cases:**\n- **Deep Product Integration:** Break down data silos at scale, allowing teams to enhance their products via shared operational data.\n- **Local-First Software:** Create responsive, offline-capable frontends with synchronized data for real-time collaboration.\n- **Backend-For-Frontend:** Streamline data retrieval by consolidating multiple data sources into a single service.\n- **Data Migrations:** Facilitate seamless migrations with zero downtime, maintaining data integrity throughout the process.\n\n**Benefits:**\n- **One Cohesive Platform:** Forge a unified experience by integrating various product components.\n- **Agile Product Development:** Allow teams to evolve their products without disrupting dependent systems.\n- **Increased Developer Productivity:** Minimize repetitive tasks, promoting faster development cycles.\n- **Reduction in Overhead:** Let product managers focus on user engagement rather than coordination.\n\n**Integration Strategy:**\n- **Bring Your Own Infrastructure:** By integrating directly with existing systems, ReJot ensures that critical data remains within the user's network.\n- **Deployment Models:** Offers hybrid or self-hosted setups, allowing flexibility based on organizational needs.\n\n**Philosophy:**  \nReJot believes that while data is valuable, it can also burden software engineers. Their approach is rooted in alleviating this burden while maximizing data utility.\n\n**Learn More:** Explore their [website](https://rejot.dev) for additional information including a blog, contact options, and further insights into their philosophy.\n\n--- \n\nIn a world where data silos hinder progress, ReJot is transforming how teams collaborate over data. By positioning themselves as a bridge between existing infrastructures and team autonomy, they’re making it easier than ever for organizations to operate fluidly and reactively. If you’re drowning in project management overhead or struggling with data integration, taking a closer look at ReJot could be a game-changer."
}