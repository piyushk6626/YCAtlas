{
  "links": "https://www.ycombinator.com/companies/instant",
  "name": "Instant",
  "headline": "The Modern Firebase",
  "batch": "S22",
  "description": "Instant is the modern Firebase. We make it easy to build realtime and collaborative applications like Notion or Figma.",
  "activity_status": "Active",
  "website": "https://instantdb.com",
  "founded_date": 2022.0,
  "team_size": 3.0,
  "location": "San Francisco",
  "group_partner": "Jared Friedman",
  "group_partner_yc": "https://www.ycombinator.com/people/jared-friedman",
  "company_linkedin": null,
  "company_twitter": null,
  "tags": "location:san-francisco-bay-area",
  "founders": [
    {
      "name": "Joe Averbukh, Founder",
      "description": "I truly believe each one of us has the ability to create the world they want to see. I love working with optimistic and principle-oriented people.\n\nSince 2020 I’ve been building with my best friend. We followed two rules initially 1) Build something we want for ourselves and 2) Make something more ambitious than previously. Since 2021 we added a third rule, 3) Make it a business. To that end we launched Jobsearch.dev, ExportHealth, Zeneca, Consistent, and now work on Instant, the modern Firebase",
      "linkedin": "http://www.linkedin.com/in/joeaverbukh"
    },
    {
      "name": "Stepan Parunashvili, Founder",
      "description": "I work with people I will be friends with for a lifetime. I love hacking. I started off my career building a startup in China, and soon joined Wit.ai to work on an API for natural language processing. We used a suite of interesting tools, like Clojure, which heavily influenced my software design philosophy. We were acquired by Facebook. After 4 years, I had a stint at Airbnb, and decided to start Instant with my best friend. I also love to write; you can read some essays on my blog: stopa.io",
      "linkedin": "https://www.linkedin.com/in/stepan-parunashvili-65698932/"
    }
  ],
  "status": true,
  "markdown": "raw_markdown='[![](https://instantdb.com/img/icon/logo-512.svg)instant](https://instantdb.com/</>)\\n[![](https://instantdb.com/img/icon/logo-512.svg)instant](https://instantdb.com/</>)\\n[Pricing](https://instantdb.com/</pricing>)[Examples](https://instantdb.com/</examples>)[Essays](https://instantdb.com/</essays>)[Docs](https://instantdb.com/</docs>)[![](https://instantdb.com/marketing/discord-icon.svg)Discord](https://instantdb.com/<https:/discord.com/invite/VU53p7uQcE>)[![](https://instantdb.com/marketing/github-icon.svg)GitHub](https://instantdb.com/<https:/github.com/instantdb/instant>)[Login](https://instantdb.com/</dash>)\\n[Sign up](https://instantdb.com/</dash>)\\n## Build live apps today\\nInstant is a modern Firebase. We make you productive by giving your frontend a real-time database.\\n[Get Started](https://instantdb.com/</dash>)[Try the demo](https://instantdb.com/</tutorial>)\\n![](https://instantdb.com/img/yc_logo.png)Backed by Y Combinator\\n0123456789\\n0123456789\\n0123456789\\n0123456789\\nsessions are connected on Instant right now\\n[See some examples ](https://instantdb.com/</examples>)\\n### You write your frontend, and we handle the rest\\nThe best apps today have a common feature set. Every interaction happens instantly, you rarely see loading screens, collaboration is easy and delightful, and the app still works when offline.\\nBut building them is a schlep: spin up servers, auth, permissions, endpoints, sockets, then shuffle data, handle optimistic updates, and deal with rollbacks.\\n**Instant solves these problems for you by giving you a database you can subscribe to directly in the browser.** You write relational queries in your app, and we handle the rest.\\nWant to try it yourself? [Build a live app in less than 5 minutes.](https://instantdb.com/<https:/instantdb.com/docs>)\\n```\\nimport{ init, tx, id }from\"@instantdb/react\";\\nconst db =init({\\nappId: process.env.NEXT_PUBLIC_APP_ID,\\n});\\nfunctionChat(){\\n// 1. Read\\nconst{ isLoading, error, data }= db.useQuery({\\nmessages:{},\\n});\\n// 2. Write\\nconstaddMessage=(message)=>{\\n  db.transact(tx.messages[id()].update(message));\\n};\\n// 3. Render!\\nreturn<UI data={data} onAdd={addMessage}/>;\\n}\\n\\n```\\n\\n\"I wanted to build relational capabilities into Firebase (but it would have required us to build another database and we never got around to it). I\\'m glad to see Instant is doing it.\"\\n![James Tamplin](https://instantdb.com/img/peeps/james.png)\\nJames Tamplin\\nCo-Founder, Firebase\\n\"Most generic database query tools like react-query etc. are cached at the browser tab level. So if you rename a file, the tab bar can easily become out of sync unless you have a great local first sync provider... and I got it working easily with Instant.\"\\n![AJ Nandi](https://instantdb.com/img/peeps/aj_nandi.jpeg)\\nAJ Nandi\\nCo-Founder, Subset.so\\n\"Instant takes care of complex data ops so you can focus on building your product. I wouldn\\'t want to use any other db right now.\"\\n![Ignacio De Haedo](https://instantdb.com/img/peeps/nacho.jpg)\\nIgnacio De Haedo\\nEngineer, Meta\\n\"Deeply nested, GraphQL-like queries that update in realtime are a dream come true.\"\\n![Hunter Tinney](https://instantdb.com/img/peeps/hunter.jpeg)\\nHunter Tinney\\nCTO, Palette\\n\"I built a cross-platform app across mobile and React Native. I copy-pasted my data logic, and it all just worked!\"\\n![Alex Reichert](https://instantdb.com/img/peeps/alex.png)\\nAlex Reichert\\nEngineer, Stripe\\n\"I built an “email inbox” simulation with user auth/login, permissions, multiple folders (inbox /_ sent), and live updates (including sending across user accounts) in ~50 minutes or so. Very impressive stuff, and a lot of fun!\"\\n![Sean Grove](https://instantdb.com/img/peeps/sean.png)\\nSean Grove\\nEngineer, OpenAI\\n### A new kind of client-side infrastructure\\nInstant was born when we realized that some of the hardest UI problems are actually database problems in disguise. When you solve problems at the database layer, your software becomes more powerful and succinct. Here’s how:\\n#### Instant Updates\\nWhen apps are at their best, every change a user make should reflect instantly. There should be few spinners, loading states, or refresh buttons.\\nTo do this today, you write custom code for endpoints, logic to apply optimistic updates, and to handle rollbacks.\\nDatabases already know how to apply changes and handle rollbacks. With Instant, you write ``transact``, and optimistic updates are handled for you.\\nInstantNot Instant\\n```\\nasyncfunctiondeleteTodo(id){\\n// teams and todos are _immediately_\\n// updated. If there\\'s an error,\\n// instant rolls back for you\\ntransact(tx.todos[id].delete());\\n}\\n\\n```\\n\\n#### Multiplayer\\nUsers seek collaborative experiences and sync across devices. To get this right, you need to set up sockets, cache and invalidate queries, and set up permission filters.\\nInstant takes inspiration from systems like Figma’s LiveGraph and Linear’s sync. We built the infrastructure that listens to transactions, and updates relevant queries.\\n[See the code ](https://instantdb.com/</examples#5-reactions>)\\n#### Offline Mode\\nUsers want your app to work even when they\\'re offline. Not only does this make your app available everywhere, it makes your app feel faster. The first time your app loads, users see a loading screen. Every load afterwards gets satisfied by the local cache.\\nTo support this, you need a way to apply changes locally, persist to disk, and reconcile when users come back online. \\nInstant comes with this logic baked in: the local database knows what is committed to the server and what is pending. No need to deal with queues.\\nUse settingSync Off\\nPress meCheck-ins: 0\\nPress meCheck-ins: 0\\n### Cursors, Typing Indicators, and Presence at your fingertips\\nOnce your application becomes multiplayer, you see opportunities for new experiences everywhere: who’s online, who’s typing, and where are their cursors?\\nInstant supports these use cases — **you can add shared cursors in 10 lines.**\\n[See the code ](https://instantdb.com/</examples#4-custom-cursors>)\\n### Start without a backend, scale to complex use cases\\nWhen you use Instant, you can focus on what’s important: building a great UX for your users, and doing it quickly.\\nYou don’t need servers, separate auth providers, custom endpoints, front-end stores, or different APIs for mobile vs web. You get a real-time architecture that makes your frontend smooth.\\nWhen time comes for custom backend logic, you can spin up a server and use Instant’s admin SDK. Build your next SaaS app, React Native app, web app, or collaborative app on Instant. We’ll help you move fast, and scale alongside you.\\n### About the team\\nInstant is built by senior and staff engineers from Facebook and Airbnb. We spent multiple years thinking deeply about this problem and have built a product that we believe is the future of application development.\\nWe\\'re backed by YCombinator, SV Angel, and top investors like:\\nJames Tamplin\\nCEO of Firebase\\nPaul Graham\\nCo-Founder of YCombinator\\nKarri Saarinen\\nCEO of Linear\\nAmjad Masad\\nCEO of Replit\\nZach Sims\\nCEO of Codecademy\\nGreg Brockman\\nCo-Founder of OpenAI\\nJeff Dean\\nChief Scientist of Google DeepMind\\nAnd 50+ technical founders\\nSendbird, Panther, Segment and more\\nCheck out our essay below to learn more why we think Instant is solving one of the largest problems in frontend development today.\\n[Get Started](https://instantdb.com/</dash>)[Read Essay](https://instantdb.com/</essays/next_firebase>)\\nInstant\\nEngineered in San Francisco\\n[Examples](https://instantdb.com/</examples>)[Essays](https://instantdb.com/</essays>)[Docs](https://instantdb.com/</docs>)[Discord](https://instantdb.com/<https:/discord.com/invite/VU53p7uQcE>)[GitHub](https://instantdb.com/<https:/github.com/instantdb/instant>)[Privacy Policy](https://instantdb.com/</privacy>)[Terms](https://instantdb.com/</terms>)[Login](https://instantdb.com/</dash>)\\n[Signup](https://instantdb.com/</dash>)\\n' markdown_with_citations='![⟨1⟩instant](https://instantdb.com/</>)\\n![⟨1⟩instant](https://instantdb.com/</>)\\nPricing⟨2⟩Examples⟨3⟩Essays⟨4⟩Docs⟨5⟩![⟨6⟩Discord](https://instantdb.com/<https:/discord.com/invite/VU53p7uQcE>)![⟨7⟩GitHub](https://instantdb.com/<https:/github.com/instantdb/instant>)Login⟨8⟩\\nSign up⟨8⟩\\n## Build live apps today\\nInstant is a modern Firebase. We make you productive by giving your frontend a real-time database.\\nGet Started⟨8⟩Try the demo⟨9⟩\\n![](https://instantdb.com/img/yc_logo.png)Backed by Y Combinator\\n0123456789\\n0123456789\\n0123456789\\n0123456789\\nsessions are connected on Instant right now\\nSee some examples ⟨3⟩\\n### You write your frontend, and we handle the rest\\nThe best apps today have a common feature set. Every interaction happens instantly, you rarely see loading screens, collaboration is easy and delightful, and the app still works when offline.\\nBut building them is a schlep: spin up servers, auth, permissions, endpoints, sockets, then shuffle data, handle optimistic updates, and deal with rollbacks.\\n**Instant solves these problems for you by giving you a database you can subscribe to directly in the browser.** You write relational queries in your app, and we handle the rest.\\nWant to try it yourself? Build a live app in less than 5 minutes.⟨10⟩\\n```\\nimport{ init, tx, id }from\"@instantdb/react\";\\nconst db =init({\\nappId: process.env.NEXT_PUBLIC_APP_ID,\\n});\\nfunctionChat(){\\n// 1. Read\\nconst{ isLoading, error, data }= db.useQuery({\\nmessages:{},\\n});\\n// 2. Write\\nconstaddMessage=(message)=>{\\n  db.transact(tx.messages[id()].update(message));\\n};\\n// 3. Render!\\nreturn<UI data={data} onAdd={addMessage}/>;\\n}\\n\\n```\\n\\n\"I wanted to build relational capabilities into Firebase (but it would have required us to build another database and we never got around to it). I\\'m glad to see Instant is doing it.\"\\n![James Tamplin⟨11⟩]\\nJames Tamplin\\nCo-Founder, Firebase\\n\"Most generic database query tools like react-query etc. are cached at the browser tab level. So if you rename a file, the tab bar can easily become out of sync unless you have a great local first sync provider... and I got it working easily with Instant.\"\\n![AJ Nandi⟨12⟩]\\nAJ Nandi\\nCo-Founder, Subset.so\\n\"Instant takes care of complex data ops so you can focus on building your product. I wouldn\\'t want to use any other db right now.\"\\n![Ignacio De Haedo⟨13⟩]\\nIgnacio De Haedo\\nEngineer, Meta\\n\"Deeply nested, GraphQL-like queries that update in realtime are a dream come true.\"\\n![Hunter Tinney⟨14⟩]\\nHunter Tinney\\nCTO, Palette\\n\"I built a cross-platform app across mobile and React Native. I copy-pasted my data logic, and it all just worked!\"\\n![Alex Reichert⟨15⟩]\\nAlex Reichert\\nEngineer, Stripe\\n\"I built an “email inbox” simulation with user auth/login, permissions, multiple folders (inbox /_ sent), and live updates (including sending across user accounts) in ~50 minutes or so. Very impressive stuff, and a lot of fun!\"\\n![Sean Grove⟨16⟩]\\nSean Grove\\nEngineer, OpenAI\\n### A new kind of client-side infrastructure\\nInstant was born when we realized that some of the hardest UI problems are actually database problems in disguise. When you solve problems at the database layer, your software becomes more powerful and succinct. Here’s how:\\n#### Instant Updates\\nWhen apps are at their best, every change a user make should reflect instantly. There should be few spinners, loading states, or refresh buttons.\\nTo do this today, you write custom code for endpoints, logic to apply optimistic updates, and to handle rollbacks.\\nDatabases already know how to apply changes and handle rollbacks. With Instant, you write ``transact``, and optimistic updates are handled for you.\\nInstantNot Instant\\n```\\nasyncfunctiondeleteTodo(id){\\n// teams and todos are _immediately_\\n// updated. If there\\'s an error,\\n// instant rolls back for you\\ntransact(tx.todos[id].delete());\\n}\\n\\n```\\n\\n#### Multiplayer\\nUsers seek collaborative experiences and sync across devices. To get this right, you need to set up sockets, cache and invalidate queries, and set up permission filters.\\nInstant takes inspiration from systems like Figma’s LiveGraph and Linear’s sync. We built the infrastructure that listens to transactions, and updates relevant queries.\\nSee the code ⟨17⟩\\n#### Offline Mode\\nUsers want your app to work even when they\\'re offline. Not only does this make your app available everywhere, it makes your app feel faster. The first time your app loads, users see a loading screen. Every load afterwards gets satisfied by the local cache.\\nTo support this, you need a way to apply changes locally, persist to disk, and reconcile when users come back online. \\nInstant comes with this logic baked in: the local database knows what is committed to the server and what is pending. No need to deal with queues.\\nUse settingSync Off\\nPress meCheck-ins: 0\\nPress meCheck-ins: 0\\n### Cursors, Typing Indicators, and Presence at your fingertips\\nOnce your application becomes multiplayer, you see opportunities for new experiences everywhere: who’s online, who’s typing, and where are their cursors?\\nInstant supports these use cases — **you can add shared cursors in 10 lines.**\\nSee the code ⟨18⟩\\n### Start without a backend, scale to complex use cases\\nWhen you use Instant, you can focus on what’s important: building a great UX for your users, and doing it quickly.\\nYou don’t need servers, separate auth providers, custom endpoints, front-end stores, or different APIs for mobile vs web. You get a real-time architecture that makes your frontend smooth.\\nWhen time comes for custom backend logic, you can spin up a server and use Instant’s admin SDK. Build your next SaaS app, React Native app, web app, or collaborative app on Instant. We’ll help you move fast, and scale alongside you.\\n### About the team\\nInstant is built by senior and staff engineers from Facebook and Airbnb. We spent multiple years thinking deeply about this problem and have built a product that we believe is the future of application development.\\nWe\\'re backed by YCombinator, SV Angel, and top investors like:\\nJames Tamplin\\nCEO of Firebase\\nPaul Graham\\nCo-Founder of YCombinator\\nKarri Saarinen\\nCEO of Linear\\nAmjad Masad\\nCEO of Replit\\nZach Sims\\nCEO of Codecademy\\nGreg Brockman\\nCo-Founder of OpenAI\\nJeff Dean\\nChief Scientist of Google DeepMind\\nAnd 50+ technical founders\\nSendbird, Panther, Segment and more\\nCheck out our essay below to learn more why we think Instant is solving one of the largest problems in frontend development today.\\nGet Started⟨8⟩Read Essay⟨19⟩\\nInstant\\nEngineered in San Francisco\\nExamples⟨3⟩Essays⟨4⟩Docs⟨5⟩Discord⟨20⟩GitHub⟨21⟩Privacy Policy⟨22⟩Terms⟨23⟩Login⟨8⟩\\nSignup⟨8⟩\\n' references_markdown='\\n\\n## References\\n\\n⟨1⟩ https://instantdb.com/img/icon/logo-512.svg: ![\\n⟨2⟩ https://instantdb.com/</pricing>: Pricing\\n⟨3⟩ https://instantdb.com/</examples>: Examples\\n⟨4⟩ https://instantdb.com/</essays>: Essays\\n⟨5⟩ https://instantdb.com/</docs>: Docs\\n⟨6⟩ https://instantdb.com/marketing/discord-icon.svg: ![\\n⟨7⟩ https://instantdb.com/marketing/github-icon.svg: ![\\n⟨8⟩ https://instantdb.com/</dash>: Login\\n⟨9⟩ https://instantdb.com/</tutorial>: Try the demo\\n⟨10⟩ https://instantdb.com/<https:/instantdb.com/docs>: Build a live app in less than 5 minutes.\\n⟨11⟩ https://instantdb.com/img/peeps/james.png: James Tamplin\\n⟨12⟩ https://instantdb.com/img/peeps/aj_nandi.jpeg: AJ Nandi\\n⟨13⟩ https://instantdb.com/img/peeps/nacho.jpg: Ignacio De Haedo\\n⟨14⟩ https://instantdb.com/img/peeps/hunter.jpeg: Hunter Tinney\\n⟨15⟩ https://instantdb.com/img/peeps/alex.png: Alex Reichert\\n⟨16⟩ https://instantdb.com/img/peeps/sean.png: Sean Grove\\n⟨17⟩ https://instantdb.com/</examples#5-reactions>: See the code \\n⟨18⟩ https://instantdb.com/</examples#4-custom-cursors>: See the code \\n⟨19⟩ https://instantdb.com/</essays/next_firebase>: Read Essay\\n⟨20⟩ https://instantdb.com/<https:/discord.com/invite/VU53p7uQcE>: Discord\\n⟨21⟩ https://instantdb.com/<https:/github.com/instantdb/instant>: GitHub\\n⟨22⟩ https://instantdb.com/</privacy>: Privacy Policy\\n⟨23⟩ https://instantdb.com/</terms>: Terms\\n' fit_markdown='' fit_html=''",
  "generated_description": "### Instant: The Modern Firebase for Real-Time Applications\n\n**Mission:**\nInstant aims to revolutionize application development by becoming the “modern Firebase.” They simplify the creation of real-time, collaborative applications reminiscent of tools like Notion and Figma.\n\n**Overview:**\nFounded in 2022 and based in San Francisco, Instant is part of the Y Combinator Batch S22. The company boasts a lean team of three employees who are passionate about tackling the complexities of building user-centric applications. With Jared Friedman as a Group Partner, Instant is positioned strategically in the startup ecosystem.\n\n**What They Do:**\nInstant provides developers with a real-time database that handles data synchronization and management seamlessly. This means developers can focus on building robust frontends without worrying about backend complexities like server setup, authentication, and endpoint management. With Instant, you can write relational queries directly in your frontend code, and Instant handles everything else.\n\nInterested in starting quickly? You can build a live app in less than five minutes using their simple onboarding process.\n\n**Key Features:**\n1. **Instant Updates:** Changes made by users reflect in real-time without loading screens or delays. This is possible because Instant manages optimistic updates and rollbacks effortlessly.\n   \n2. **Multiplayer Support:** Built with collaborative experiences in mind, Instant synchronizes data across devices — ideal for applications that require real-time interaction among users.\n   \n3. **Offline Mode:** Instant apps remain functional offline, enhancing user experience by relying on local caches.\n\n4. **User Presence and Cursors:** Instant supports real-time interactions like typing indicators and shared cursors with minimal coding.\n\n**Team:**\nThe team behind Instant is composed of experienced engineers, many from top tech companies like Facebook and Airbnb. Their rich background allows them to deeply understand the challenges developers face when building modern applications.\n\n**Backed by Notable Investors:**\nInstant has garnered support from prominent investors and figures in tech, including James Tamplin (Co-Founder of Firebase) and Paul Graham (Co-Founder of Y Combinator), making it a company to watch in the startup landscape.\n\n**Conclusion:**\nIf you’re a developer looking to streamline the process of building collaborative applications, Instant positions itself as an invaluable tool. It empowers you to create seamless, real-time experiences while alleviating the burden of server-side complexities.\n\nFor more information, check out their website at [InstantDB](https://instantdb.com)."
}