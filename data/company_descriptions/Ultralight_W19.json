{
  "links": "https://www.ycombinator.com/companies/ultralight",
  "name": "Ultralight",
  "headline": "Universal, Pure-GPU HTML Renderer",
  "batch": "W19",
  "description": "Ultralight is a GPU-accelerated toolkit to embed modern HTML in games and native apps.\r\n\nAvailable for C and C++ on Windows, macOS, Linux, Xbox, PlayStation, ARM64 devices, and more.\r\n\nDeveloped in collaboration with leading game studios, built GPU-first on a new, lightweight fork of WebKit.",
  "activity_status": "Active",
  "website": "https://ultralig.ht",
  "founded_date": 2017.0,
  "team_size": 1.0,
  "location": "San Francisco",
  "group_partner": null,
  "group_partner_yc": null,
  "company_linkedin": null,
  "company_twitter": null,
  "tags": "industry:developer-tools; industry:hard-tech; industry:b2b; industry:gaming; industry:api; location:san-francisco-bay-area",
  "founders": [
    {
      "name": "Adam Simmons, Founder & CEO",
      "description": "Founder of Ultralight.\n\n15 years experience building dev tools for games and desktop apps. Graphics researcher. OSS advocate. C++, GPU, UI, WebKit expert.",
      "linkedin": "https://www.linkedin.com/in/adamjeansimmons/"
    }
  ],
  "status": true,
  "markdown": "raw_markdown=\"[ ![](https://ultralig.ht/media/ul_logo_wordmark_sm.png) ](https://ultralig.ht/</>)\\n[ ](https://ultralig.ht/<javascript:void\\\\(0\\\\);>)\\n  * [ ![](https://ultralig.ht/media/ul_logo_wordmark_sm.png) Home ](https://ultralig.ht/</>)\\n  * [ Develop ](https://ultralig.ht/<#company>)\\n    * [ Download SDK ](https://ultralig.ht/</download>)\\n    * [ Documentation ](https://ultralig.ht/<https:/docs.ultralig.ht/>)\\n    * [ API Reference ](https://ultralig.ht/</api/cpp/1_3_0/>)\\n  * [ Support ](https://ultralig.ht/<#company>)\\n    * [ Discord Chat ](https://ultralig.ht/<https:/chat.ultralig.ht>)\\n    * [ Issue Tracker ](https://ultralig.ht/<https:/github.com/ultralight-ux/ultralight/issues>)\\n    * [ Contact Us ](https://ultralig.ht/<https:/ultralight.typeform.com/contact-us>)\\n  * [Blog](https://ultralig.ht/</blog>)\\n  * [Pricing](https://ultralig.ht/</pricing>)\\n\\n\\n![](https://ultralig.ht/media/ul_logo.webp)\\n# Ultralight\\n## Universal, Pure-GPU HTML Renderer \\n[Download SDK ](https://ultralig.ht/</download>) [Read the Docs ](https://ultralig.ht/<https:/docs.ultralig.ht>)\\n## HTML + Games = \\nUltralight is a **GPU-accelerated toolkit** to embed **modern HTML** in **games** and **native apps**.\\nAvailable for **C** and **C++** on Windows, macOS, Linux, Xbox, PlayStation, ARM64 devices, and more.\\nDeveloped in collaboration with **leading game studios** , built GPU-first on a new, lightweight fork of WebKit.\\n![](https://ultralig.ht/media/html_pixel_graphic.webp)\\n## Ultra-Fast. \\nBuilt **GPU-first** but can run on the **CPU** too!\\nChoose from two powerful, parallel renderers:\\n  * **GPU** : Render directly on the GPU for maximum performance. Designed to integrate deeply with your existing rendering pipeline. \\n  * **CPU** : Render parallel on the CPU for incredibly easy integration in any environment.\\n\\n\\n![](https://ultralig.ht/media/renderer-diagram.webp)\\n## Ultra-Light. \\nDesigned for the tightest resource budgets— Ultralight's baseline memory usage is nearly 10x lighter than Chromium. \\nGo further by customizing low-level platform and allocator behavior, gain insights about runtime resource usage, and more.\\n![](https://ultralig.ht/media/base-memory-usage.webp)\\n## Ultra-Portable. \\nBuilt to run everywhere you run— optimized for desktop, game consoles, TVs, and embedded systems.\\nCurrently available for Windows, macOS, Linux, PlayStation, Xbox, ARM64 devices, and more.\\n## For Game Developers\\nDeveloped in collaboration with leading AAA game studios, Ultralight is tested and proven in even the most demanding environments.\\nDesigned to integrate deeply with existing game engines and take full advantage of GPU acceleration on all platforms.\\n[Game Integration Guide ](https://ultralig.ht/<https:/docs.ultralig.ht/docs/integrating-with-games>)\\n### Key Features:\\nDeep GPU Integration\\n    Use our GPUDriver API to render accelerated content directly within your existing renderer. Implementations available for Direct3D, Metal, and OpenGL.\\nTransparent Rendering\\n    Take advantage of fully-transparent rendering to composite rich, antialiased web-content on top of existing in-game content.\\nCustom Image Compositing\\n    Use our ImageSource API to display in-game textures, external image assets, or other custom content directly in styled web-page elements.\\nSecure Asset Control\\n    Use our FileSystem API to load local file assets directly from your own pipeline. Lock down web requests by blocking URLs or by using your own CA certificate store.\\n## For Native App Developers\\nBuilt for the ever-evolving needs of native app developers– Ultralight delivers lightweight, WebKit-based rendering to all desktop OSs (mobile coming soon!).\\nIntegrate web-content seamlessly with your existing application structure or leverage our AppCore framework to do all the heavy lifting for you.\\n[Native App Guide ](https://ultralig.ht/<https:/docs.ultralig.ht/docs/writing-your-first-app>)\\n### Key Features:\\nConsistency Across Platforms\\n    Take the guesswork out of delivering apps across different platforms. Link to a specific version of Ultralight so your app runs consistently across environments.\\nAutomatic Window Management\\n    Use our AppCore API to automatically manage window creation, input, focus management, and GPU rendering on all major desktop platforms.\\nJavaScript ⇔ Native Code Integration\\n    Ultralight is built on a new fork of JavaScriptCore. Deeply integrate JavaScript with native code— call native functions directly from JavaScript and vice-versa. \\nEmbed Assets In-Binary\\n    Use our FileSystem API and asset bundler to embed web assets directly within your application binary for added performance and security.\\n## Trusted by industry leaders.\\n![](https://ultralig.ht/media/logo-square-enix.png) ![](https://ultralig.ht/media/logo-take-two.png) ![](https://ultralig.ht/media/logo-ubisoft.png) ![](https://ultralig.ht/media/logo-tencent.png) ![](https://ultralig.ht/media/logo-sony.png) ![](https://ultralig.ht/media/logo-lockheed.png) ![](https://ultralig.ht/media/logo-ncsoft.png)\\n#### Frequently Asked Questions \\nWho is behind Ultralight? \\nWe are the same team behind Awesomium (c. 2008), the first HTML engine for games and desktop apps (used by EA, Square Enix, QuickBooks, and many more). \\nIn 2015, we made the bold decision to move off Chromium and rewrite the library with a focus on performance, portability, and ease-of-use. The result is Ultralight. \\nWe launched a private beta in 2018 and have been working with leading game studios and tech companies to refine the technology ever since. \\nWhat platforms does Ultralight support? \\nUltralight currently supports the following platforms: \\n  * Windows (x64)\\n  * macOS (x64 / arm64)\\n  * Linux (x64 / arm64)\\n  * Xbox\\n  * PlayStation 4\\n  * PlayStation 5\\n\\n\\nWhat HTML/JS/CSS features does Ultralight support? \\nUltralight is a custom fork of WebKit / Safari and supports most modern web features with the exception of WebGL, WebRTC, and HTML5 Video/Audio (currently experimental). \\nThere are a few other things missing which you can track [here](https://ultralig.ht/<https:/github.com/ultralight-ux/Ultralight/issues/178>). \\nWe recommend trying out the Browser (Sample #8) in the SDK to get an idea of what Ultralight is capable of today.\\nCan I use it with React/Vue.js/Angular/etc ? \\nYep! Ultralight uses the same JavaScript engine as WebKit/Safari. \\nCan I use it with my game engine? \\nIf your engine supports dynamic textures, you can use it with Ultralight.\\nOur CPU renderer can render to an offscreen bitmap for upload to a texture (see [ Sample 7 - OpenGL Integration](https://ultralig.ht/<https:/github.com/ultralight-ux/Ultralight/tree/master/samples/Sample%207%20-%20OpenGL%20Integration/src>)) or— if you need extra performance— the engine can render directly to the GPU using low-level driver commands. \\nSee our [game integration guide](https://ultralig.ht/<https:/docs.ultralig.ht/docs/integrating-with-games>) for more info. \\nCan I use it from C#/.NET/Python/Rust/Go/etc.? \\nWe maintain official API for [C++](https://ultralig.ht/<https:/docs.ultralig.ht/docs/using-the-cpp-api>) and [C](https://ultralig.ht/<https:/docs.ultralig.ht/docs/using-the-c-api>). \\nSeveral awesome members of our community maintain [ bindings for C#, Java, Rust, and Go](https://ultralig.ht/<https:/docs.ultralig.ht/docs/language-bindings>) on top of our portable C API. \\nWhere can I find the source code? \\nA portion of our WebCore source-code is available under LGPL on [GitHub here](https://ultralig.ht/<https:/github.com/ultralight-ux/>). \\nOur full source code is proprietary but can be obtained with [purchase of a commercial license](https://ultralig.ht/</pricing>). \\n## Try Ultralight Today \\nGet the SDK and explore its capabilities today.\\n[Download SDK ](https://ultralig.ht/</download>) [Read the Docs ](https://ultralig.ht/<https:/docs.ultralig.ht>)\\n[ ![](https://ultralig.ht/media/ul_logo_wordmark_sm.png) ](https://ultralig.ht/</>)\\nUniversal, Pure-GPU HTML Renderer\\n© 2024 Ultralight, Inc.\\nProduct\\n[Blog](https://ultralig.ht/</blog>) [Pricing](https://ultralig.ht/</pricing>) [Download SDK](https://ultralig.ht/</download>) [Documentation](https://ultralig.ht/<https:/docs.ultralig.ht>) [API Reference](https://ultralig.ht/</api/cpp/1_3_0/>)\\nHelp & Support\\n[Discord Chat](https://ultralig.ht/<https:/chat.ultralig.ht>) [Issue Tracker](https://ultralig.ht/<https:/github.com/ultralight-ux/ultralight/issues>) [Contact Us](https://ultralig.ht/<https:/ultralight.typeform.com/contact-us>)\\nSocial Links\\n[Follow on X](https://ultralig.ht/<https:/x.com/ultralight_ux>) [Mailing List](https://ultralig.ht/<http:/eepurl.com/dslR21>)\\n\" markdown_with_citations=\" ![⟨1⟩ ](https://ultralig.ht/</>)\\n ⟨2⟩;>)\\n  *  ![⟨1⟩ Home ](https://ultralig.ht/</>)\\n  *  Develop ⟨3⟩\\n    *  Download SDK ⟨4⟩\\n    *  Documentation ⟨5⟩\\n    *  API Reference ⟨6⟩\\n  *  Support ⟨3⟩\\n    *  Discord Chat ⟨7⟩\\n    *  Issue Tracker ⟨8⟩\\n    *  Contact Us ⟨9⟩\\n  * Blog⟨10⟩\\n  * Pricing⟨11⟩\\n\\n\\n![](https://ultralig.ht/media/ul_logo.webp)\\n# Ultralight\\n## Universal, Pure-GPU HTML Renderer \\nDownload SDK ⟨4⟩ Read the Docs ⟨12⟩\\n## HTML + Games = \\nUltralight is a **GPU-accelerated toolkit** to embed **modern HTML** in **games** and **native apps**.\\nAvailable for **C** and **C++** on Windows, macOS, Linux, Xbox, PlayStation, ARM64 devices, and more.\\nDeveloped in collaboration with **leading game studios** , built GPU-first on a new, lightweight fork of WebKit.\\n![](https://ultralig.ht/media/html_pixel_graphic.webp)\\n## Ultra-Fast. \\nBuilt **GPU-first** but can run on the **CPU** too!\\nChoose from two powerful, parallel renderers:\\n  * **GPU** : Render directly on the GPU for maximum performance. Designed to integrate deeply with your existing rendering pipeline. \\n  * **CPU** : Render parallel on the CPU for incredibly easy integration in any environment.\\n\\n\\n![](https://ultralig.ht/media/renderer-diagram.webp)\\n## Ultra-Light. \\nDesigned for the tightest resource budgets— Ultralight's baseline memory usage is nearly 10x lighter than Chromium. \\nGo further by customizing low-level platform and allocator behavior, gain insights about runtime resource usage, and more.\\n![](https://ultralig.ht/media/base-memory-usage.webp)\\n## Ultra-Portable. \\nBuilt to run everywhere you run— optimized for desktop, game consoles, TVs, and embedded systems.\\nCurrently available for Windows, macOS, Linux, PlayStation, Xbox, ARM64 devices, and more.\\n## For Game Developers\\nDeveloped in collaboration with leading AAA game studios, Ultralight is tested and proven in even the most demanding environments.\\nDesigned to integrate deeply with existing game engines and take full advantage of GPU acceleration on all platforms.\\nGame Integration Guide ⟨13⟩\\n### Key Features:\\nDeep GPU Integration\\n    Use our GPUDriver API to render accelerated content directly within your existing renderer. Implementations available for Direct3D, Metal, and OpenGL.\\nTransparent Rendering\\n    Take advantage of fully-transparent rendering to composite rich, antialiased web-content on top of existing in-game content.\\nCustom Image Compositing\\n    Use our ImageSource API to display in-game textures, external image assets, or other custom content directly in styled web-page elements.\\nSecure Asset Control\\n    Use our FileSystem API to load local file assets directly from your own pipeline. Lock down web requests by blocking URLs or by using your own CA certificate store.\\n## For Native App Developers\\nBuilt for the ever-evolving needs of native app developers– Ultralight delivers lightweight, WebKit-based rendering to all desktop OSs (mobile coming soon!).\\nIntegrate web-content seamlessly with your existing application structure or leverage our AppCore framework to do all the heavy lifting for you.\\nNative App Guide ⟨14⟩\\n### Key Features:\\nConsistency Across Platforms\\n    Take the guesswork out of delivering apps across different platforms. Link to a specific version of Ultralight so your app runs consistently across environments.\\nAutomatic Window Management\\n    Use our AppCore API to automatically manage window creation, input, focus management, and GPU rendering on all major desktop platforms.\\nJavaScript ⇔ Native Code Integration\\n    Ultralight is built on a new fork of JavaScriptCore. Deeply integrate JavaScript with native code— call native functions directly from JavaScript and vice-versa. \\nEmbed Assets In-Binary\\n    Use our FileSystem API and asset bundler to embed web assets directly within your application binary for added performance and security.\\n## Trusted by industry leaders.\\n![](https://ultralig.ht/media/logo-square-enix.png) ![](https://ultralig.ht/media/logo-take-two.png) ![](https://ultralig.ht/media/logo-ubisoft.png) ![](https://ultralig.ht/media/logo-tencent.png) ![](https://ultralig.ht/media/logo-sony.png) ![](https://ultralig.ht/media/logo-lockheed.png) ![](https://ultralig.ht/media/logo-ncsoft.png)\\n#### Frequently Asked Questions \\nWho is behind Ultralight? \\nWe are the same team behind Awesomium (c. 2008), the first HTML engine for games and desktop apps (used by EA, Square Enix, QuickBooks, and many more). \\nIn 2015, we made the bold decision to move off Chromium and rewrite the library with a focus on performance, portability, and ease-of-use. The result is Ultralight. \\nWe launched a private beta in 2018 and have been working with leading game studios and tech companies to refine the technology ever since. \\nWhat platforms does Ultralight support? \\nUltralight currently supports the following platforms: \\n  * Windows (x64)\\n  * macOS (x64 / arm64)\\n  * Linux (x64 / arm64)\\n  * Xbox\\n  * PlayStation 4\\n  * PlayStation 5\\n\\n\\nWhat HTML/JS/CSS features does Ultralight support? \\nUltralight is a custom fork of WebKit / Safari and supports most modern web features with the exception of WebGL, WebRTC, and HTML5 Video/Audio (currently experimental). \\nThere are a few other things missing which you can track here⟨15⟩. \\nWe recommend trying out the Browser (Sample #8) in the SDK to get an idea of what Ultralight is capable of today.\\nCan I use it with React/Vue.js/Angular/etc ? \\nYep! Ultralight uses the same JavaScript engine as WebKit/Safari. \\nCan I use it with my game engine? \\nIf your engine supports dynamic textures, you can use it with Ultralight.\\nOur CPU renderer can render to an offscreen bitmap for upload to a texture (see  Sample 7 - OpenGL Integration⟨16⟩) or— if you need extra performance— the engine can render directly to the GPU using low-level driver commands. \\nSee our game integration guide⟨13⟩ for more info. \\nCan I use it from C#/.NET/Python/Rust/Go/etc.? \\nWe maintain official API for C++⟨17⟩ and C⟨18⟩. \\nSeveral awesome members of our community maintain  bindings for C#, Java, Rust, and Go⟨19⟩ on top of our portable C API. \\nWhere can I find the source code? \\nA portion of our WebCore source-code is available under LGPL on GitHub here⟨20⟩. \\nOur full source code is proprietary but can be obtained with purchase of a commercial license⟨11⟩. \\n## Try Ultralight Today \\nGet the SDK and explore its capabilities today.\\nDownload SDK ⟨4⟩ Read the Docs ⟨12⟩\\n ![⟨1⟩ ](https://ultralig.ht/</>)\\nUniversal, Pure-GPU HTML Renderer\\n© 2024 Ultralight, Inc.\\nProduct\\nBlog⟨10⟩ Pricing⟨11⟩ Download SDK⟨4⟩ Documentation⟨12⟩ API Reference⟨6⟩\\nHelp & Support\\nDiscord Chat⟨7⟩ Issue Tracker⟨8⟩ Contact Us⟨9⟩\\nSocial Links\\nFollow on X⟨21⟩ Mailing List⟨22⟩\\n\" references_markdown='\\n\\n## References\\n\\n⟨1⟩ https://ultralig.ht/media/ul_logo_wordmark_sm.png:  ![\\n⟨2⟩ https://ultralig.ht/<javascript:void\\\\(0\\\\:  \\n⟨3⟩ https://ultralig.ht/<#company>:  Develop \\n⟨4⟩ https://ultralig.ht/</download>:  Download SDK \\n⟨5⟩ https://ultralig.ht/<https:/docs.ultralig.ht/>:  Documentation \\n⟨6⟩ https://ultralig.ht/</api/cpp/1_3_0/>:  API Reference \\n⟨7⟩ https://ultralig.ht/<https:/chat.ultralig.ht>:  Discord Chat \\n⟨8⟩ https://ultralig.ht/<https:/github.com/ultralight-ux/ultralight/issues>:  Issue Tracker \\n⟨9⟩ https://ultralig.ht/<https:/ultralight.typeform.com/contact-us>:  Contact Us \\n⟨10⟩ https://ultralig.ht/</blog>: Blog\\n⟨11⟩ https://ultralig.ht/</pricing>: Pricing\\n⟨12⟩ https://ultralig.ht/<https:/docs.ultralig.ht>: Read the Docs \\n⟨13⟩ https://ultralig.ht/<https:/docs.ultralig.ht/docs/integrating-with-games>: Game Integration Guide \\n⟨14⟩ https://ultralig.ht/<https:/docs.ultralig.ht/docs/writing-your-first-app>: Native App Guide \\n⟨15⟩ https://ultralig.ht/<https:/github.com/ultralight-ux/Ultralight/issues/178>: here\\n⟨16⟩ https://ultralig.ht/<https:/github.com/ultralight-ux/Ultralight/tree/master/samples/Sample%207%20-%20OpenGL%20Integration/src>:  Sample 7 - OpenGL Integration\\n⟨17⟩ https://ultralig.ht/<https:/docs.ultralig.ht/docs/using-the-cpp-api>: C++\\n⟨18⟩ https://ultralig.ht/<https:/docs.ultralig.ht/docs/using-the-c-api>: C\\n⟨19⟩ https://ultralig.ht/<https:/docs.ultralig.ht/docs/language-bindings>:  bindings for C#, Java, Rust, and Go\\n⟨20⟩ https://ultralig.ht/<https:/github.com/ultralight-ux/>: GitHub here\\n⟨21⟩ https://ultralig.ht/<https:/x.com/ultralight_ux>: Follow on X\\n⟨22⟩ https://ultralig.ht/<http:/eepurl.com/dslR21>: Mailing List\\n' fit_markdown='' fit_html=''",
  "generated_description": "**Ultralight: The Universal, Pure-GPU HTML Renderer**\n\nFounded in 2017 and based in San Francisco, Ultralight is shaking up the world of game and app development with its innovative approach to rendering HTML. As part of the Y Combinator Batch W19, this company has a clear mission: to provide a GPU-accelerated toolkit that makes embedding modern HTML in games and native applications not just feasible, but remarkably efficient. \n\n### What is Ultralight?\n\nUltralight is a lightweight fork of WebKit, designed specifically to empower developers using C and C++. Its reach extends across a broad array of platforms— from desktop systems like Windows, macOS, and Linux to gaming consoles like Xbox and PlayStation. The key value proposition? It's fast, lightweight, and portable.\n\n### Why Ultralight Stands Out\n\n1. **Ultra-Fast Rendering**: Ultralight distinguishes itself with a GPU-first architecture that can also utilize CPU rendering. Developers can choose to maximize performance by rendering directly on the GPU, or opt for easy integration with CPU-based rendering, suited for less intense environments.\n\n2. **Ultra-Lightweight Resource Usage**: Ultralight's memory footprint is nearly ten times lighter than that of Chromium. This efficiency allows developers to create applications that consume fewer resources while maintaining strong performance.\n\n3. **Ultra-Portability**: With optimization for various environments— including embedded systems and TVs— Ultralight fits seamlessly into many existing infrastructures. Whether you're developing a game or a desktop application, Ultralight is built to run nearly everywhere.\n\n### Tailored for Game Developers\n\nUltralight’s development closely collaborates with leading AAA game studios, ensuring that it meets the demanding needs of modern game development. Some standout features include:\n\n- **Deep GPU Integration**: The GPUDriver API allows developers to incorporate accelerated content directly into their existing rendering engines, whether they're using Direct3D, Metal, or OpenGL.\n\n- **Transparent Rendering and Custom Image Compositing**: Rich web content can be rendered transparently over existing in-game visuals, enhancing the integration of HTML within the gaming experience.\n\n### Native App Development Simplified\n\nFor native app developers, Ultralight offers straightforward integration with comprehensive support for consistent application performance across operating systems. Features like automatic window management and the ability to call native functions directly from JavaScript bridge the gap between web and native code.\n\n### Trusted by Industry Leaders\n\nUltralight is already making waves with prominent partners, including major industry players like EA, Square Enix, and Sony, validating its efficacy in real-world applications.\n\n### The Backstory\n\nThe team behind Ultralight is no stranger to this domain— they previously crafted Awesomium, the first HTML engine for games. Their journey took a bold turn in 2015 when they decided to move on from Chromium, focusing instead on performance and portability, which culminated in the creation of Ultralight and its private beta launch in 2018.\n\n### Join the Revolution\n\nIf you're tired of bloated engines and slow integration processes, it's time to give Ultralight a try. Check out their [website](https://ultralig.ht) to download the SDK, explore the documentation, engage in community discussions on Discord, and see how Ultralight can transform your development experience. \n\nIn a world that's constantly evolving, Ultralight stands as a beacon for developers who want to push the envelope with less overhead and more speed. Don't miss your chance to be part of this innovative movement in HTML rendering."
}