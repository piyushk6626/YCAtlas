{
  "links": "https://www.ycombinator.com/companies/zenbase-ai",
  "name": "Zenbase AI",
  "headline": "Continuous prompt optimization for LLMs from DSPy core contributors",
  "batch": "S24",
  "description": "Zenbase helps developers focus on programming by automating prompt engineering and model selection. We’re core contributors of Stanford NLP’s DSPy, the #1 LLM optimization framework used by Meta, Microsoft, Google, among many others. But it's hard to use outside of academia. We're building the production version.",
  "activity_status": "Active",
  "website": "https://zenbase.ai",
  "founded_date": 2024.0,
  "team_size": 2.0,
  "location": "San Francisco",
  "group_partner": "Diana Hu",
  "group_partner_yc": "https://www.ycombinator.com/people/diana-hu",
  "company_linkedin": null,
  "company_twitter": null,
  "tags": "industry:generative-ai; industry:saas; industry:open-source; industry:infrastructure; industry:ai; location:san-francisco-bay-area",
  "founders": [
    {
      "name": "Cyrus Nouroozi, Co-Founder",
      "description": "Cyrus is the Co-Founder @ Zenbase AI and a core contributor to Stanford NLP's DSPy. He's been called bottled lightning, a 95th percentile AI researcher (after 4 months of self-studying), and a beautiful soul. He enjoys the little moments in a day with coffee, ecstatic dance, and tai chi.",
      "linkedin": "https://linkedin.com/in/knouroozi"
    },
    {
      "name": "Amir Mehr, Co-Founder",
      "description": "With a Master’s in Computer Science from the University of Calgary and as a key contributor to StanfordNLP's DSPy project, Amir has deep expertise in AI and software engineering. He played a crucial role in engineering at HubMeta and OVOU. His early success running a profitable web hosting business in high school showcases his technical acumen and entrepreneurial drive.",
      "linkedin": "https://www.linkedin.com/in/amir--mehr/"
    }
  ],
  "status": true,
  "markdown": "raw_markdown='[![Launch](https://www.ycombinator.com/launches/Lmp-zenbase-continuous-prompt-optimization-by-dspy-core-contributors/upvote_embed.svg/)](https://zenbase.ai/<https:/www.ycombinator.com/launches/Lmp-zenbase-continuous-prompt-optimization-by-dspy-core-contributors>)\\n[![Launch](https://www.ycombinator.com/launches/Lmp-zenbase-continuous-prompt-optimization-by-dspy-core-contributors/upvote_embed.svg/)](https://zenbase.ai/<https:/www.ycombinator.com/launches/Lmp-zenbase-continuous-prompt-optimization-by-dspy-core-contributors>)\\n# Focus on programming, not prompting.\\n# Focus on programming, not prompting.\\nDeveloper tools and cloud infrastructure for perfectionists using LLMs. Zenbase takes care of the hassle of prompt engineering and model selection.\\nDeveloper tools and cloud infrastructure for perfectionists using LLMs. Zenbase takes care of the hassle of prompt engineering and model selection.\\n[Code Examples](https://zenbase.ai/<./#code-examples>)\\n[Get started](https://zenbase.ai/<./#get-started>)\\n[Get started](https://zenbase.ai/<./#get-started>)\\n![](https://framerusercontent.com/images/6SGnqyPBgV294hxz06Uw23oFwI.webp)\\n![](https://framerusercontent.com/images/6SGnqyPBgV294hxz06Uw23oFwI.webp)\\n![](https://framerusercontent.com/images/1YqJp6HvdkSPB8wxGFaHT8uAZ4.png)\\n![](https://framerusercontent.com/images/1YqJp6HvdkSPB8wxGFaHT8uAZ4.png)\\n[![](https://framerusercontent.com/images/BjbxD6JgnH7fgtOjApYgCVHrLc.png?scale-down-to=512)](https://zenbase.ai/<./>)\\n[GitHub](https://zenbase.ai/<https:/github.com/zenbase-ai/core/tree/main/py>)\\n[Schedule a demo](https://zenbase.ai/<https:/zenbase.typeform.com/early-access>)\\n[![](https://framerusercontent.com/images/BjbxD6JgnH7fgtOjApYgCVHrLc.png?scale-down-to=512)](https://zenbase.ai/<./>)\\n[![](https://framerusercontent.com/images/BjbxD6JgnH7fgtOjApYgCVHrLc.png?scale-down-to=512)](https://zenbase.ai/<./>)\\n![](https://framerusercontent.com/images/1keC13saAdCdbrzT4m2VfrIsg.png?scale-down-to=1024)\\n![](https://framerusercontent.com/images/1keC13saAdCdbrzT4m2VfrIsg.png?scale-down-to=1024)\\n![](https://framerusercontent.com/images/C7SPJnVXLFJA9F7uBzrvXxLVqg.png)\\n![](https://framerusercontent.com/images/2fhVMek92q7YLgkzUz2efuyvMdM.png)\\n![](https://framerusercontent.com/images/C7SPJnVXLFJA9F7uBzrvXxLVqg.png)\\n![](https://framerusercontent.com/images/C7SPJnVXLFJA9F7uBzrvXxLVqg.png)\\n![](https://framerusercontent.com/images/1keC13saAdCdbrzT4m2VfrIsg.png?scale-down-to=1024)\\n![](https://framerusercontent.com/images/1keC13saAdCdbrzT4m2VfrIsg.png?scale-down-to=1024)\\n![](https://framerusercontent.com/images/1keC13saAdCdbrzT4m2VfrIsg.png?scale-down-to=1024)\\n## Mmmmm… code\\nScaling Vibe Checks\\nTransaction Categorization\\nNotificationRelevance\\nStyled Generation\\nRAG Query Generator\\nReliable Tool Calls\\nRouter with Latency Constraint\\nEntity Extraction with Latency Constraint\\nIt\\'s easier to know what looks good than it is to explain to an LLM how to grade what looks good. Zenbase\\'s classifiers can be calibrated to that of a human reviewer, so that you can programmatically evaluate vibes at scale.\\nTypescript\\nPython\\n```\\n// 1. Create your classifier\\nconst vibeCheck = zenbase.classifier({\\n\\tid: \"vibeCheck\",\\n\\tparams: z.object({\\n\\t\\ttext: z.string()\\n\\t}),\\n\\treturns: z.boolean(),\\n})\\n// 2. Give it test cases\\nawait vibeCheck.tests.add([\\n\\t{ params: { text: \"...\" }, returns: true },\\n\\t{ params: { text: \"...\" }, returns: false },\\n])\\n// 3. Train it\\nconst { evals } = await vibeCheck.optimize()\\n// 4. Use it\\nconst { data: isVibey } = await vibeCheck({\\n\\ttext: `A towel, the guide says, is about the most massively useful thing an interstellar hitchhiker can have.`\\n})\\n// 5. Incorporate user feedback\\nconst onUserFeedback = (text: string, isVibey: bool) =>\\n\\tvibeCheck.tests.add([\\n\\t\\t{ params: { text }, returns: isVibey }\\n\\t])\\n```\\n\\nScaling Vibe Checks\\nTransaction Categorization\\nNotificationRelevance\\nStyled Generation\\nRAG Query Generator\\nReliable Tool Calls\\nRouter with Latency Constraint\\nEntity Extraction with Latency Constraint\\nIt\\'s easier to know what looks good than it is to explain to an LLM how to grade what looks good. Zenbase\\'s classifiers can be calibrated to that of a human reviewer, so that you can programmatically evaluate vibes at scale.\\nTypescript\\nPython\\n```\\n// 1. Create your classifier\\nconst vibeCheck = zenbase.classifier({\\n\\tid: \"vibeCheck\",\\n\\tparams: z.object({\\n\\t\\ttext: z.string()\\n\\t}),\\n\\treturns: z.boolean(),\\n})\\n// 2. Give it test cases\\nawait vibeCheck.tests.add([\\n\\t{ params: { text: \"...\" }, returns: true },\\n\\t{ params: { text: \"...\" }, returns: false },\\n])\\n// 3. Train it\\nconst { evals } = await vibeCheck.optimize()\\n// 4. Use it\\nconst { data: isVibey } = await vibeCheck({\\n\\ttext: `A towel, the guide says, is about the most massively useful thing an interstellar hitchhiker can have.`\\n})\\n// 5. Incorporate user feedback\\nconst onUserFeedback = (text: string, isVibey: bool) =>\\n\\tvibeCheck.tests.add([\\n\\t\\t{ params: { text }, returns: isVibey }\\n\\t])\\n```\\n\\nScaling Vibe Checks\\nTransaction Categorization\\nNotificationRelevance\\nStyled Generation\\nRAG Query Generator\\nReliable Tool Calls\\nRouter with Latency Constraint\\nEntity Extraction with Latency Constraint\\nIt\\'s easier to know what looks good than it is to explain to an LLM how to grade what looks good. Zenbase\\'s classifiers can be calibrated to that of a human reviewer, so that you can programmatically evaluate vibes at scale.\\nTypescript\\nPython\\n```\\n// 1. Create your classifier\\nconst vibeCheck = zenbase.classifier({\\n\\tid: \"vibeCheck\",\\n\\tparams: z.object({\\n\\t\\ttext: z.string()\\n\\t}),\\n\\treturns: z.boolean(),\\n})\\n// 2. Give it test cases\\nawait vibeCheck.tests.add([\\n\\t{ params: { text: \"...\" }, returns: true },\\n\\t{ params: { text: \"...\" }, returns: false },\\n])\\n// 3. Train it\\nconst { evals } = await vibeCheck.optimize()\\n// 4. Use it\\nconst { data: isVibey } = await vibeCheck({\\n\\ttext: `A towel, the guide says, is about the most massively useful thing an interstellar hitchhiker can have.`\\n})\\n// 5. Incorporate user feedback\\nconst onUserFeedback = (text: string, isVibey: bool) =>\\n\\tvibeCheck.tests.add([\\n\\t\\t{ params: { text }, returns: isVibey }\\n\\t])\\n```\\n\\n## Is it any good?\\nWe develop custom optimization algorithms and leverage those developed by our fellow open source contributors at StanfordNLP/DSPy.\\nWe develop custom optimization algorithms and leverage those developed by our fellow open source contributors at StanfordNLP/DSPy.\\nThe Zenbase team has a unique combination of technical expertise and practical problem-solving skills. **Their work is both theoretically sound and aimed at solving the real challenges developers face.**\\n![](https://framerusercontent.com/images/74oAzcFFyucgtX8DuJlf2Qjg.png)\\n![](https://framerusercontent.com/images/74oAzcFFyucgtX8DuJlf2Qjg.png)\\nOmar Khattab\\nOmar\\nResearcher @ DatabricksCreator of DSPy & ColBERT\\nDatabricks,DSPy, ColBERT\\nI’ve seen a lot of AI Devtools and Zenbase is solving a problem that everyone building with AI will have when going to production. **The best part is their product is so easy to use that it’s a no brainer.**\\n![](https://framerusercontent.com/images/T3S0rHph966Qqchw2MgPIXc6v8.png)\\n![](https://framerusercontent.com/images/T3S0rHph966Qqchw2MgPIXc6v8.png)\\nScott\\nCEO[Superfilter.ai](https://zenbase.ai/<https:/www.superfilter.ai/>) (YC S24)\\nCEO[Superfilter.ai](https://zenbase.ai/<https:/www.superfilter.ai/>) (YC S24)\\nWe were staying up until 3am trying to go from demo to production. **Zenbase came into the trenches with us to improve our evals from 10% to 91.6%.** It really felt like they were a part of our team.\\n![](https://framerusercontent.com/images/3K6y8TXl5MIEMy8xxpvyExzNG8.png)\\n![](https://framerusercontent.com/images/3K6y8TXl5MIEMy8xxpvyExzNG8.png)\\nTaeib\\nCofounder[Vera-Health.ai](https://zenbase.ai/<https:/vera-health.ai/>) (YC S24)\\nDSPy\\'s optimizers had**40%+ better accuracy and saved 18 engineer hours** on a classification task vs. an expert prompter using 49 prompting techniques.\\n![](https://framerusercontent.com/images/ENrFbTChPF90jJMq36XCyXINy0.jpg)\\n![](https://framerusercontent.com/images/ENrFbTChPF90jJMq36XCyXINy0.jpg)\\nLearn Prompting\\nSponsored by OpenAI & Microsoft\\nSponsored byOpenAI & Microsoft\\n## Feel the Zen\\nDeclarative DX\\nZenbase\\'s AI functions let you focus on what you want, not how to prompt or which model to use.\\nAI that gets smarter all the time\\nAI that gets smarter with time\\nWe automate the prompt engineering and fine-tuning so you don\\'t have to figure it out.\\nNever get stuck prompt engineering again\\nWe\\'ll find the best prompt and model to maximize coverage of your test cases.\\n[Get started](https://zenbase.ai/<./#get-started>)\\n[Get started](https://zenbase.ai/<./#get-started>)\\n## Your Zen\\n## Masters\\n## Mains\\n![](https://framerusercontent.com/images/3hz23xf39zkNslAnJz0CL7htDtY.jpg)\\n![](https://framerusercontent.com/images/3hz23xf39zkNslAnJz0CL7htDtY.jpg)\\n#### Cyrus Nouroozi\\nFounder & CEO\\n• Core Contributor @ DSPy• UWaterloo Systems Design Eng\\n• Core Contributor @ DSPy• Honorary Researcher @ Nous Research• UWaterloo Systems Design\\n#### Amir Mehr\\nFounder & CTO\\n• Core Contributor @ DSPy\\n• Core Contributor @ DSPy• M.Sc. of CS @ UCalgary\\n• M.Sc. of CS @ UCalgary\\n![](https://framerusercontent.com/images/knNCfjP3xP6XzHqjZAJe1pXEQo.png)\\n![](https://framerusercontent.com/images/knNCfjP3xP6XzHqjZAJe1pXEQo.png)\\n##### Supported by angels from\\n![](https://framerusercontent.com/images/FduW42mW3zNopiaZ5D2aiCUXj4.png?scale-down-to=1024)\\n![](https://framerusercontent.com/images/FduW42mW3zNopiaZ5D2aiCUXj4.png?scale-down-to=1024)\\n![](https://framerusercontent.com/images/FduW42mW3zNopiaZ5D2aiCUXj4.png?scale-down-to=1024)\\n![](https://framerusercontent.com/images/FduW42mW3zNopiaZ5D2aiCUXj4.png?scale-down-to=1024)\\n![](https://framerusercontent.com/images/I6CHr1QyRHE1StVyQjZb4FM.png?scale-down-to=512)\\n![](https://framerusercontent.com/images/I6CHr1QyRHE1StVyQjZb4FM.png?scale-down-to=512)\\n![](https://framerusercontent.com/images/I6CHr1QyRHE1StVyQjZb4FM.png?scale-down-to=512)\\n![](https://framerusercontent.com/images/I6CHr1QyRHE1StVyQjZb4FM.png?scale-down-to=512)\\n![](https://framerusercontent.com/images/Qa1t9BWvW6ZYnfRO46WyjExkQfw.png)\\n![](https://framerusercontent.com/images/Qa1t9BWvW6ZYnfRO46WyjExkQfw.png)\\n![](https://framerusercontent.com/images/2YyB7Kp57Bk6YWwTiSxy59ExQ4.png?scale-down-to=2048)\\n![](https://framerusercontent.com/images/2YyB7Kp57Bk6YWwTiSxy59ExQ4.png?scale-down-to=2048)\\n![](https://framerusercontent.com/images/2YyB7Kp57Bk6YWwTiSxy59ExQ4.png?scale-down-to=2048)\\n![](https://framerusercontent.com/images/2YyB7Kp57Bk6YWwTiSxy59ExQ4.png?scale-down-to=2048)\\n![](https://framerusercontent.com/images/ersFObK2q8MSHqyAG9Odfy9BqFM.png?scale-down-to=512)\\n![](https://framerusercontent.com/images/ersFObK2q8MSHqyAG9Odfy9BqFM.png?scale-down-to=512)\\n![](https://framerusercontent.com/images/ersFObK2q8MSHqyAG9Odfy9BqFM.png?scale-down-to=512)\\n![](https://framerusercontent.com/images/ersFObK2q8MSHqyAG9Odfy9BqFM.png?scale-down-to=512)\\n![](https://framerusercontent.com/images/1keC13saAdCdbrzT4m2VfrIsg.png?scale-down-to=1024)\\n![](https://framerusercontent.com/images/1keC13saAdCdbrzT4m2VfrIsg.png?scale-down-to=1024)\\n![](https://framerusercontent.com/images/1keC13saAdCdbrzT4m2VfrIsg.png?scale-down-to=1024)\\n![](https://framerusercontent.com/images/1keC13saAdCdbrzT4m2VfrIsg.png?scale-down-to=1024)\\n## Find your Zen\\nOpen Source\\n##### Free Forever\\nOptimize your existing pipelines\\nIntegrates with your eval tooling\\nManual control\\nComplete control over prompts\\nMIT License\\n[GitHub](https://zenbase.ai/<https:/github.com/zenbase-ai/core>)\\n[GitHub](https://zenbase.ai/<https:/github.com/zenbase-ai/core>)\\nStartup\\n##### Starts at $1000/month\\nHosted API\\nContinual Optimization\\nDedicated Slack Channel\\nCustom Evaluators\\n[Schedule a demo](https://zenbase.ai/<https:/zenbase.typeform.com/early-access>)\\n[Schedule a demo](https://zenbase.ai/<https:/zenbase.typeform.com/early-access>)\\nEnterprise\\n##### Contact Us\\nSOCII / HIPAA\\nOn-prem deployment\\nDedicated Slack Channel\\nCustom Optimizers\\n[Contact us](https://zenbase.ai/<https:/zenbase.typeform.com/early-access>)\\n[Contact us](https://zenbase.ai/<https:/zenbase.typeform.com/early-access>)\\n#### Join the waitlist for our self-serve API\\n#### Join the waitlist for our self-serve API\\n#### FAQ\\nYou asked, we answered.\\nHow do you find the best prompt & model?\\nWe use AI to continuously experiment with prompts and models to figure out the most effective way to execute your function. We use algorithms developed in-house and those researched by our team at DSPy. Automated prompt engineering combined with expert prompting regularly leads to double digit percentage improvements over expert prompting alone.\\nDo you offer an on-premise solution / SOCII / HIPAA?\\nCan we start with a small POC and adopt Zenbase incrementally?\\nCan I export the prompt & model?\\n#### FAQ\\nYou asked, we answered.\\nHow do you find the best prompt & model?\\nDo you offer an on-premise solution / SOCII / HIPAA?\\nCan we start with a small POC and adopt Zenbase incrementally?\\nCan I export the prompt & model?\\n![](https://framerusercontent.com/images/NVRianiZNBN7MvixizmwH79MmM.png?scale-down-to=512)\\n[Schedule a demo](https://zenbase.ai/<https:/zenbase.typeform.com/early-access>)\\nMade with ❤️ in San Francisco 🇺🇸 and Edmonton 🇨🇦.\\nCopyright 2024 Zenbase AI Inc.\\n[](https://zenbase.ai/<https:/github.com/zenbase-ai>)[](https://zenbase.ai/<https:/www.linkedin.com/company/zenbase-ai/>)\\n![](https://framerusercontent.com/images/NVRianiZNBN7MvixizmwH79MmM.png?scale-down-to=512)\\n[Schedule a demo](https://zenbase.ai/<https:/zenbase.typeform.com/early-access>)\\nMade with ❤️ in San Francisco 🇺🇸 and Edmonton 🇨🇦.\\nCopyright 2024 Zenbase AI Inc.\\n[](https://zenbase.ai/<https:/github.com/zenbase-ai>)[](https://zenbase.ai/<https:/www.linkedin.com/company/zenbase-ai/>)\\n![](https://framerusercontent.com/images/NVRianiZNBN7MvixizmwH79MmM.png?scale-down-to=512)\\n[Schedule a demo](https://zenbase.ai/<https:/zenbase.typeform.com/early-access>)\\nMade with ❤️ in San Francisco 🇺🇸 and Edmonton 🇨🇦.\\nCopyright 2024 Zenbase AI Inc.\\n[](https://zenbase.ai/<https:/github.com/zenbase-ai>)[](https://zenbase.ai/<https:/www.linkedin.com/company/zenbase-ai/>)\\n' markdown_with_citations='![Launch⟨1⟩](https://zenbase.ai/<https:/www.ycombinator.com/launches/Lmp-zenbase-continuous-prompt-optimization-by-dspy-core-contributors>)\\n![Launch⟨1⟩](https://zenbase.ai/<https:/www.ycombinator.com/launches/Lmp-zenbase-continuous-prompt-optimization-by-dspy-core-contributors>)\\n# Focus on programming, not prompting.\\n# Focus on programming, not prompting.\\nDeveloper tools and cloud infrastructure for perfectionists using LLMs. Zenbase takes care of the hassle of prompt engineering and model selection.\\nDeveloper tools and cloud infrastructure for perfectionists using LLMs. Zenbase takes care of the hassle of prompt engineering and model selection.\\nCode Examples⟨2⟩\\nGet started⟨3⟩\\nGet started⟨3⟩\\n![](https://framerusercontent.com/images/6SGnqyPBgV294hxz06Uw23oFwI.webp)\\n![](https://framerusercontent.com/images/6SGnqyPBgV294hxz06Uw23oFwI.webp)\\n![](https://framerusercontent.com/images/1YqJp6HvdkSPB8wxGFaHT8uAZ4.png)\\n![](https://framerusercontent.com/images/1YqJp6HvdkSPB8wxGFaHT8uAZ4.png)\\n![⟨4⟩](https://zenbase.ai/<./>)\\nGitHub⟨5⟩\\nSchedule a demo⟨6⟩\\n![⟨4⟩](https://zenbase.ai/<./>)\\n![⟨4⟩](https://zenbase.ai/<./>)\\n![](https://framerusercontent.com/images/1keC13saAdCdbrzT4m2VfrIsg.png?scale-down-to=1024)\\n![](https://framerusercontent.com/images/1keC13saAdCdbrzT4m2VfrIsg.png?scale-down-to=1024)\\n![](https://framerusercontent.com/images/C7SPJnVXLFJA9F7uBzrvXxLVqg.png)\\n![](https://framerusercontent.com/images/2fhVMek92q7YLgkzUz2efuyvMdM.png)\\n![](https://framerusercontent.com/images/C7SPJnVXLFJA9F7uBzrvXxLVqg.png)\\n![](https://framerusercontent.com/images/C7SPJnVXLFJA9F7uBzrvXxLVqg.png)\\n![](https://framerusercontent.com/images/1keC13saAdCdbrzT4m2VfrIsg.png?scale-down-to=1024)\\n![](https://framerusercontent.com/images/1keC13saAdCdbrzT4m2VfrIsg.png?scale-down-to=1024)\\n![](https://framerusercontent.com/images/1keC13saAdCdbrzT4m2VfrIsg.png?scale-down-to=1024)\\n## Mmmmm… code\\nScaling Vibe Checks\\nTransaction Categorization\\nNotificationRelevance\\nStyled Generation\\nRAG Query Generator\\nReliable Tool Calls\\nRouter with Latency Constraint\\nEntity Extraction with Latency Constraint\\nIt\\'s easier to know what looks good than it is to explain to an LLM how to grade what looks good. Zenbase\\'s classifiers can be calibrated to that of a human reviewer, so that you can programmatically evaluate vibes at scale.\\nTypescript\\nPython\\n```\\n// 1. Create your classifier\\nconst vibeCheck = zenbase.classifier({\\n\\tid: \"vibeCheck\",\\n\\tparams: z.object({\\n\\t\\ttext: z.string()\\n\\t}),\\n\\treturns: z.boolean(),\\n})\\n// 2. Give it test cases\\nawait vibeCheck.tests.add([\\n\\t{ params: { text: \"...\" }, returns: true },\\n\\t{ params: { text: \"...\" }, returns: false },\\n])\\n// 3. Train it\\nconst { evals } = await vibeCheck.optimize()\\n// 4. Use it\\nconst { data: isVibey } = await vibeCheck({\\n\\ttext: `A towel, the guide says, is about the most massively useful thing an interstellar hitchhiker can have.`\\n})\\n// 5. Incorporate user feedback\\nconst onUserFeedback = (text: string, isVibey: bool) =>\\n\\tvibeCheck.tests.add([\\n\\t\\t{ params: { text }, returns: isVibey }\\n\\t])\\n```\\n\\nScaling Vibe Checks\\nTransaction Categorization\\nNotificationRelevance\\nStyled Generation\\nRAG Query Generator\\nReliable Tool Calls\\nRouter with Latency Constraint\\nEntity Extraction with Latency Constraint\\nIt\\'s easier to know what looks good than it is to explain to an LLM how to grade what looks good. Zenbase\\'s classifiers can be calibrated to that of a human reviewer, so that you can programmatically evaluate vibes at scale.\\nTypescript\\nPython\\n```\\n// 1. Create your classifier\\nconst vibeCheck = zenbase.classifier({\\n\\tid: \"vibeCheck\",\\n\\tparams: z.object({\\n\\t\\ttext: z.string()\\n\\t}),\\n\\treturns: z.boolean(),\\n})\\n// 2. Give it test cases\\nawait vibeCheck.tests.add([\\n\\t{ params: { text: \"...\" }, returns: true },\\n\\t{ params: { text: \"...\" }, returns: false },\\n])\\n// 3. Train it\\nconst { evals } = await vibeCheck.optimize()\\n// 4. Use it\\nconst { data: isVibey } = await vibeCheck({\\n\\ttext: `A towel, the guide says, is about the most massively useful thing an interstellar hitchhiker can have.`\\n})\\n// 5. Incorporate user feedback\\nconst onUserFeedback = (text: string, isVibey: bool) =>\\n\\tvibeCheck.tests.add([\\n\\t\\t{ params: { text }, returns: isVibey }\\n\\t])\\n```\\n\\nScaling Vibe Checks\\nTransaction Categorization\\nNotificationRelevance\\nStyled Generation\\nRAG Query Generator\\nReliable Tool Calls\\nRouter with Latency Constraint\\nEntity Extraction with Latency Constraint\\nIt\\'s easier to know what looks good than it is to explain to an LLM how to grade what looks good. Zenbase\\'s classifiers can be calibrated to that of a human reviewer, so that you can programmatically evaluate vibes at scale.\\nTypescript\\nPython\\n```\\n// 1. Create your classifier\\nconst vibeCheck = zenbase.classifier({\\n\\tid: \"vibeCheck\",\\n\\tparams: z.object({\\n\\t\\ttext: z.string()\\n\\t}),\\n\\treturns: z.boolean(),\\n})\\n// 2. Give it test cases\\nawait vibeCheck.tests.add([\\n\\t{ params: { text: \"...\" }, returns: true },\\n\\t{ params: { text: \"...\" }, returns: false },\\n])\\n// 3. Train it\\nconst { evals } = await vibeCheck.optimize()\\n// 4. Use it\\nconst { data: isVibey } = await vibeCheck({\\n\\ttext: `A towel, the guide says, is about the most massively useful thing an interstellar hitchhiker can have.`\\n})\\n// 5. Incorporate user feedback\\nconst onUserFeedback = (text: string, isVibey: bool) =>\\n\\tvibeCheck.tests.add([\\n\\t\\t{ params: { text }, returns: isVibey }\\n\\t])\\n```\\n\\n## Is it any good?\\nWe develop custom optimization algorithms and leverage those developed by our fellow open source contributors at StanfordNLP/DSPy.\\nWe develop custom optimization algorithms and leverage those developed by our fellow open source contributors at StanfordNLP/DSPy.\\nThe Zenbase team has a unique combination of technical expertise and practical problem-solving skills. **Their work is both theoretically sound and aimed at solving the real challenges developers face.**\\n![](https://framerusercontent.com/images/74oAzcFFyucgtX8DuJlf2Qjg.png)\\n![](https://framerusercontent.com/images/74oAzcFFyucgtX8DuJlf2Qjg.png)\\nOmar Khattab\\nOmar\\nResearcher @ DatabricksCreator of DSPy & ColBERT\\nDatabricks,DSPy, ColBERT\\nI’ve seen a lot of AI Devtools and Zenbase is solving a problem that everyone building with AI will have when going to production. **The best part is their product is so easy to use that it’s a no brainer.**\\n![](https://framerusercontent.com/images/T3S0rHph966Qqchw2MgPIXc6v8.png)\\n![](https://framerusercontent.com/images/T3S0rHph966Qqchw2MgPIXc6v8.png)\\nScott\\nCEOSuperfilter.ai⟨7⟩ (YC S24)\\nCEOSuperfilter.ai⟨7⟩ (YC S24)\\nWe were staying up until 3am trying to go from demo to production. **Zenbase came into the trenches with us to improve our evals from 10% to 91.6%.** It really felt like they were a part of our team.\\n![](https://framerusercontent.com/images/3K6y8TXl5MIEMy8xxpvyExzNG8.png)\\n![](https://framerusercontent.com/images/3K6y8TXl5MIEMy8xxpvyExzNG8.png)\\nTaeib\\nCofounderVera-Health.ai⟨8⟩ (YC S24)\\nDSPy\\'s optimizers had**40%+ better accuracy and saved 18 engineer hours** on a classification task vs. an expert prompter using 49 prompting techniques.\\n![](https://framerusercontent.com/images/ENrFbTChPF90jJMq36XCyXINy0.jpg)\\n![](https://framerusercontent.com/images/ENrFbTChPF90jJMq36XCyXINy0.jpg)\\nLearn Prompting\\nSponsored by OpenAI & Microsoft\\nSponsored byOpenAI & Microsoft\\n## Feel the Zen\\nDeclarative DX\\nZenbase\\'s AI functions let you focus on what you want, not how to prompt or which model to use.\\nAI that gets smarter all the time\\nAI that gets smarter with time\\nWe automate the prompt engineering and fine-tuning so you don\\'t have to figure it out.\\nNever get stuck prompt engineering again\\nWe\\'ll find the best prompt and model to maximize coverage of your test cases.\\nGet started⟨3⟩\\nGet started⟨3⟩\\n## Your Zen\\n## Masters\\n## Mains\\n![](https://framerusercontent.com/images/3hz23xf39zkNslAnJz0CL7htDtY.jpg)\\n![](https://framerusercontent.com/images/3hz23xf39zkNslAnJz0CL7htDtY.jpg)\\n#### Cyrus Nouroozi\\nFounder & CEO\\n• Core Contributor @ DSPy• UWaterloo Systems Design Eng\\n• Core Contributor @ DSPy• Honorary Researcher @ Nous Research• UWaterloo Systems Design\\n#### Amir Mehr\\nFounder & CTO\\n• Core Contributor @ DSPy\\n• Core Contributor @ DSPy• M.Sc. of CS @ UCalgary\\n• M.Sc. of CS @ UCalgary\\n![](https://framerusercontent.com/images/knNCfjP3xP6XzHqjZAJe1pXEQo.png)\\n![](https://framerusercontent.com/images/knNCfjP3xP6XzHqjZAJe1pXEQo.png)\\n##### Supported by angels from\\n![](https://framerusercontent.com/images/FduW42mW3zNopiaZ5D2aiCUXj4.png?scale-down-to=1024)\\n![](https://framerusercontent.com/images/FduW42mW3zNopiaZ5D2aiCUXj4.png?scale-down-to=1024)\\n![](https://framerusercontent.com/images/FduW42mW3zNopiaZ5D2aiCUXj4.png?scale-down-to=1024)\\n![](https://framerusercontent.com/images/FduW42mW3zNopiaZ5D2aiCUXj4.png?scale-down-to=1024)\\n![](https://framerusercontent.com/images/I6CHr1QyRHE1StVyQjZb4FM.png?scale-down-to=512)\\n![](https://framerusercontent.com/images/I6CHr1QyRHE1StVyQjZb4FM.png?scale-down-to=512)\\n![](https://framerusercontent.com/images/I6CHr1QyRHE1StVyQjZb4FM.png?scale-down-to=512)\\n![](https://framerusercontent.com/images/I6CHr1QyRHE1StVyQjZb4FM.png?scale-down-to=512)\\n![](https://framerusercontent.com/images/Qa1t9BWvW6ZYnfRO46WyjExkQfw.png)\\n![](https://framerusercontent.com/images/Qa1t9BWvW6ZYnfRO46WyjExkQfw.png)\\n![](https://framerusercontent.com/images/2YyB7Kp57Bk6YWwTiSxy59ExQ4.png?scale-down-to=2048)\\n![](https://framerusercontent.com/images/2YyB7Kp57Bk6YWwTiSxy59ExQ4.png?scale-down-to=2048)\\n![](https://framerusercontent.com/images/2YyB7Kp57Bk6YWwTiSxy59ExQ4.png?scale-down-to=2048)\\n![](https://framerusercontent.com/images/2YyB7Kp57Bk6YWwTiSxy59ExQ4.png?scale-down-to=2048)\\n![](https://framerusercontent.com/images/ersFObK2q8MSHqyAG9Odfy9BqFM.png?scale-down-to=512)\\n![](https://framerusercontent.com/images/ersFObK2q8MSHqyAG9Odfy9BqFM.png?scale-down-to=512)\\n![](https://framerusercontent.com/images/ersFObK2q8MSHqyAG9Odfy9BqFM.png?scale-down-to=512)\\n![](https://framerusercontent.com/images/ersFObK2q8MSHqyAG9Odfy9BqFM.png?scale-down-to=512)\\n![](https://framerusercontent.com/images/1keC13saAdCdbrzT4m2VfrIsg.png?scale-down-to=1024)\\n![](https://framerusercontent.com/images/1keC13saAdCdbrzT4m2VfrIsg.png?scale-down-to=1024)\\n![](https://framerusercontent.com/images/1keC13saAdCdbrzT4m2VfrIsg.png?scale-down-to=1024)\\n![](https://framerusercontent.com/images/1keC13saAdCdbrzT4m2VfrIsg.png?scale-down-to=1024)\\n## Find your Zen\\nOpen Source\\n##### Free Forever\\nOptimize your existing pipelines\\nIntegrates with your eval tooling\\nManual control\\nComplete control over prompts\\nMIT License\\nGitHub⟨9⟩\\nGitHub⟨9⟩\\nStartup\\n##### Starts at $1000/month\\nHosted API\\nContinual Optimization\\nDedicated Slack Channel\\nCustom Evaluators\\nSchedule a demo⟨6⟩\\nSchedule a demo⟨6⟩\\nEnterprise\\n##### Contact Us\\nSOCII / HIPAA\\nOn-prem deployment\\nDedicated Slack Channel\\nCustom Optimizers\\nContact us⟨6⟩\\nContact us⟨6⟩\\n#### Join the waitlist for our self-serve API\\n#### Join the waitlist for our self-serve API\\n#### FAQ\\nYou asked, we answered.\\nHow do you find the best prompt & model?\\nWe use AI to continuously experiment with prompts and models to figure out the most effective way to execute your function. We use algorithms developed in-house and those researched by our team at DSPy. Automated prompt engineering combined with expert prompting regularly leads to double digit percentage improvements over expert prompting alone.\\nDo you offer an on-premise solution / SOCII / HIPAA?\\nCan we start with a small POC and adopt Zenbase incrementally?\\nCan I export the prompt & model?\\n#### FAQ\\nYou asked, we answered.\\nHow do you find the best prompt & model?\\nDo you offer an on-premise solution / SOCII / HIPAA?\\nCan we start with a small POC and adopt Zenbase incrementally?\\nCan I export the prompt & model?\\n![](https://framerusercontent.com/images/NVRianiZNBN7MvixizmwH79MmM.png?scale-down-to=512)\\nSchedule a demo⟨6⟩\\nMade with ❤️ in San Francisco 🇺🇸 and Edmonton 🇨🇦.\\nCopyright 2024 Zenbase AI Inc.\\n[](https://zenbase.ai/<https:/github.com/zenbase-ai>)[](https://zenbase.ai/<https:/www.linkedin.com/company/zenbase-ai/>)\\n![](https://framerusercontent.com/images/NVRianiZNBN7MvixizmwH79MmM.png?scale-down-to=512)\\nSchedule a demo⟨6⟩\\nMade with ❤️ in San Francisco 🇺🇸 and Edmonton 🇨🇦.\\nCopyright 2024 Zenbase AI Inc.\\n[](https://zenbase.ai/<https:/github.com/zenbase-ai>)[](https://zenbase.ai/<https:/www.linkedin.com/company/zenbase-ai/>)\\n![](https://framerusercontent.com/images/NVRianiZNBN7MvixizmwH79MmM.png?scale-down-to=512)\\nSchedule a demo⟨6⟩\\nMade with ❤️ in San Francisco 🇺🇸 and Edmonton 🇨🇦.\\nCopyright 2024 Zenbase AI Inc.\\n[](https://zenbase.ai/<https:/github.com/zenbase-ai>)[](https://zenbase.ai/<https:/www.linkedin.com/company/zenbase-ai/>)\\n' references_markdown='\\n\\n## References\\n\\n⟨1⟩ https://www.ycombinator.com/launches/Lmp-zenbase-continuous-prompt-optimization-by-dspy-core-contributors/upvote_embed.svg/: ![Launch\\n⟨2⟩ https://zenbase.ai/<./#code-examples>: Code Examples\\n⟨3⟩ https://zenbase.ai/<./#get-started>: Get started\\n⟨4⟩ https://framerusercontent.com/images/BjbxD6JgnH7fgtOjApYgCVHrLc.png?scale-down-to=512: ![\\n⟨5⟩ https://zenbase.ai/<https:/github.com/zenbase-ai/core/tree/main/py>: GitHub\\n⟨6⟩ https://zenbase.ai/<https:/zenbase.typeform.com/early-access>: Schedule a demo\\n⟨7⟩ https://zenbase.ai/<https:/www.superfilter.ai/>: Superfilter.ai\\n⟨8⟩ https://zenbase.ai/<https:/vera-health.ai/>: Vera-Health.ai\\n⟨9⟩ https://zenbase.ai/<https:/github.com/zenbase-ai/core>: GitHub\\n' fit_markdown='' fit_html=''",
  "generated_description": "**Zenbase AI** is a fresh player in the optimization landscape for large language models (LLMs), founded in 2024 and proudly part of the Y Combinator S24 batch. Based in the vibrant tech hub of San Francisco, this lean startup, with its dedicated team of just two employees, is on a mission to simplify the complexities of prompt engineering and model selection for developers.\n\n### The Mission\nZenbase AI aims for \"continuous prompt optimization\" - harnessing the expertise of their core contributors from Stanford NLP's DSPy project, which is recognized as the leading framework for LLM optimization, utilized by giants like Meta, Microsoft, and Google. The founders noticed that while DSPy was powerful, its utility dropped off outside of academic settings. Zenbase is stepping in to change that by building a production-ready version that anyone can easily harness.\n\n### What They Do\nZenbase AI positions itself as a developer tool and cloud infrastructure service for those who expect perfection from their LLMs. Essentially, they handle the tedious and often frustrating tasks of prompt engineering for developers, enabling them to focus on what truly matters: actual programming.\n\nThey offer a range of solutions, from open-source options all the way up to enterprise-grade capabilities, including automated experimentation with prompts and models that maximize performance efficiently. Their tools let users continuously optimize their models, catering to a variety of use cases effectively—whether that’s vibe checks or transaction categorization.\n\n### Team and Support\nGuided by founders **Cyrus Nouroozi** (CEO) and **Amir Mehr** (CTO), both seasoned contributors to the DSPy project, Zenbase is backed by a notable Group Partner, **Diana Hu**. Their small but agile team plays into their advantage, allowing them to move fast and adapt quickly to user demands.\n\n### Customer Validation\nZenbase has attracted positive attention from early adopters and industry experts alike. Users have reported tremendous improvements: one client even increased their evaluation accuracy from 10% to 91.6% with Zenbase's help. Such testimonials illustrate their product's effectiveness and ease of use—qualities that are critical in the fast-evolving landscape of AI development tools.\n\n### Getting Started\nFor those looking to leverage Zenbase AI's offerings, options are flexible. They provide everything from a free, open-source version suitable for optimizing existing pipelines to more robust commercial plans starting at $1,000 per month.\n\nIn summary, Zenbase AI is all about unshackling developers from the complexities of prompt engineering and model selection, allowing them to concentrate on the core of their projects with smarter, automated assistance. If you’re in the AI development space and tired of wrestling with prompts, Zenbase might just be the solution you've been looking for. \n\n**Explore more on their website:** [Zenbase AI](https://zenbase.ai)"
}