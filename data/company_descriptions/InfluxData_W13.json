{
  "links": "https://www.ycombinator.com/companies/influxdata",
  "name": "InfluxData",
  "headline": "The platform for building and operating time series applications.",
  "batch": "W13",
  "description": "InfluxData, the creators of InfluxDB, delivers a modern Open Source Platform built from the ground up for analyzing metrics and events (time series data) for DevOps and IoT applications. Whether the data comes from humans, sensors, or machines, InfluxData empowers developers to build next-generation monitoring, analytics, and IoT applications faster, easier, and to scale delivering real business value quickly. Based in San Francisco, InfluxData customers include Autodesk, Cisco, eBay, and Coupa. Visit https://www.influxdata.com.",
  "activity_status": "Active",
  "website": "https://influxdata.com",
  "founded_date": 2012.0,
  "team_size": 210.0,
  "location": "San Francisco",
  "group_partner": null,
  "group_partner_yc": null,
  "company_linkedin": null,
  "company_twitter": null,
  "tags": "industry:analytics; industry:open-source; industry:time-series; industry:databases; location:san-francisco-bay-area",
  "founders": [
    {
      "name": "Paul Dix, Founder/CTO",
      "description": "Co-founder and CTO of InfluxData, the company behind InfluxDB, an open source time series database. Creator of NYC Machine Learning Meetup, author of Service Oriented Design with Ruby, and series editor of Addison Wesley's Data & Analytics book and video series.",
      "linkedin": "https://www.linkedin.com/in/pauldix/"
    }
  ],
  "status": true,
  "markdown": "raw_markdown='[Skip to content](https://influxdata.com/<#content>)\\n[ ![logo](https://influxdata.com/images/influxdata_full_white-f14e8966.svg) ](https://influxdata.com/</>)\\n[ ![logo](https://www.influxdata.com/images/influxdata_full_navy-a7ca2ff4.svg) ](https://influxdata.com/</>)\\nProducts \\n#### Products\\n[Fully Managed](https://influxdata.com/</products/influxdb-cloud/>)\\nSimplify and scale with cloud services\\n[ InfluxDB Cloud Serverless ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</products/influxdb-cloud/serverless/>) [ InfluxDB Cloud Dedicated ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</products/influxdb-cloud/dedicated/>)\\nSelf-Managed\\nFor organizations that need full control\\n[ InfluxDB Clustered ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</products/influxdb-clustered/>)\\nIntegrations\\nWorks well with the tools you love \\n[ Client Libraries ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</products/integrations/#tab2>) [ Lakehouse / Warehouse ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</features/open-data-access/>) [ Explore All ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</products/integrations/>)\\nRecommended Resources\\n[ Performance Comparisons ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</lp/oss-vs-new-engine/>) [ Find the Right Product ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</get-influxdb/>) [ Platform Overview ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</products/influxdb-overview/>) [ InfluxDB 3 Enterprise ALPHA ](https://influxdata.com/</products/influxdb-3-enterprise/>)\\nUse Cases \\n#### Use Cases\\n##### Data Workloads\\nReal-Time Analytics\\nCollect, analyze, and predict in real time\\n[ Infrastructure Monitoring ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</resources/influxdb-for-infrastructure-monitoring/>) [ Real-Time Monitoring ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</use-cases/real-time-analytics/>) [ DevOps Monitoring ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/devops-monitoring/>) [ Security Event Monitoring ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/security-event-monitoring-with-influxdb/>) [ Application Monitoring ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/application-performance-monitoring-apm/>) [ Gaming Analytics ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/gaming/>)\\nNetwork & Device Telemetry\\nModernize telemetry data collection and analysis\\n[ Network Monitoring ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/network-monitoring/>) [ Aerospace Monitoring ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/by-industries/aerospace-and-satellites/>) [ IoT Analytics ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</use-cases/iot/>)\\nModern Data Historian\\nModernize operations with time series data\\n[ Renewable Energy Monitoring ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/renewable-energy/>) [ Process Modernization ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/industrial-iot/>) [ Digital Transformation ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</customers/iot-data-platform/>) [ Predictive Maintenance ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/predictive-maintenance/>)\\nMachine Learning & AI\\nTurn sensor data into actionable intelligence\\n[ Predictive Analytics ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</blog/predictive-analytics-using-time-series-database/>) [ ML with Lakehouses ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</features/open-data-access/>)\\n[ ![icon](https://images.ctfassets.net/o7xu9whrs0u9/5jg5ny55E5TGxRZ3qXE953/972a5eb5e31e9dbcdf4fbf34f5079c69/icons8-electronics.svg) Explore All Use Cases ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/>) [ ![icon](https://images.ctfassets.net/o7xu9whrs0u9/20KtkkDq0zlSoYAfYRMns/815c8fecdd26d4cd3a9ca12786ca75aa/icon-journey.svg) Customer Stories ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</customers/>) [ ![icon](https://images.ctfassets.net/o7xu9whrs0u9/4ylr5sWS3lVaaoHzZ3uqMB/e5d30fe9c4652c34ac6fc7119968df87/icons-workflow.svg) See how Ter√©ga reduced total cost of ownership by 50% ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</customer/terega/>)\\nIndustries\\n[ Aerospace ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/by-industries/aerospace-and-satellites/>) [ Energy & Utilities ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/by-industries/energy-and-utilities/>) [ Financial Services ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/fintech/>) [ Industrial IoT ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/industrial-iot/>) [ Consumer IoT ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/consumer-iot/>) [ Manufacturing ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/by-industries/manufacturing/>) [ Gaming ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/gaming/>) [ Telecommunications ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/by-industries/telecommunications/>)\\nDevelopers \\n#### Developers\\nLearn\\n[ Developer Resources ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</_resources/>) [ Blog ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</blog/>) [ Customers ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</customers/>) [ Partners ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</partners/>) [ Support ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/<https:/support.influxdata.com/s/>) [ Webinars ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</_resources/>)\\nBuild\\n[ Documentation ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/<https:/docs.influxdata.com/>) [ InfluxDB OSS ALPHA ](https://influxdata.com/</products/influxdb/>) [ Telegraf Data Collection ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</time-series-platform/telegraf/>) [ AWS ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</influxdb-cloud-on-aws/>) [ Integrations ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</products/integrations/>)\\nConnect\\n[ InfluxDB University ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</university/>) [ Community ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</community/>) [ Events and Live Training ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</events/>)\\nFeatured Resources\\n[ InfluxDB 3 Open Source Public Alpha ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</products/influxdb3-public-alpha/>) [ Streamline Migration to InfluxDB 3  ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</blog/sync-influxdb-v2-v3-quix/>) [ Getting Started with MING Stack for IoT ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</resources/getting-started-with-ming-stack-for-iot/>)\\n[ Pricing ](https://influxdata.com/</influxdb-pricing/>)\\n[ Contact Us ](https://influxdata.com/</contact-sales/>)\\nSign In \\n[ Log in to InfluxDB Cloud 2.0 ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/<https:/cloud2.influxdata.com/login>) [ Log in to InfluxDB Enterprise ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/<https:/portal.influxdata.com/users/sign_in>) [ Log in to InfluxDB Cloud 1.x ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/<https:/cloud.influxdata.com/>)\\n[ Start Now ](https://influxdata.com/</get-influxdb/>)\\n[Start Now](https://influxdata.com/</get-influxdb/>)\\nProducts \\nProducts\\n##### [Fully Managed](https://influxdata.com/</products/influxdb-cloud/>)\\nSimplify and scale with Cloud services\\n[ InfluxDB Cloud Serverless ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</products/influxdb-cloud/serverless/>) [ InfluxDB Cloud Dedicated ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</products/influxdb-cloud/dedicated/>)\\n##### Self-Managed\\nFor organizations that need full control\\n[ InfluxDB Clustered ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</products/influxdb-clustered/>)\\n##### Integrations\\nWorks well with the tools you love\\n[ Client Libraries ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</products/integrations/#tab2>) [ Lakehouse / Warehouse ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</features/open-data-access/>) [ Explore All ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</products/integrations/>)\\n##### Recommended Resources\\n[ Performance Comparisons ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</lp/oss-vs-new-engine/>) [ Find the Right Product ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</get-influxdb/>) [ Platform Overview ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</products/influxdb-overview/>) [ InfluxDB 3 Enterprise ALPHA ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</products/influxdb-3-enterprise/>)\\nUse Cases \\nUse Cases\\n#### Data Workloads\\n##### Real-Time Analytics\\nCollect, analyze, and predict in real time\\n[ Infrastructure Monitoring ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</resources/influxdb-for-infrastructure-monitoring/>) [ Real-Time Monitoring ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</use-cases/real-time-analytics/>) [ DevOps Monitoring ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/devops-monitoring/>) [ Security Event Monitoring ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/security-event-monitoring-with-influxdb/>) [ Application Monitoring ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/application-performance-monitoring-apm/>) [ Gaming Analytics ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/gaming/>)\\n##### Network & Device Telemetry\\nModernize telemetry data collection and analysis\\n[ Network Monitoring ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/network-monitoring/>) [ Aerospace Monitoring ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/by-industries/aerospace-and-satellites/>) [ IoT Analytics ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</use-cases/iot/>)\\n##### Modern Data Historian\\nModernize operations with time series data \\n[ Renewable Energy Monitoring ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/renewable-energy/>) [ Process Modernization ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/industrial-iot/>) [ Digital Transformation ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</customers/iot-data-platform/>) [ Predictive Maintenance ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/predictive-maintenance/>)\\n##### Machine Learning & AI\\nTurn sensor data into actionable intelligence \\n[ Predictive Analytics ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</blog/predictive-analytics-using-time-series-database/>) [ ML with Lakehouses ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</features/open-data-access/>)\\n##### Industries\\n[ Aerospace ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/by-industries/aerospace-and-satellites/>) [ Energy & Utilities ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/by-industries/energy-and-utilities/>) [ Financial Services ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/fintech/>) [ Industrial Iot ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/industrial-iot/>) [ Consumer IoT ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/consumer-iot/>) [ Manufacturing ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/by-industries/manufacturing/>) [ Gaming ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/gaming/>) [ Telecommunications ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/by-industries/telecommunications/>)\\n[ ![icon](https://images.ctfassets.net/o7xu9whrs0u9/5jg5ny55E5TGxRZ3qXE953/972a5eb5e31e9dbcdf4fbf34f5079c69/icons8-electronics.svg) Use Cases ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</solutions/>) [ ![icon](https://images.ctfassets.net/o7xu9whrs0u9/20KtkkDq0zlSoYAfYRMns/815c8fecdd26d4cd3a9ca12786ca75aa/icon-journey.svg) Customer Stories ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</customers/>) [ ![icon](https://images.ctfassets.net/o7xu9whrs0u9/4ylr5sWS3lVaaoHzZ3uqMB/e5d30fe9c4652c34ac6fc7119968df87/icons-workflow.svg) See how Ter√©ga reduced total cost of ownership by 50% ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</customer/terega/>)\\nDevelopers \\nDevelopers\\n##### Learn\\n[ Developer Resources ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</_resources/>) [ Blog ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</blog/>) [ Customers ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</customers/>) [ Partners ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</partners/>) [ Support ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/<https:/support.influxdata.com/s/>) [ Webinars ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</_resources/>)\\n##### Build\\n[ Documentation ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/<https:/docs.influxdata.com/>) [ InfluxDB OSS ALPHA ](https://influxdata.com/</products/influxdb/>) [ Telegraf Data Collection ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</time-series-platform/telegraf/>) [ AWS ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</influxdb-cloud-on-aws/>) [ Integrations ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</products/integrations/>)\\n##### Connect\\n[ InfluxDB University ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</university/>) [ Community ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</community/>) [ Events and Live Training ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</events/>)\\n##### Featured Resources\\n[ InfluxDB 3 Open Source Public Alpha ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</products/influxdb3-public-alpha/>) [ Streamline Migration to InfluxDB 3 ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</blog/sync-influxdb-v2-v3-quix/>) [ Getting Started with MING Stack for IoT ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/</resources/getting-started-with-ming-stack-for-iot/>)\\n[Pricing](https://influxdata.com/</influxdb-pricing/>)\\n[Contact Us](https://influxdata.com/</contact-sales/>)\\nSign In \\nSign In\\n[ Log in to InfluxDB Cloud 2.0 ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/<https:/cloud2.influxdata.com/login>) [ Log in to InfluxDB Enterprise ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/<https:/portal.influxdata.com/users/sign_in>) [ Log in to InfluxDB Cloud 1.x ![arrow](https://influxdata.com/images/gr-arrow-f1ef722d.svg) ](https://influxdata.com/<https:/cloud.influxdata.com/>)\\n**Now available:** Amazon Timestream for InfluxDB Read Replicas add-on [Learn More ](https://influxdata.com/</blog/amazon-timestream-influxdb-read-replicas/>) [Learn More](https://influxdata.com/</blog/influxdb3-open-source-public-alpha-jan-27>)\\n## The leading platform for time series data\\nJoin the millions of developers using InfluxDB to predict, respond, and adapt in real-time.\\n[Get started with InfluxDB ](https://influxdata.com/</get-influxdb/>)\\n![Logo 1](https://images.ctfassets.net/o7xu9whrs0u9/4iAxow4OmfCgKqhPXxV4Zp/f45135d83b967c3e09224c1993ccaf09/tesla-logo.png)\\n![Logo 1](https://images.ctfassets.net/o7xu9whrs0u9/23mcsmtwSLhHVevn3sI0CT/38018bf7bb7a61f31149867029b698c6/Honeywell-logo.png)\\n![Logo 1](https://images.ctfassets.net/o7xu9whrs0u9/37PKOBf6wN3WSNkt76J00/9bb4e64a7b0cd1ec5718101067fcd272/intuit-logo-1.png)\\n![nvidia](https://images.ctfassets.net/o7xu9whrs0u9/5xsw9qWvmGJE87Iisf1wPj/62073b98e1c2a2e20354c92eb1383cf1/nvidia-logo.png)\\n![Capital-One](https://images.ctfassets.net/o7xu9whrs0u9/6sU6VV4Xw7HScyLgTp0C1O/6527f80fcb226b70bab138f579c5fd1e/Capital-One-logo-2.png)\\n![accenture](https://images.ctfassets.net/o7xu9whrs0u9/5orMeJlnN0Qkq49TkfOWJo/bdb9441af5af5fdcffd4fac6314bd50b/ibm-logo.png)\\n![siemence](https://images.ctfassets.net/o7xu9whrs0u9/2XJwEwQQFyRt5J4nqCXHQM/d88815b4a5120e1f2e0573fc7613cc80/siemence-logo.png)\\n![salesforce](https://images.ctfassets.net/o7xu9whrs0u9/36ozeV4yYSt2rGjp1NKUxf/1bdeeecf434dd5cadb0af4771ad97082/salesforce-logo.png)\\n![PTC](https://images.ctfassets.net/o7xu9whrs0u9/4vaSq5WKwTlgWTxeDaSpSO/7b70daa7c9c677e963fa8e7472dc46c8/ptc-logo.png)\\n![citrix](https://images.ctfassets.net/o7xu9whrs0u9/6KwshpKe2UAKN1V1OWCseg/0226a1e50b2b63d3ab944174883af333/citrix-logo-new.png)\\n![MuleSoft](https://images.ctfassets.net/o7xu9whrs0u9/56Y00XftW2RnPmQPdrsjhx/d0e38fc9a5f6ef6512b345cda7ceae83/mulesoft-logo.png)\\n![Logo 1](https://images.ctfassets.net/o7xu9whrs0u9/4iAxow4OmfCgKqhPXxV4Zp/f45135d83b967c3e09224c1993ccaf09/tesla-logo.png)\\n![Logo 1](https://images.ctfassets.net/o7xu9whrs0u9/23mcsmtwSLhHVevn3sI0CT/38018bf7bb7a61f31149867029b698c6/Honeywell-logo.png)\\n![Logo 1](https://images.ctfassets.net/o7xu9whrs0u9/37PKOBf6wN3WSNkt76J00/9bb4e64a7b0cd1ec5718101067fcd272/intuit-logo-1.png)\\n![nvidia](https://images.ctfassets.net/o7xu9whrs0u9/5xsw9qWvmGJE87Iisf1wPj/62073b98e1c2a2e20354c92eb1383cf1/nvidia-logo.png)\\n![Capital-One](https://images.ctfassets.net/o7xu9whrs0u9/6sU6VV4Xw7HScyLgTp0C1O/6527f80fcb226b70bab138f579c5fd1e/Capital-One-logo-2.png)\\n![accenture](https://images.ctfassets.net/o7xu9whrs0u9/5orMeJlnN0Qkq49TkfOWJo/bdb9441af5af5fdcffd4fac6314bd50b/ibm-logo.png)\\n![siemence](https://images.ctfassets.net/o7xu9whrs0u9/2XJwEwQQFyRt5J4nqCXHQM/d88815b4a5120e1f2e0573fc7613cc80/siemence-logo.png)\\n![salesforce](https://images.ctfassets.net/o7xu9whrs0u9/36ozeV4yYSt2rGjp1NKUxf/1bdeeecf434dd5cadb0af4771ad97082/salesforce-logo.png)\\n![PTC](https://images.ctfassets.net/o7xu9whrs0u9/4vaSq5WKwTlgWTxeDaSpSO/7b70daa7c9c677e963fa8e7472dc46c8/ptc-logo.png)\\n![citrix](https://images.ctfassets.net/o7xu9whrs0u9/6KwshpKe2UAKN1V1OWCseg/0226a1e50b2b63d3ab944174883af333/citrix-logo-new.png)\\n![MuleSoft](https://images.ctfassets.net/o7xu9whrs0u9/56Y00XftW2RnPmQPdrsjhx/d0e38fc9a5f6ef6512b345cda7ceae83/mulesoft-logo.png)\\n## Developers choose InfluxDB\\nMore downloads, more open source users, and a stronger community than any other time series database in the world.\\n1B+\\nDownloads of InfluxDB via Docker\\n1M+\\nOpen source instances live today\\n5B+\\nDownloads of InfluxData‚Äôs Telegraf\\n2,800+\\nContributors\\n#1\\nTime series database Source: DB Engines\\n## Why InfluxDB\\nManage high-volume, high-velocity data without sacrificing performance.\\n![046-abstract shape-hl](https://images.ctfassets.net/o7xu9whrs0u9/7vIWOBJPomIhF44RF7KIuJ/f10b12438fc99eb0cd625fe67ed2030c/icons-rotation.svg)\\n#### Unmatched performance at scale\\nManage millions of time series data points per second without limits or caps.\\n![046-abstract shape-hl](https://images.ctfassets.net/o7xu9whrs0u9/4ylr5sWS3lVaaoHzZ3uqMB/e5d30fe9c4652c34ac6fc7119968df87/icons-workflow.svg)\\n#### Run where you need it\\nRun at any scale in any environment: in the cloud, on-prem, or at the edge.\\n![icon-sql](https://images.ctfassets.net/o7xu9whrs0u9/6Jmh507gQ1XKLH9d6URyu3/68c0527828478181c1cdb31398bea11e/cabinet.svg)\\n#### Build with the tools you love\\nEasily connect to your tech stack using data standards and 300+ integrations.\\n## Engineered for the entire lifecycle of time series data at a lower TCO\\nHigh-Speed Ingest\\nReal-Time Querying with SQL\\nBest-in-Category Compression\\nBulk Data Eviction and Transfer\\n[See ways to get started ](https://influxdata.com/<https:/www.influxdata.com/get-influxdb/>)\\n## Why InfluxDB\\nManage high-volume, high-velocity data without sacrificing performance.\\n![046-abstract shape-hl](https://images.ctfassets.net/o7xu9whrs0u9/4qE3t6JQWHMBcfeZbZgqZq/213e7ef9b150f356709774ca3862165a/icon-pie_chart.svg)\\n#### Single Datastore\\nRun analytics across multiple workload types with a single purpose-built platform.\\n![046-abstract shape-hl](https://images.ctfassets.net/o7xu9whrs0u9/4ATyk8p1BD6TIn91I1eY72/63df388ece3ec7d4b499c61de016c94c/icon-sheets.svg)\\n#### Columnar Design\\nScales without limits with built-in storage and query performance optimization.\\n![icon-sql](https://images.ctfassets.net/o7xu9whrs0u9/2Al1gGTM0gi9hqH9k8bKuJ/a28852d4d10903b5e03123a4655267e5/icon-sql.svg)\\n#### Native SQL\\nQuery directly with InfluxDB using standard SQL.\\n![icon-journey](https://images.ctfassets.net/o7xu9whrs0u9/5PubM7CweO2Vexag6c2LZ4/f6a786ce5f3af2c68de187139a2e1582/icon-looking-glass.svg)\\n#### Real-Time Query\\nSub-second query response on leading-edge data.\\n![046-abstract shape-hl](https://images.ctfassets.net/o7xu9whrs0u9/5EsNpLJpz3jSnfHJMQYJIT/922a32d49f9b66b0d8ad9b443a82ccf9/icon__infinite.svg)\\n#### Unlimited Cardinality\\nAnalyze billions of time series data points per second without limitations or caps.\\n![046-abstract shape-hl](https://images.ctfassets.net/o7xu9whrs0u9/6Jmh507gQ1XKLH9d6URyu3/68c0527828478181c1cdb31398bea11e/cabinet.svg)\\n#### Superior Data Compression\\nMaximize data compression to store more data at a fraction of the cost.\\n## Developers choose InfluxDB\\nMore [downloads](https://influxdata.com/</products/influxdb/>), more open source users, and a larger community than any other time series database in the world.\\n## 1B+\\nDownloads of InfluxDB via Docker\\n1M+\\nOpen source instances live today\\n2,800+\\nContributors\\n5B+\\nDownloads of InfluxData‚Äôs Telegraf\\n#1\\nTime series database Source: DB Engines\\n### Code in the languages you love\\nNo need to conform to a new language or technology. InfluxDB supports multiple programming and query languages, with client libraries and integrations to make things simple, all powered by a RESTful API. \\n[See All Integrations](https://influxdata.com/</products/integrations/>)\\n![Python](https://influxdata.com/images/home/python-8dfd7e58.png) ![Swift](https://influxdata.com/images/home/swift-585ceff4.png) ![JavaScript](https://influxdata.com/images/home/js-bce7444a.png) ![Java](https://influxdata.com/images/home/java-48cc7e45.png) ![Ruby](https://influxdata.com/images/home/ruby-1926e8fa.png) ![Scala](https://influxdata.com/images/home/scala-4557ff11.png) ![Go](https://influxdata.com/images/home/go-leng-55e8bffc.png) ![C Sharp](https://influxdata.com/images/home/csharp-3e3c2a3e.png) ![R](https://influxdata.com/images/home/rlang-bbb152f4.png)\\nReadWrite\\n```\\n         from influxdb_client_3 import InfluxDBClient3\\nimport pandas\\nimport os\\ndatabase = os.getenv(\\'INFLUX_DATABASE\\')\\ntoken = os.getenv(\\'INFLUX_TOKEN\\')\\nhost=\"https://us-east-1-1.aws.cloud2.influxdata.com\"\\ndef querySQL():\\n client = InfluxDBClient3(host, database=database, token=token)\\n table = client.query(\\n  \\'\\'\\'SELECT\\n    room,\\n    DATE_BIN(INTERVAL \\'1 day\\', time) AS _time,\\n    AVG(temp) AS temp,\\n    AVG(hum) AS hum,\\n    AVG(co) AS co\\n   FROM home\\n   WHERE time >= now() - INTERVAL \\'90 days\\'\\n   GROUP BY room, _time\\n   ORDER BY _time\\'\\'\\'\\n )\\n print(table.to_pandas().to_markdown())\\n client.close()\\n \\nquerySQL()\\n         \\nCopy\\n\\n```\\nc\\n```\\n         from influxdb_client_3 import InfluxDBClient3\\nimport os\\ndatabase = os.getenv(\\'INFLUX_DATABASE\\')\\ntoken = os.getenv(\\'INFLUX_TOKEN\\')\\nhost=\"https://us-east-1-1.aws.cloud2.influxdata.com\"\\ndef write_line_protocol():\\n client = InfluxDBClient3(host, database=database, token=token)\\n \\n record = \"home,room=Living\\\\\\\\ Room temp=22.2,hum=36.4,co=17i\"\\n \\n print(\"Writing record:\", record )\\n client.write(record)\\n \\n client.close()\\nwrite_line_protocol()\\n\\n         \\nCopy\\n\\n```\\nc\\n```\\n         @main\\nstruct QueryCpuData: AsyncParsableCommand {\\n @Option(name: .shortAndLong, help: \"The name or id of the bucket destination.\")\\n private var bucket: String\\n @Option(name: .shortAndLong, help: \"The name or id of the organization destination.\")\\n private var org: String\\n @Option(name: .shortAndLong, help: \"Authentication token.\")\\n private var token: String\\n @Option(name: .shortAndLong, help: \"HTTP address of InfluxDB.\")\\n private var url: String\\n}\\nextension QueryCpuData {\\n mutating func run() async throws {\\n  //\\n  // Initialize Client with default Bucket and Organization\\n  //\\n  let client = InfluxDBClient(\\n      url: url,\\n      token: token,\\n      options: InfluxDBClient.InfluxDBOptions(bucket: bucket, org: org))\\n  // Flux query\\n  let query = \"\"\"\\n        from(bucket: \"\\\\(self.bucket)\")\\n          |> range(start: -10m)\\n          |> filter(fn: (r) => r[\"_measurement\"] == \"cpu\")\\n          |> filter(fn: (r) => r[\"cpu\"] == \"cpu-total\")\\n          |> filter(fn: (r) => r[\"_field\"] == \"usage_user\" or r[\"_field\"] == \"usage_system\")\\n          |> last()\\n        \"\"\"\\n  print(\"\\\\nQuery to execute:\\\\n\\\\(query)\\\\n\")\\n  let response = try await client.queryAPI.queryRaw(query: query)\\n  let csv = String(decoding: response, as: UTF8.self)\\n  print(\"InfluxDB response: \\\\(csv)\")\\n  client.close()\\n }\\n}\\n         \\nCopy\\n\\n```\\nc\\n```\\n         import ArgumentParser\\nimport Foundation\\nimport InfluxDBSwift\\nimport InfluxDBSwiftApis\\n@main\\nstruct WriteData: AsyncParsableCommand {\\n @Option(name: .shortAndLong, help: \"The name or id of the bucket destination.\")\\n private var bucket: String\\n @Option(name: .shortAndLong, help: \"The name or id of the organization destination.\")\\n private var org: String\\n @Option(name: .shortAndLong, help: \"Authentication token.\")\\n private var token: String\\n @Option(name: .shortAndLong, help: \"HTTP address of InfluxDB.\")\\n private var url: String\\n}\\nextension WriteData {\\n mutating func run() async throws {\\n  //\\n  // Initialize Client with default Bucket and Organization\\n  //\\n  let client = InfluxDBClient(\\n      url: url,\\n      token: token,\\n      options: InfluxDBClient.InfluxDBOptions(bucket: bucket, org: org))\\n  //\\n  // Record defined as Data Point\\n  //\\n  let recordPoint = InfluxDBClient\\n      .Point(\"demo\")\\n      .addTag(key: \"type\", value: \"point\")\\n      .addField(key: \"value\", value: .int(2))\\n  //\\n  // Record defined as Data Point with Timestamp\\n  //\\n  let recordPointDate = InfluxDBClient\\n      .Point(\"demo\")\\n      .addTag(key: \"type\", value: \"point-timestamp\")\\n      .addField(key: \"value\", value: .int(2))\\n      .time(time: .date(Date()))\\n  try await client.makeWriteAPI().write(points: [recordPoint, recordPointDate])\\n  print(\"Written data:\\\\n\\\\n\\\\([recordPoint, recordPointDate].map { \"\\\\t- \\\\($0)\" }.joined(separator: \"\\\\n\"))\")\\n  print(\"\\\\nSuccess!\")\\n  client.close()\\n }\\n}\\n         \\nCopy\\n\\n```\\nc\\n```\\n         import {InfluxDBClient} from \\'@influxdata/influxdb3-client\\'\\nimport {tableFromArrays} from \\'apache-arrow\\';\\nconst database = process.env.INFLUX_DATABASE;\\nconst token = process.env.INFLUX_TOKEN;\\nconst host = \"https://us-east-1-1.aws.cloud2.influxdata.com\";\\nasync function main() {\\n  const client = new InfluxDBClient({host, token})\\n  const query = `\\n  SELECT\\n   room,\\n   DATE_BIN(INTERVAL \\'1 day\\', time) AS _time,\\n   AVG(temp) AS temp,\\n   AVG(hum) AS hum,\\n   AVG(co) AS co\\n  FROM home\\n  WHERE time >= now() - INTERVAL \\'90 days\\'\\n  GROUP BY room, _time\\n  ORDER BY _time\\n  `\\n  const result = await client.query(query, database)\\n  const data = {room: [], day: [], temp: []}\\n  for await (const row of result) {\\n   data.day.push(new Date(row._time).toISOString())\\n   data.room.push(row.room)\\n   data.temp.push(row.temp)\\n  }\\n  console.table([...tableFromArrays(data)])\\n  client.close()\\n}\\nmain()\\n         \\nCopy\\n\\n```\\nc\\n```\\n         import {InfluxDBClient} from \\'@influxdata/influxdb3-client\\'\\nconst database = process.env.INFLUX_DATABASE;\\nconst token = process.env.INFLUX_TOKEN;\\nconst host = \"https://us-east-1-1.aws.cloud2.influxdata.com\";\\nasync function main() {\\n  const client = new InfluxDBClient({host, token})\\n  const record = \"home,room=Living\\\\\\\\ Room temp=22.2,hum=36.4,co=17i\"\\n  await client.write(record, database)\\n  client.close()\\n}\\nmain()\\n         \\nCopy\\n\\n```\\nc\\n```\\n         package com.influxdb3.examples;\\nimport com.influxdb.v3.client.InfluxDBClient;\\nimport java.util.stream.Stream;\\npublic final class Query {\\n  private Query() {\\n    //not called\\n  }\\n  /**\\n   * @throws Exception\\n   */\\n  public static void main() throws Exception {\\n    final String hostUrl = \"https://us-east-1-1.aws.cloud2.influxdata.com\";\\n    final char[] authToken = (System.getenv(\"INFLUX_TOKEN\")).toCharArray();\\n    final String database = System.getenv(\"INFLUX_DATABASE\");\\n    try (InfluxDBClient client = InfluxDBClient.getInstance(hostUrl, authToken, database)) {\\n      String sql = \"\"\"\\n        SELECT\\n          room,\\n          DATE_BIN(INTERVAL \\'1 day\\', time) AS _time,\\n          AVG(temp) AS temp, AVG(hum) AS hum, AVG(co) AS co\\n        FROM home\\n        WHERE time >= now() - INTERVAL \\'90 days\\'\\n        GROUP BY room, _time\\n        ORDER BY _time\"\"\";\\n      String layoutHeading = \"| %-16s | %-12s | %-6s |%n\";\\n      System.out.printf(\"--------------------------------------------------------%n\");\\n      System.out.printf(layoutHeading, \"day\", \"room\", \"temp\");\\n      System.out.printf(\"--------------------------------------------------------%n\");\\n      String layout = \"| %-16s | %-12s | %.2f |%n\";\\n      try (Stream stream = client.query(sql)) {\\n        stream.forEach(row -> System.out.printf(layout, row[1], row[0], row[2]));\\n      }\\n    }\\n  }\\n}\\n         \\nCopy\\n\\n```\\nc\\n```\\n         package com.influxdb3.examples;\\nimport com.influxdb.v3.client.InfluxDBClient;\\npublic final class Write {\\n  public static void main() throws Exception {\\n    final String hostUrl = \"https://us-east-1-1.aws.cloud2.influxdata.com\";\\n    final char[] authToken = (System.getenv(\"INFLUX_TOKEN\")).toCharArray();\\n    final String database = System.getenv(\"INFLUX_DATABASE\");\\n    try (InfluxDBClient client = InfluxDBClient.getInstance(hostUrl, authToken, database)) {\\n      String record = \"home,room=Living\\\\\\\\ Room temp=22.2,hum=36.4,co=17i\";\\n      System.out.printf(\"Write record: %s%n\", record);\\n      client.writeRecord(record);\\n    }\\n  }\\n}\\n         \\nCopy\\n\\n```\\nc\\n```\\n         InfluxDB2::Client.use(\\'https://localhost:8086\\', \\'my-token\\', org: \\'my-org\\') do |client|\\n result = client\\n  .create_query_api\\n  .query_raw(query: \\'from(bucket:\"my-bucket\") |> range(start: 1970-01-01) |> last()\\')\\n puts result\\nend\\n         \\nCopy\\n\\n```\\nc\\n```\\n         InfluxDB2::Client.use(\\'https://localhost:8086\\', \\'my-token\\',\\n           bucket: \\'my-bucket\\',\\n           org: \\'my-org\\',\\n           precision: InfluxDB2::WritePrecision::NANOSECOND) do |client|\\n write_api = client.create_write_api\\n write_api.write(data: \\'h2o,location=west value=33i 15\\')\\nend\\n         \\nCopy\\n\\n```\\nc\\n```\\n         package example\\nimport org.apache.pekko.actor.ActorSystem\\nimport org.apache.pekko.stream.scaladsl.Sink\\nimport com.influxdb.client.scala.InfluxDBClientScalaFactory\\nimport com.influxdb.query.FluxRecord\\nimport scala.concurrent.Await\\nimport scala.concurrent.duration.Duration\\nobject InfluxDB2ScalaExample {\\n implicit val system: ActorSystem = ActorSystem(\"it-tests\")\\n def main(args: Array[String]): Unit = {\\n  val influxDBClient = InfluxDBClientScalaFactory\\n   .create(\"http://localhost:8086\", \"my-token\".toCharArray, \"my-org\")\\n  val fluxQuery = (\"from(bucket: \\\\\"my-bucket\\\\\")\\\\n\"\\n   + \" |> range(start: -1d)\"\\n   + \" |> filter(fn: (r) => (r[\\\\\"_measurement\\\\\"] == \\\\\"cpu\\\\\" and r[\\\\\"_field\\\\\"] == \\\\\"usage_system\\\\\"))\")\\n  //Result is returned as a stream\\n  val results = influxDBClient.getQueryScalaApi().query(fluxQuery)\\n  //Example of additional result stream processing on client side\\n  val sink = results\\n   //filter on client side using `filter` built-in operator\\n   .filter(it => \"cpu0\" == it.getValueByKey(\"cpu\"))\\n   //take first 20 records\\n   .take(20)\\n   //print results\\n   .runWith(Sink.foreach[FluxRecord](it => println(s\"Measurement: ${it.getMeasurement}, value: ${it.getValue}\")\\n   ))\\n  // wait to finish\\n  Await.result(sink, Duration.Inf)\\n  influxDBClient.close()\\n  system.terminate()\\n }\\n}\\n         \\nCopy\\n\\n```\\nc\\n```\\n           \\npackage com.influxdb.client.scala.internal\\nimport org.apache.pekko.Done\\nimport org.apache.pekko.stream.scaladsl.{Flow, Keep, Sink, Source}\\nimport com.influxdb.client.InfluxDBClientOptions\\nimport com.influxdb.client.domain.WritePrecision\\nimport com.influxdb.client.internal.{AbstractWriteBlockingClient, AbstractWriteClient}\\nimport com.influxdb.client.scala.WriteScalaApi\\nimport com.influxdb.client.service.WriteService\\nimport com.influxdb.client.write.{Point, WriteParameters}\\nimport javax.annotation.Nonnull\\nimport scala.collection.immutable.ListMap\\nimport scala.concurrent.Future\\nimport scala.jdk.CollectionConverters._\\nclass WriteScalaApiImpl(@Nonnull service: WriteService, @Nonnull options: InfluxDBClientOptions)\\n extends AbstractWriteBlockingClient(service, options) with WriteScalaApi {\\n override def writeRecord(precision: Option[WritePrecision], bucket: Option[String], org: Option[String]): Sink[String, Future[Done]] = {\\n  Flow[String]\\n   .map(record => Seq(new AbstractWriteClient.BatchWriteDataRecord(record)))\\n   .toMat(Sink.foreach(batch => writeHttp(precision, bucket, org, batch)))(Keep.right)\\n }\\n override def writeRecords(precision: Option[WritePrecision], bucket: Option[String], org: Option[String]): Sink[Seq[String], Future[Done]] = {\\n  writeRecords(toWriteParameters(precision, bucket, org))\\n }\\n override def writeRecords(parameters: WriteParameters): Sink[Seq[String], Future[Done]] = {\\n  Flow[Seq[String]]\\n   .map(records => records.map(record => new AbstractWriteClient.BatchWriteDataRecord(record)))\\n   .toMat(Sink.foreach(batch => writeHttp(parameters, batch)))(Keep.right)\\n }\\n\\n override def writePoint(bucket: Option[String], org: Option[String]): Sink[Point, Future[Done]] = {\\n  Flow[Point]\\n   .map(point => (point.getPrecision, Seq(new AbstractWriteClient.BatchWriteDataPoint(point, options))))\\n   .toMat(Sink.foreach(batch => writeHttp(Some(batch._1), bucket, org, batch._2)))(Keep.right)\\n }\\n override def writePoints(bucket: Option[String], org: Option[String]): Sink[Seq[Point], Future[Done]] = {\\n  writePoints(new WriteParameters(bucket.orNull, org.orNull, null, null))\\n }\\n override def writePoints(parameters: WriteParameters): Sink[Seq[Point], Future[Done]] = {\\n  Flow[Seq[Point]]\\n   // create ordered Map\\n   .map(records => records.foldRight(ListMap.empty[WritePrecision, Seq[Point]]) {\\n    case (point, map) => map.updated(point.getPrecision, point +: map.getOrElse(point.getPrecision, Seq()))\\n   }.toList.reverse)\\n   .map(grouped => grouped.map(group => (group._1, group._2.map(point => new AbstractWriteClient.BatchWriteDataPoint(point, options)))))\\n   .flatMapConcat(batches => Source(batches))\\n   .toMat(Sink.foreach(batch => writeHttp(parameters.copy(batch._1, options), batch._2)))(Keep.right)\\n }\\n override def writeMeasurement[M](precision: Option[WritePrecision], bucket: Option[String], org: Option[String]): Sink[M, Future[Done]] = {\\n  Flow[M]\\n   .map(measurement => {\\n    val parameters = toWriteParameters(precision, bucket, org)\\n    Seq(toMeasurementBatch(measurement, parameters.precisionSafe(options)))\\n   })\\n   .toMat(Sink.foreach(batch => writeHttp(precision, bucket, org, batch)))(Keep.right)\\n }\\n override def writeMeasurements[M](precision: Option[WritePrecision], bucket: Option[String], org: Option[String]): Sink[Seq[M], Future[Done]] = {\\n  writeMeasurements(toWriteParameters(precision, bucket, org))\\n }\\n override def writeMeasurements[M](parameters: WriteParameters): Sink[Seq[M], Future[Done]] = {\\n  Flow[Seq[M]]\\n   .map(records => records.map(record => toMeasurementBatch(record, parameters.precisionSafe(options))))\\n   .toMat(Sink.foreach(batch => writeHttp(parameters, batch)))(Keep.right)\\n }\\n private def writeHttp(precision: Option[WritePrecision], bucket: Option[String], org: Option[String], batch: Seq[AbstractWriteClient.BatchWriteData]): Done = {\\n  writeHttp(toWriteParameters(precision, bucket, org), batch)\\n }\\n private def writeHttp(parameters: WriteParameters, batch: Seq[AbstractWriteClient.BatchWriteData]): Done = {\\n  write(parameters, batch.toList.asJava.stream())\\n  Done.done()\\n }\\n private def toWriteParameters(precision: Option[WritePrecision], bucket: Option[String], org: Option[String]): WriteParameters = {\\n  val parameters = new WriteParameters(bucket.orNull, org.orNull, precision.orNull, null)\\n  parameters.check(options)\\n  parameters\\n }\\n}\\n \\n\\n         \\nCopy\\n\\n```\\nc\\n```\\n         package influxdbv3\\nimport (\\n \"context\"\\n \"fmt\"\\n \"io\"\\n \"os\"\\n \"text/tabwriter\"\\n \"github.com/apache/arrow/go/v12/arrow\"\\n \"github.com/InfluxCommunity/influxdb3-go/influx\"\\n)\\nfunc QuerySQL() error {\\n url := \"https://us-east-1-1.aws.cloud2.influxdata.com\"\\n token := os.Getenv(\"INFLUX_TOKEN\")\\n database := os.Getenv(\"INFLUX_DATABASE\")\\n\\t\\n client, err := influx.New(influx.Configs{\\n\\tHostURL: url,\\n\\tAuthToken: token,\\n })\\n defer func (client *influx.Client) {\\n\\terr := client.Close()\\n\\tif err != nil {\\n\\t\\tpanic(err)\\n\\t}\\n }(client)\\n query := `\\n  SELECT\\n\\t room,\\n\\t DATE_BIN(INTERVAL \\'1 day\\', time) AS _time,\\n\\t AVG(temp) AS temp,\\n\\t AVG(hum) AS hum,\\n\\t AVG(co) AS co\\n\\tFROM home\\n\\tWHERE time >= now() - INTERVAL \\'90 days\\'\\n\\tGROUP BY room, _time\\n\\tORDER BY _time\\n`\\n iterator, err := client.Query(context.Background(), database, query)\\n if err != nil {\\n  panic(err)\\n }\\n w := tabwriter.NewWriter(io.Discard, 4, 4, 1, \\' \\', 0)\\n w.Init(os.Stdout, 0, 8, 0, \\'\\\\t\\', 0)\\n fmt.Fprintln(w, \"day\\\\troom\\\\ttemp\")\\n for iterator.Next() {\\n\\trow := iterator.Value()\\n\\tday := (row[\"_time\"].(arrow.Timestamp)).ToTime(arrow.TimeUnit(arrow.Nanosecond))\\n\\tfmt.Fprintf(w, \"%s\\\\t%s\\\\t%.2f\\\\n\", day, row[\"room\"], row[\"temp\"])\\n }\\n w.Flush()\\n return nil\\n}\\n         \\nCopy\\n\\n```\\nc\\n```\\n         package influxdbv3\\nimport (\\n \"context\"\\n \"os\"\\n \"fmt\"\\n \"github.com/InfluxCommunity/influxdb3-go/influx\"\\n)\\nfunc WriteLineProtocol() error {\\n url := \"https://us-east-1-1.aws.cloud2.influxdata.com\"\\n token := os.Getenv(\"INFLUX_TOKEN\")\\n database := os.Getenv(\"INFLUX_DATABASE\")\\n\\t\\n client, err := influx.New(influx.Configs{\\n\\tHostURL: url,\\n\\tAuthToken: token,\\n })\\n defer func (client *influx.Client) {\\n\\terr := client.Close()\\n\\tif err != nil {\\n\\t\\tpanic(err)\\n\\t}\\n }(client)\\n record := \"home,room=Living\\\\\\\\ Room temp=22.2,hum=36.4,co=17i\"\\n fmt.Println(\"Writing record: \", record)\\n err = client.Write(context.Background(), database, []byte(record))\\n if err != nil {\\n  panic(err)\\n }\\n return nil\\n}\\n         \\nCopy\\n\\n```\\nc\\n```\\n         using System;\\nusing System.Threading.Tasks;\\nusing InfluxDB3.Client;\\nusing InfluxDB3.Client.Query;\\nnamespace InfluxDBv3;\\npublic class Query\\n{\\n static async Task QuerySQL()\\n {\\n  const string hostUrl = \"https://us-east-1-1.aws.cloud2.influxdata.com\";\\n  string? database = System.Environment.GetEnvironmentVariable(\"INFLUX_DATABASE\");\\n  string? authToken = System.Environment.GetEnvironmentVariable(\"INFLUX_TOKEN\");\\n  using var client = new InfluxDBClient(hostUrl, authToken: authToken, database: database);\\n \\n  const string sql = @\"\\n   SELECT\\n    room,\\n    DATE_BIN(INTERVAL \\'1 day\\', time) AS _time,\\n    AVG(temp) AS temp,\\n    AVG(hum) AS hum,\\n    AVG(co) AS co\\n   FROM home\\n   WHERE time >= now() - INTERVAL \\'90 days\\'\\n   GROUP BY room, _time\\n   ORDER BY _time\\n  \";\\n  Console.WriteLine(\"{0,-30}{1,-15}{2,-15}\", \"day\", \"room\", \"temp\");\\n  await foreach (var row in client.Query(query: sql))\\n  {\\n   Console.WriteLine(\"{0,-30}{1,-15}{2,-15}\", row[1], row[0], row[2]);\\n  }\\n  Console.WriteLine();\\n }\\n}\\n         \\nCopy\\n\\n```\\nc\\n```\\n         using System;\\nusing System.Threading.Tasks;\\nusing InfluxDB3.Client;\\nusing InfluxDB3.Client.Query;\\nnamespace InfluxDBv3;\\npublic class Write\\n{\\n public static async Task WriteLineProtocol()\\n {\\n  const string hostUrl = \"https://us-east-1-1.aws.cloud2.influxdata.com\";\\n  string? database = System.Environment.GetEnvironmentVariable(\"INFLUX_DATABASE\");\\n  string? authToken = System.Environment.GetEnvironmentVariable(\"INFLUX_TOKEN\");\\n  using var client = new InfluxDBClient(hostUrl, authToken: authToken, database: database);\\n  const string record = \"home,room=Living\\\\\\\\ Room temp=22.2,hum=36.4,co=17i\";\\n  Console.WriteLine(\"Write record: {0,-30}\", record);\\n  await client.WriteRecordAsync(record: record);\\n }\\n}\\n\\n         \\nCopy\\n\\n```\\nc\\n```\\n         client <- InfluxDBClient$new(url = \"http://localhost:8086\",\\n               token = \"my-token\",\\n               org = \"my-org\")\\n              \\ndata <- client$query(\\'from(bucket: \"my-bucket\") |> range(start: -1h) |> drop(columns: [\"_start\", \"_stop\"])\\')\\ndata\\n         \\nCopy\\n\\n```\\nc\\n```\\n         client <- InfluxDBClient$new(url = \"http://localhost:8086\",\\n               token = \"my-token\",\\n               org = \"my-org\")\\ndata <- ...\\nresponse <- client$write(data, bucket = \"my-bucket\", precision = \"us\",\\n             measurementCol = \"name\",\\n             tagCols = c(\"region\", \"sensor_id\"),\\n             fieldCols = c(\"altitude\", \"temperature\"),\\n             timeCol = \"time\")\\n         \\nCopy\\n\\n```\\nc\\n[Read Documentation for v2 ](https://influxdata.com/<https:/docs.influxdata.com/influxdb/v2/api-guide/client-libraries/>) [Read Documentation for v3 ](https://influxdata.com/<https:/docs.influxdata.com/influxdb/cloud-serverless/reference/client-libraries/v3/#client-libraries-for-influxdb-v3>)\\n## Loved by developers, trusted by enterprises\\n  * ![](https://images.ctfassets.net/o7xu9whrs0u9/1TRqQQkfNQZgutTJpyiRi2/d1ac892959d307e8ae8e84cfb322ab50/Loft-Orbital-logo.jpg)\\n  * ![](https://images.ctfassets.net/o7xu9whrs0u9/6sU6VV4Xw7HScyLgTp0C1O/6527f80fcb226b70bab138f579c5fd1e/Capital-One-logo-2.png)\\n  * ![](https://images.ctfassets.net/o7xu9whrs0u9/1V4Q2lqtnqbtrtRfDUez8N/ee4664483f75cd2ffa4bbcdfe6cfd1f9/terega-logo.png)\\n  * ![](https://images.ctfassets.net/o7xu9whrs0u9/DcavnNg4MPKE6bB29vzbs/f672258bee9de62f5792d09ac1b176e3/Volvo-logo.jpg)\\n  * ![](https://images.ctfassets.net/o7xu9whrs0u9/1H5zjgYO8fZ98o3Xykq4id/dc3afa4073139a9788ec50c875c346f7/WOW-logo.jpg)\\n  * ![](https://images.ctfassets.net/o7xu9whrs0u9/fG3xyHVfkrlf2cqUt321Q/f4fa23852f4bf3aa230dfc6876cb1309/majik-systems_logo.jpg)\\n  * ![](https://images.ctfassets.net/o7xu9whrs0u9/2QBQvye3hk4AhjQL4HoSvW/01ac7878e708a5d9cad23b3405c61ba2/juniz-logo.svg)\\n\\n\\n### 500M+\\nMetrics collected daily\\n### Mission-critical monitoring\\nReal-time data access for query\\nLOFT ORBITAL\\n### Space Made Simple: How Loft Orbital Delivers Unparalleled Speed-to-Space with InfluxDB Cloud\\n[Read Case Study ](https://influxdata.com/</customer/loft-orbital/>)\\n### 65M+\\ndaly events processed\\n### 45x\\nmore resource efficient\\nCAPITAL ONE\\n### \"InfluxDB is a high-speed read and write database. The data is written in real-time, you can read it in real-time, and while reading, you can apply your machine learning model. So, in real-time, you can forecast and detect anomalies.\"\\n**Rajeev Tomer** Sr. Manager of Data Engineering\\n[Read Case Study ](https://influxdata.com/</customer/capital-one/>)\\n### 50%\\nlower total cost of ownership\\n### 100K\\nreal-time metrics with simplified deployment\\nTER√âGA\\n### Ter√©ga Replaced Its Legacy Data Historian with InfluxDB\\n**Lorem ipsum** Lorem ipsum dolor sit amet consectetur.\\n[Read Case Study ](https://influxdata.com/</customer/terega/>)\\n### 65M+\\ndaly events processed\\n### 45x\\nmore resource efficient\\nVOLVO\\n### ‚ÄúWe decided, from a monitoring perspective, that we are... going with a best of breed setup. So, we put the best tools in place, like InfluxDB for metrics monitoring.‚Äù\\n**Daniel Putz** DevOps Enablement\\n[Read Case Study ](https://influxdata.com/</customer/volvo/>)\\n### 65M+\\ndaly events processed\\n### 45x\\nmore resource efficient\\nWIDEOPENWEST\\n### \"I was blown away with how easy it was to install and configure InfluxDB. The clustering was easy. The documentation was great, and the support has been second to none.\"\\n**Dylan Shorter** Engineer III, Software and Product Integration Engineering\\n[Read Case Study ](https://influxdata.com/</customer/wideopenwest/>)\\n### 45%\\nLess equipment downtime\\n### 10%\\nReduced waste\\nMAJIK SYSTEMS\\n### From Reactive to Proactive: How MAJiK Systems Embraced Predictive Maintenance with InfluxDB and Time Series Data\\n**Dylan Shorter** Engineer III, Software and Product Integration Engineering\\n[Read Case Study ](https://influxdata.com/</customer/majik/>)\\n### 65M+\\ndaly events processed\\n### 45x\\nmore resource efficient\\nJU:NIZ ENERGY\\n### ‚ÄúWith InfluxDB Cloud Dedicated, the great thing is that we don\\'t need to think about data storage costs or usage anymore because data storage gets way cheaper.‚Äù\\n**Ricardo Kissinger** Head of IT Infrastructure and IT Security \\n[Read Case Study ](https://influxdata.com/</customer/juniz/>)\\n## InfluxDB is a G2 Leader in Time Series\\n‚ÄúInfluxDB is a strong database built specifically for time series data. It has made working with such data seamless and easy.‚Äù ‚Äî Verified G2 reviewer\\n[Read reviews ](https://influxdata.com/<https:/www.g2.com/products/influxdata-influxdb/reviews>)\\n![G2 - Users Most Likely To Recommend](https://images.ctfassets.net/o7xu9whrs0u9/1sVMNGJqukua4VX161BnZs/cf1cb5a656afc1c0c074e20a36640da0/TimeSeriesIntelligence_UsersMostLikelyToRecommend_Nps.svg)\\n![G2 - Leader Winter 2024](https://images.ctfassets.net/o7xu9whrs0u9/1gyd43bpGAdZGWOWgBaNCS/e4735282d1bafca847edaff0f7815e0a/TimeSeriesDatabases_Leader_Leader.svg)\\n![G2-MomentumLeader-Winter-2024](https://images.ctfassets.net/o7xu9whrs0u9/3XAq1sduZ7GwVj2uIOs3VW/90906aa97995defb768a62018abbbf11/TimeSeriesDatabases_MomentumLeader_Leader.svg)\\n![G2 Mid-Market Leader](https://images.ctfassets.net/o7xu9whrs0u9/bc1colOmlLlVPVGJzzXAT/d4c3712e3aaf7558b468ba32c0b7e13f/TimeSeriesIntelligence_Leader_Mid-Market_Leader.svg)\\n![G2 - Best Usability](https://images.ctfassets.net/o7xu9whrs0u9/70HiaaF2VVgCsY6QxaNSHd/8006dfba1a8b21a5a925b7b85e18d474/TimeSeriesDatabases_BestUsability_Total.svg)\\n![G2 - Best Relationship](https://images.ctfassets.net/o7xu9whrs0u9/70HiaaF2VVgCsY6QxaNSHd/8006dfba1a8b21a5a925b7b85e18d474/TimeSeriesDatabases_BestUsability_Total.svg)\\nINDUSTRIES\\n## Time series analytics for every industry\\nToday, InfluxDB deployments span multiple industries, with customers running at scale in any environment‚Äîpublic and private cloud, on-premises, and at the edge. \\nManufacturing\\nEnergy and Utilities\\nTelecommunications\\nConsumer IoT\\nIndustrial IoT\\nAerospace\\n## Manufacturing\\nAnalyze production data streams in real-time to identify bottlenecks, prevent downtime, and power predictive maintenance for your industrial equipment.\\n[Learn More ](https://influxdata.com/</solutions/by-industries/manufacturing/>)\\n## Energy and Utilities\\nMonitor, optimize, and manage renewable energy and traditional power systems to achieve smart grid balancing and optimization. Forecast and predict maintenance needs for renewable energy sources, such as wind turbines and solar farms. \\n[Learn More ](https://influxdata.com/</solutions/by-industries/energy-and-utilities/>)\\n## Telecommunications\\nAnalyze network performance and usage patterns in telecommunication infrastructure. Improve quality of service, optimize infrastructure resources, and reduce operational costs.\\n[Learn More ](https://influxdata.com/</solutions/by-industries/telecommunications/>)\\n## Consumer IoT \\nUse real-time monitoring and analytics to optimize energy consumption and improve quality of life.\\n[Learn More ](https://influxdata.com/</solutions/consumer-iot/>)\\n## Industrial IoT\\nOptimize operational processes with real-time insights from industrial equipment and sensors.\\n[Learn More ](https://influxdata.com/</solutions/industrial-iot/>)\\n## Aerospace\\nGet real-time insights from satellites, networks, and every stage of the launch operation process. Reduce errors and accelerate time to market in this mission-critical space.\\n[Learn More ](https://influxdata.com/</solutions/by-industries/aerospace-and-satellites/>)\\n## Manufacturing\\nAnalyze production data streams in real-time to identify bottlenecks, prevent downtime and power predictive maintenance for your industrial equipment.\\n[Learn More ](https://influxdata.com/</solutions/by-industries/manufacturing/>)\\n## Energy and Utilities\\nMonitor, optimize, and manage renewable energy and traditional power systems to achieve smart grid balancing and optimization. Forecast and predict maintenance needs for your renewable energy sources such as wind turbines and solar farms. \\n[Learn More ](https://influxdata.com/</solutions/by-industries/energy-and-utilities/>)\\n## Telecommunications\\nAnalyze network performance and usage patterns in telecommunication infrastructure. Improve quality of service, optimize infrastructure resources, and reduce operational costs.\\n[Learn More ](https://influxdata.com/</solutions/by-industries/telecommunications/>)\\n## Consumer IoT \\nUse real-time monitoring and analytics to optimize energy consumption and improve quality of life.\\n[Learn More ](https://influxdata.com/</solutions/consumer-iot/>)\\n## Industrial IoT\\nOptimize operational processes with real-time insights from industrial equipment and sensors.\\n[Learn More ](https://influxdata.com/</solutions/industrial-iot/>)\\n## Aerospace\\nGet real-time insights from satellites, networks, and every stage of the launch operation process. Reduce errors and accelerate time to market in this mission-critical space.\\n[Learn More ](https://influxdata.com/</solutions/by-industries/aerospace-and-satellites/>)\\n## Analyze time series data from any workload\\n## Real-Time Analytics\\nQuery data immediately upon arrival for real-time insights across systems and applications\\n[Learn More ](https://influxdata.com/</real-time-workloads/>)\\n![code](https://images.ctfassets.net/o7xu9whrs0u9/4FIKs9d3n3c6jXGZOQ8jxb/74ba6ba19fc2b4224723d0b2753b89e5/real-time-analytics.svg)\\n## Network and Device Telemetry\\nMonitor and control devices and sensors in IoT, network, and field deployments.\\n[Learn More ](https://influxdata.com/</telemetry-workloads/>)\\n![code](https://images.ctfassets.net/o7xu9whrs0u9/pJWpvaZ0VEWzh6gVgo7wP/8be83d66d0a292ddf37bf61f0ea28b40/telemetry.svg)\\n## Modern Data Historian\\nUnleash and transform on-site industrial OT data in the manufacturing plant and on the factory floor.\\n[Learn More ](https://influxdata.com/</historian-workloads/>)\\n![code](https://images.ctfassets.net/o7xu9whrs0u9/5kkFiUZgZZq81koJMB2Yf7/74580a3ef800629c0afd6375d9ab711e/data-historian.svg)\\n## Machine Learning and AI\\nShare real-time data with open ML/AI tools to create predictive analytics for automated, intelligent applications and systems.\\n[Learn More ](https://influxdata.com/</ml-ai-workloads/>)\\n![ai](https://images.ctfassets.net/o7xu9whrs0u9/5sGS3szG7zWkxEVR7axQyS/c6da478f63503d59062fd50d1f56fd92/machine-learning.svg)\\n## Real-Time Analytics\\nQuery data immediately upon arrival for real-time insights across systems and applications.\\n[Learn More ](https://influxdata.com/</real-time-workloads/>)\\n![code](https://images.ctfassets.net/o7xu9whrs0u9/4JlI4opSxChoIW2XvNaO8m/6c6d01b3fc665e5b3788ced9669a71e7/real-time-01.svg)\\n## Network & Device Telemetry\\nMonitor and control devices and sensors in IoT, network, and field deployments. \\n[Learn More ](https://influxdata.com/</telemetry-workloads/>)\\n![code](https://images.ctfassets.net/o7xu9whrs0u9/5ml3nEc67Obh55dLNiNfF4/b70b6de0b103f6cb4d5e480a5c8671fa/telemetry-01.svg)\\n## Modern Data Historian\\nUnleash and transform on-site industrial OT data in the manufacturing plant and on the factory floor.\\n[Learn More ](https://influxdata.com/</historian-workloads/>)\\n![code](https://images.ctfassets.net/o7xu9whrs0u9/26kKFMCTPkhiaqvprdhvMl/2fe4d2bc7f4be71ec2b070737376373c/data-historian-01.svg)\\n## Machine Learning & AI\\nShare real-time data with open ML/AI tools to create predictive analytics for intelligent applications and systems.\\n[Learn More ](https://influxdata.com/</ml-ai-workloads/>)\\n![ai](https://images.ctfassets.net/o7xu9whrs0u9/RnkNZRjLfo4yyzLhQ6qo0/74df2b01ad5a673879ed135d6e2b7a44/ml-01.svg)\\n## Start building now\\nGet started in minutes for free. Upgrade anytime to get $250 in credit for your project.\\n[Get InfluxDB](https://influxdata.com/<https:/cloud2.influxdata.com/signup>) [Find the right product ](https://influxdata.com/<https:/www.influxdata.com/products/influxdb-overview/#overview>)\\n![InfluxData logo](https://influxdata.com/images/influxdata_full_white-f14e8966.svg)\\n##### Product & Solutions\\n  * [InfluxDB](https://influxdata.com/</get-influxdb/>)\\n  * [InfluxDB Cloud Serverless](https://influxdata.com/</products/influxdb-cloud/serverless/>)\\n  * [InfluxDB Cloud Dedicated](https://influxdata.com/</products/influxdb-cloud/dedicated/>)\\n  * [InfluxDB Clustered](https://influxdata.com/</products/influxdb-clustered/>)\\n  * [InfluxDB Comparison](https://influxdata.com/</lp/oss-vs-new-engine/>)\\n  * [Integrations](https://influxdata.com/</products/integrations/>)\\n  * [Data Lake / Warehouse](https://influxdata.com/</glossary/data-warehouse/>)\\n  * [Data Collector](https://influxdata.com/</time-series-platform/telegraf/>)\\n  * [Pricing](https://influxdata.com/</influxdb-pricing/>)\\n  * [Use Cases](https://influxdata.com/</solutions/>)\\n  * [Time Series Data](https://influxdata.com/</what-is-time-series-data/>)\\n  * [Time Series Database](https://influxdata.com/</time-series-database/>)\\n  * [Time Series Forecasting](https://influxdata.com/</time-series-forecasting-methods/>)\\n  * [Data Warehousing](https://influxdata.com/</glossary/data-warehouse/>)\\n  * [Network Monitoring](https://influxdata.com/</solutions/network-monitoring/>)\\n\\n\\n##### Developers\\n  * [Guides](https://influxdata.com/</_resources/>)\\n  * [Blog](https://influxdata.com/</blog/>)\\n  * [Customers](https://influxdata.com/</customers/>)\\n  * [Support](https://influxdata.com/<https:/support.influxdata.com/>)\\n  * [Webinars](https://influxdata.com/</_resources/>)\\n  * [Documentation](https://influxdata.com/<https:/docs.influxdata.com/>)\\n  * [Events & Live Training](https://influxdata.com/</events/>)\\n  * [InfluxDB University](https://influxdata.com/<https:/university.influxdata.com/>)\\n  * [Community](https://influxdata.com/<https:/community.influxdata.com/>)\\n  * [InfluxDB OSS](https://influxdata.com/</products/influxdb/>)\\n  * [Telegraf](https://influxdata.com/</time-series-platform/telegraf/>)\\n  * [AWS](https://influxdata.com/</influxdb-cloud-on-aws/>)\\n  * [Product Integrations](https://influxdata.com/</products/integrations/>)\\n  * [Glossary](https://influxdata.com/</glossary/>)\\n\\n\\n##### Company\\n  * [About](https://influxdata.com/</about/>)\\n  * [Careers](https://influxdata.com/</careers/>)\\n  * [Partners](https://influxdata.com/</partners/>)\\n  * [Newsroom](https://influxdata.com/</newsroom/>)\\n  * [Contact Us](https://influxdata.com/</general-inquiries/>)\\n  * [Customers](https://influxdata.com/</customers/>)\\n\\n\\n##### Sign up for the InfluxData newsletter\\n548 Market St, PMB 77953San Francisco, California 94104\\n##### Follow Us\\n[ ](https://influxdata.com/<https:/www.youtube.com/@influxdata8893>) [ ![twitter](https://images.ctfassets.net/o7xu9whrs0u9/4fDx6xWWz9MAxYFYIhJ84g/6207b0255e0be642061d121447477740/logo.svg) ](https://influxdata.com/<https:/twitter.com/influxdb>) [ ](https://influxdata.com/<https:/www.linkedin.com/company/influxdb/>) [ ](https://influxdata.com/<https:/github.com/influxdata/influxdb>) [ ](https://influxdata.com/</slack>)\\n¬© 2025 InfluxData Inc. All Rights Reserved. \\n[Legal](https://influxdata.com/</legal/ >) [Security](https://influxdata.com/</security/ >) [Cookie Policy](https://influxdata.com/</legal/cookie-policy/>) [Comparison](https://influxdata.com/</comparison/>)\\n' markdown_with_citations='Skip to content‚ü®1‚ü©\\n ![logo‚ü®2‚ü© ](https://influxdata.com/</>)\\n ![logo‚ü®3‚ü© ](https://influxdata.com/</>)\\nProducts \\n#### Products\\nFully Managed‚ü®4‚ü©\\nSimplify and scale with cloud services\\n InfluxDB Cloud Serverless ![arrow‚ü®5‚ü© ](https://influxdata.com/</products/influxdb-cloud/serverless/>)  InfluxDB Cloud Dedicated ![arrow‚ü®5‚ü© ](https://influxdata.com/</products/influxdb-cloud/dedicated/>)\\nSelf-Managed\\nFor organizations that need full control\\n InfluxDB Clustered ![arrow‚ü®5‚ü© ](https://influxdata.com/</products/influxdb-clustered/>)\\nIntegrations\\nWorks well with the tools you love \\n Client Libraries ![arrow‚ü®5‚ü© ](https://influxdata.com/</products/integrations/#tab2>)  Lakehouse / Warehouse ![arrow‚ü®5‚ü© ](https://influxdata.com/</features/open-data-access/>)  Explore All ![arrow‚ü®5‚ü© ](https://influxdata.com/</products/integrations/>)\\nRecommended Resources\\n Performance Comparisons ![arrow‚ü®5‚ü© ](https://influxdata.com/</lp/oss-vs-new-engine/>)  Find the Right Product ![arrow‚ü®5‚ü© ](https://influxdata.com/</get-influxdb/>)  Platform Overview ![arrow‚ü®5‚ü© ](https://influxdata.com/</products/influxdb-overview/>)  InfluxDB 3 Enterprise ALPHA ‚ü®6‚ü©\\nUse Cases \\n#### Use Cases\\n##### Data Workloads\\nReal-Time Analytics\\nCollect, analyze, and predict in real time\\n Infrastructure Monitoring ![arrow‚ü®5‚ü© ](https://influxdata.com/</resources/influxdb-for-infrastructure-monitoring/>)  Real-Time Monitoring ![arrow‚ü®5‚ü© ](https://influxdata.com/</use-cases/real-time-analytics/>)  DevOps Monitoring ![arrow‚ü®5‚ü© ](https://influxdata.com/</solutions/devops-monitoring/>)  Security Event Monitoring ![arrow‚ü®5‚ü© ](https://influxdata.com/</solutions/security-event-monitoring-with-influxdb/>)  Application Monitoring ![arrow‚ü®5‚ü© ](https://influxdata.com/</solutions/application-performance-monitoring-apm/>)  Gaming Analytics ![arrow‚ü®5‚ü© ](https://influxdata.com/</solutions/gaming/>)\\nNetwork & Device Telemetry\\nModernize telemetry data collection and analysis\\n Network Monitoring ![arrow‚ü®5‚ü© ](https://influxdata.com/</solutions/network-monitoring/>)  Aerospace Monitoring ![arrow‚ü®5‚ü© ](https://influxdata.com/</solutions/by-industries/aerospace-and-satellites/>)  IoT Analytics ![arrow‚ü®5‚ü© ](https://influxdata.com/</use-cases/iot/>)\\nModern Data Historian\\nModernize operations with time series data\\n Renewable Energy Monitoring ![arrow‚ü®5‚ü© ](https://influxdata.com/</solutions/renewable-energy/>)  Process Modernization ![arrow‚ü®5‚ü© ](https://influxdata.com/</solutions/industrial-iot/>)  Digital Transformation ![arrow‚ü®5‚ü© ](https://influxdata.com/</customers/iot-data-platform/>)  Predictive Maintenance ![arrow‚ü®5‚ü© ](https://influxdata.com/</solutions/predictive-maintenance/>)\\nMachine Learning & AI\\nTurn sensor data into actionable intelligence\\n Predictive Analytics ![arrow‚ü®5‚ü© ](https://influxdata.com/</blog/predictive-analytics-using-time-series-database/>)  ML with Lakehouses ![arrow‚ü®5‚ü© ](https://influxdata.com/</features/open-data-access/>)\\n ![icon‚ü®7‚ü© Explore All Use Cases ![arrow‚ü®5‚ü©] ](https://influxdata.com/</solutions/>)  ![icon‚ü®8‚ü© Customer Stories ![arrow‚ü®5‚ü©] ](https://influxdata.com/</customers/>)  ![icon‚ü®9‚ü© See how Ter√©ga reduced total cost of ownership by 50% ![arrow‚ü®5‚ü©] ](https://influxdata.com/</customer/terega/>)\\nIndustries\\n Aerospace ![arrow‚ü®5‚ü© ](https://influxdata.com/</solutions/by-industries/aerospace-and-satellites/>)  Energy & Utilities ![arrow‚ü®5‚ü© ](https://influxdata.com/</solutions/by-industries/energy-and-utilities/>)  Financial Services ![arrow‚ü®5‚ü© ](https://influxdata.com/</solutions/fintech/>)  Industrial IoT ![arrow‚ü®5‚ü© ](https://influxdata.com/</solutions/industrial-iot/>)  Consumer IoT ![arrow‚ü®5‚ü© ](https://influxdata.com/</solutions/consumer-iot/>)  Manufacturing ![arrow‚ü®5‚ü© ](https://influxdata.com/</solutions/by-industries/manufacturing/>)  Gaming ![arrow‚ü®5‚ü© ](https://influxdata.com/</solutions/gaming/>)  Telecommunications ![arrow‚ü®5‚ü© ](https://influxdata.com/</solutions/by-industries/telecommunications/>)\\nDevelopers \\n#### Developers\\nLearn\\n Developer Resources ![arrow‚ü®5‚ü© ](https://influxdata.com/</_resources/>)  Blog ![arrow‚ü®5‚ü© ](https://influxdata.com/</blog/>)  Customers ![arrow‚ü®5‚ü© ](https://influxdata.com/</customers/>)  Partners ![arrow‚ü®5‚ü© ](https://influxdata.com/</partners/>)  Support ![arrow‚ü®5‚ü© ](https://influxdata.com/<https:/support.influxdata.com/s/>)  Webinars ![arrow‚ü®5‚ü© ](https://influxdata.com/</_resources/>)\\nBuild\\n Documentation ![arrow‚ü®5‚ü© ](https://influxdata.com/<https:/docs.influxdata.com/>)  InfluxDB OSS ALPHA ‚ü®10‚ü©  Telegraf Data Collection ![arrow‚ü®5‚ü© ](https://influxdata.com/</time-series-platform/telegraf/>)  AWS ![arrow‚ü®5‚ü© ](https://influxdata.com/</influxdb-cloud-on-aws/>)  Integrations ![arrow‚ü®5‚ü© ](https://influxdata.com/</products/integrations/>)\\nConnect\\n InfluxDB University ![arrow‚ü®5‚ü© ](https://influxdata.com/</university/>)  Community ![arrow‚ü®5‚ü© ](https://influxdata.com/</community/>)  Events and Live Training ![arrow‚ü®5‚ü© ](https://influxdata.com/</events/>)\\nFeatured Resources\\n InfluxDB 3 Open Source Public Alpha ![arrow‚ü®5‚ü© ](https://influxdata.com/</products/influxdb3-public-alpha/>)  Streamline Migration to InfluxDB 3  ![arrow‚ü®5‚ü© ](https://influxdata.com/</blog/sync-influxdb-v2-v3-quix/>)  Getting Started with MING Stack for IoT ![arrow‚ü®5‚ü© ](https://influxdata.com/</resources/getting-started-with-ming-stack-for-iot/>)\\n Pricing ‚ü®11‚ü©\\n Contact Us ‚ü®12‚ü©\\nSign In \\n Log in to InfluxDB Cloud 2.0 ![arrow‚ü®5‚ü© ](https://influxdata.com/<https:/cloud2.influxdata.com/login>)  Log in to InfluxDB Enterprise ![arrow‚ü®5‚ü© ](https://influxdata.com/<https:/portal.influxdata.com/users/sign_in>)  Log in to InfluxDB Cloud 1.x ![arrow‚ü®5‚ü© ](https://influxdata.com/<https:/cloud.influxdata.com/>)\\n Start Now ‚ü®13‚ü©\\nStart Now‚ü®13‚ü©\\nProducts \\nProducts\\n##### Fully Managed‚ü®4‚ü©\\nSimplify and scale with Cloud services\\n InfluxDB Cloud Serverless ![arrow‚ü®5‚ü© ](https://influxdata.com/</products/influxdb-cloud/serverless/>)  InfluxDB Cloud Dedicated ![arrow‚ü®5‚ü© ](https://influxdata.com/</products/influxdb-cloud/dedicated/>)\\n##### Self-Managed\\nFor organizations that need full control\\n InfluxDB Clustered ![arrow‚ü®5‚ü© ](https://influxdata.com/</products/influxdb-clustered/>)\\n##### Integrations\\nWorks well with the tools you love\\n Client Libraries ![arrow‚ü®5‚ü© ](https://influxdata.com/</products/integrations/#tab2>)  Lakehouse / Warehouse ![arrow‚ü®5‚ü© ](https://influxdata.com/</features/open-data-access/>)  Explore All ![arrow‚ü®5‚ü© ](https://influxdata.com/</products/integrations/>)\\n##### Recommended Resources\\n Performance Comparisons ![arrow‚ü®5‚ü© ](https://influxdata.com/</lp/oss-vs-new-engine/>)  Find the Right Product ![arrow‚ü®5‚ü© ](https://influxdata.com/</get-influxdb/>)  Platform Overview ![arrow‚ü®5‚ü© ](https://influxdata.com/</products/influxdb-overview/>)  InfluxDB 3 Enterprise ALPHA ![arrow‚ü®5‚ü© ](https://influxdata.com/</products/influxdb-3-enterprise/>)\\nUse Cases \\nUse Cases\\n#### Data Workloads\\n##### Real-Time Analytics\\nCollect, analyze, and predict in real time\\n Infrastructure Monitoring ![arrow‚ü®5‚ü© ](https://influxdata.com/</resources/influxdb-for-infrastructure-monitoring/>)  Real-Time Monitoring ![arrow‚ü®5‚ü© ](https://influxdata.com/</use-cases/real-time-analytics/>)  DevOps Monitoring ![arrow‚ü®5‚ü© ](https://influxdata.com/</solutions/devops-monitoring/>)  Security Event Monitoring ![arrow‚ü®5‚ü© ](https://influxdata.com/</solutions/security-event-monitoring-with-influxdb/>)  Application Monitoring ![arrow‚ü®5‚ü© ](https://influxdata.com/</solutions/application-performance-monitoring-apm/>)  Gaming Analytics ![arrow‚ü®5‚ü© ](https://influxdata.com/</solutions/gaming/>)\\n##### Network & Device Telemetry\\nModernize telemetry data collection and analysis\\n Network Monitoring ![arrow‚ü®5‚ü© ](https://influxdata.com/</solutions/network-monitoring/>)  Aerospace Monitoring ![arrow‚ü®5‚ü© ](https://influxdata.com/</solutions/by-industries/aerospace-and-satellites/>)  IoT Analytics ![arrow‚ü®5‚ü© ](https://influxdata.com/</use-cases/iot/>)\\n##### Modern Data Historian\\nModernize operations with time series data \\n Renewable Energy Monitoring ![arrow‚ü®5‚ü© ](https://influxdata.com/</solutions/renewable-energy/>)  Process Modernization ![arrow‚ü®5‚ü© ](https://influxdata.com/</solutions/industrial-iot/>)  Digital Transformation ![arrow‚ü®5‚ü© ](https://influxdata.com/</customers/iot-data-platform/>)  Predictive Maintenance ![arrow‚ü®5‚ü© ](https://influxdata.com/</solutions/predictive-maintenance/>)\\n##### Machine Learning & AI\\nTurn sensor data into actionable intelligence \\n Predictive Analytics ![arrow‚ü®5‚ü© ](https://influxdata.com/</blog/predictive-analytics-using-time-series-database/>)  ML with Lakehouses ![arrow‚ü®5‚ü© ](https://influxdata.com/</features/open-data-access/>)\\n##### Industries\\n Aerospace ![arrow‚ü®5‚ü© ](https://influxdata.com/</solutions/by-industries/aerospace-and-satellites/>)  Energy & Utilities ![arrow‚ü®5‚ü© ](https://influxdata.com/</solutions/by-industries/energy-and-utilities/>)  Financial Services ![arrow‚ü®5‚ü© ](https://influxdata.com/</solutions/fintech/>)  Industrial Iot ![arrow‚ü®5‚ü© ](https://influxdata.com/</solutions/industrial-iot/>)  Consumer IoT ![arrow‚ü®5‚ü© ](https://influxdata.com/</solutions/consumer-iot/>)  Manufacturing ![arrow‚ü®5‚ü© ](https://influxdata.com/</solutions/by-industries/manufacturing/>)  Gaming ![arrow‚ü®5‚ü© ](https://influxdata.com/</solutions/gaming/>)  Telecommunications ![arrow‚ü®5‚ü© ](https://influxdata.com/</solutions/by-industries/telecommunications/>)\\n ![icon‚ü®7‚ü© Use Cases ![arrow‚ü®5‚ü©] ](https://influxdata.com/</solutions/>)  ![icon‚ü®8‚ü© Customer Stories ![arrow‚ü®5‚ü©] ](https://influxdata.com/</customers/>)  ![icon‚ü®9‚ü© See how Ter√©ga reduced total cost of ownership by 50% ![arrow‚ü®5‚ü©] ](https://influxdata.com/</customer/terega/>)\\nDevelopers \\nDevelopers\\n##### Learn\\n Developer Resources ![arrow‚ü®5‚ü© ](https://influxdata.com/</_resources/>)  Blog ![arrow‚ü®5‚ü© ](https://influxdata.com/</blog/>)  Customers ![arrow‚ü®5‚ü© ](https://influxdata.com/</customers/>)  Partners ![arrow‚ü®5‚ü© ](https://influxdata.com/</partners/>)  Support ![arrow‚ü®5‚ü© ](https://influxdata.com/<https:/support.influxdata.com/s/>)  Webinars ![arrow‚ü®5‚ü© ](https://influxdata.com/</_resources/>)\\n##### Build\\n Documentation ![arrow‚ü®5‚ü© ](https://influxdata.com/<https:/docs.influxdata.com/>)  InfluxDB OSS ALPHA ‚ü®10‚ü©  Telegraf Data Collection ![arrow‚ü®5‚ü© ](https://influxdata.com/</time-series-platform/telegraf/>)  AWS ![arrow‚ü®5‚ü© ](https://influxdata.com/</influxdb-cloud-on-aws/>)  Integrations ![arrow‚ü®5‚ü© ](https://influxdata.com/</products/integrations/>)\\n##### Connect\\n InfluxDB University ![arrow‚ü®5‚ü© ](https://influxdata.com/</university/>)  Community ![arrow‚ü®5‚ü© ](https://influxdata.com/</community/>)  Events and Live Training ![arrow‚ü®5‚ü© ](https://influxdata.com/</events/>)\\n##### Featured Resources\\n InfluxDB 3 Open Source Public Alpha ![arrow‚ü®5‚ü© ](https://influxdata.com/</products/influxdb3-public-alpha/>)  Streamline Migration to InfluxDB 3 ![arrow‚ü®5‚ü© ](https://influxdata.com/</blog/sync-influxdb-v2-v3-quix/>)  Getting Started with MING Stack for IoT ![arrow‚ü®5‚ü© ](https://influxdata.com/</resources/getting-started-with-ming-stack-for-iot/>)\\nPricing‚ü®11‚ü©\\nContact Us‚ü®12‚ü©\\nSign In \\nSign In\\n Log in to InfluxDB Cloud 2.0 ![arrow‚ü®5‚ü© ](https://influxdata.com/<https:/cloud2.influxdata.com/login>)  Log in to InfluxDB Enterprise ![arrow‚ü®5‚ü© ](https://influxdata.com/<https:/portal.influxdata.com/users/sign_in>)  Log in to InfluxDB Cloud 1.x ![arrow‚ü®5‚ü© ](https://influxdata.com/<https:/cloud.influxdata.com/>)\\n**Now available:** Amazon Timestream for InfluxDB Read Replicas add-on Learn More ‚ü®14‚ü© Learn More‚ü®15‚ü©\\n## The leading platform for time series data\\nJoin the millions of developers using InfluxDB to predict, respond, and adapt in real-time.\\nGet started with InfluxDB ‚ü®13‚ü©\\n![Logo 1‚ü®16‚ü©]\\n![Logo 1‚ü®17‚ü©]\\n![Logo 1‚ü®18‚ü©]\\n![nvidia‚ü®19‚ü©]\\n![Capital-One‚ü®20‚ü©]\\n![accenture‚ü®21‚ü©]\\n![siemence‚ü®22‚ü©]\\n![salesforce‚ü®23‚ü©]\\n![PTC‚ü®24‚ü©]\\n![citrix‚ü®25‚ü©]\\n![MuleSoft‚ü®26‚ü©]\\n![Logo 1‚ü®16‚ü©]\\n![Logo 1‚ü®17‚ü©]\\n![Logo 1‚ü®18‚ü©]\\n![nvidia‚ü®19‚ü©]\\n![Capital-One‚ü®20‚ü©]\\n![accenture‚ü®21‚ü©]\\n![siemence‚ü®22‚ü©]\\n![salesforce‚ü®23‚ü©]\\n![PTC‚ü®24‚ü©]\\n![citrix‚ü®25‚ü©]\\n![MuleSoft‚ü®26‚ü©]\\n## Developers choose InfluxDB\\nMore downloads, more open source users, and a stronger community than any other time series database in the world.\\n1B+\\nDownloads of InfluxDB via Docker\\n1M+\\nOpen source instances live today\\n5B+\\nDownloads of InfluxData‚Äôs Telegraf\\n2,800+\\nContributors\\n#1\\nTime series database Source: DB Engines\\n## Why InfluxDB\\nManage high-volume, high-velocity data without sacrificing performance.\\n![046-abstract shape-hl‚ü®27‚ü©]\\n#### Unmatched performance at scale\\nManage millions of time series data points per second without limits or caps.\\n![046-abstract shape-hl‚ü®9‚ü©]\\n#### Run where you need it\\nRun at any scale in any environment: in the cloud, on-prem, or at the edge.\\n![icon-sql‚ü®28‚ü©]\\n#### Build with the tools you love\\nEasily connect to your tech stack using data standards and 300+ integrations.\\n## Engineered for the entire lifecycle of time series data at a lower TCO\\nHigh-Speed Ingest\\nReal-Time Querying with SQL\\nBest-in-Category Compression\\nBulk Data Eviction and Transfer\\nSee ways to get started ‚ü®29‚ü©\\n## Why InfluxDB\\nManage high-volume, high-velocity data without sacrificing performance.\\n![046-abstract shape-hl‚ü®30‚ü©]\\n#### Single Datastore\\nRun analytics across multiple workload types with a single purpose-built platform.\\n![046-abstract shape-hl‚ü®31‚ü©]\\n#### Columnar Design\\nScales without limits with built-in storage and query performance optimization.\\n![icon-sql‚ü®32‚ü©]\\n#### Native SQL\\nQuery directly with InfluxDB using standard SQL.\\n![icon-journey‚ü®33‚ü©]\\n#### Real-Time Query\\nSub-second query response on leading-edge data.\\n![046-abstract shape-hl‚ü®34‚ü©]\\n#### Unlimited Cardinality\\nAnalyze billions of time series data points per second without limitations or caps.\\n![046-abstract shape-hl‚ü®28‚ü©]\\n#### Superior Data Compression\\nMaximize data compression to store more data at a fraction of the cost.\\n## Developers choose InfluxDB\\nMore downloads‚ü®10‚ü©, more open source users, and a larger community than any other time series database in the world.\\n## 1B+\\nDownloads of InfluxDB via Docker\\n1M+\\nOpen source instances live today\\n2,800+\\nContributors\\n5B+\\nDownloads of InfluxData‚Äôs Telegraf\\n#1\\nTime series database Source: DB Engines\\n### Code in the languages you love\\nNo need to conform to a new language or technology. InfluxDB supports multiple programming and query languages, with client libraries and integrations to make things simple, all powered by a RESTful API. \\nSee All Integrations‚ü®35‚ü©\\n![Python‚ü®36‚ü©] ![Swift‚ü®37‚ü©] ![JavaScript‚ü®38‚ü©] ![Java‚ü®39‚ü©] ![Ruby‚ü®40‚ü©] ![Scala‚ü®41‚ü©] ![Go‚ü®42‚ü©] ![C Sharp‚ü®43‚ü©] ![R‚ü®44‚ü©]\\nReadWrite\\n```\\n         from influxdb_client_3 import InfluxDBClient3\\nimport pandas\\nimport os\\ndatabase = os.getenv(\\'INFLUX_DATABASE\\')\\ntoken = os.getenv(\\'INFLUX_TOKEN\\')\\nhost=\"https://us-east-1-1.aws.cloud2.influxdata.com\"\\ndef querySQL():\\n client = InfluxDBClient3(host, database=database, token=token)\\n table = client.query(\\n  \\'\\'\\'SELECT\\n    room,\\n    DATE_BIN(INTERVAL \\'1 day\\', time) AS _time,\\n    AVG(temp) AS temp,\\n    AVG(hum) AS hum,\\n    AVG(co) AS co\\n   FROM home\\n   WHERE time >= now() - INTERVAL \\'90 days\\'\\n   GROUP BY room, _time\\n   ORDER BY _time\\'\\'\\'\\n )\\n print(table.to_pandas().to_markdown())\\n client.close()\\n \\nquerySQL()\\n         \\nCopy\\n\\n```\\nc\\n```\\n         from influxdb_client_3 import InfluxDBClient3\\nimport os\\ndatabase = os.getenv(\\'INFLUX_DATABASE\\')\\ntoken = os.getenv(\\'INFLUX_TOKEN\\')\\nhost=\"https://us-east-1-1.aws.cloud2.influxdata.com\"\\ndef write_line_protocol():\\n client = InfluxDBClient3(host, database=database, token=token)\\n \\n record = \"home,room=Living\\\\\\\\ Room temp=22.2,hum=36.4,co=17i\"\\n \\n print(\"Writing record:\", record )\\n client.write(record)\\n \\n client.close()\\nwrite_line_protocol()\\n\\n         \\nCopy\\n\\n```\\nc\\n```\\n         @main\\nstruct QueryCpuData: AsyncParsableCommand {\\n @Option(name: .shortAndLong, help: \"The name or id of the bucket destination.\")\\n private var bucket: String\\n @Option(name: .shortAndLong, help: \"The name or id of the organization destination.\")\\n private var org: String\\n @Option(name: .shortAndLong, help: \"Authentication token.\")\\n private var token: String\\n @Option(name: .shortAndLong, help: \"HTTP address of InfluxDB.\")\\n private var url: String\\n}\\nextension QueryCpuData {\\n mutating func run() async throws {\\n  //\\n  // Initialize Client with default Bucket and Organization\\n  //\\n  let client = InfluxDBClient(\\n      url: url,\\n      token: token,\\n      options: InfluxDBClient.InfluxDBOptions(bucket: bucket, org: org))\\n  // Flux query\\n  let query = \"\"\"\\n        from(bucket: \"\\\\(self.bucket)\")\\n          |> range(start: -10m)\\n          |> filter(fn: (r) => r[\"_measurement\"] == \"cpu\")\\n          |> filter(fn: (r) => r[\"cpu\"] == \"cpu-total\")\\n          |> filter(fn: (r) => r[\"_field\"] == \"usage_user\" or r[\"_field\"] == \"usage_system\")\\n          |> last()\\n        \"\"\"\\n  print(\"\\\\nQuery to execute:\\\\n\\\\(query)\\\\n\")\\n  let response = try await client.queryAPI.queryRaw(query: query)\\n  let csv = String(decoding: response, as: UTF8.self)\\n  print(\"InfluxDB response: \\\\(csv)\")\\n  client.close()\\n }\\n}\\n         \\nCopy\\n\\n```\\nc\\n```\\n         import ArgumentParser\\nimport Foundation\\nimport InfluxDBSwift\\nimport InfluxDBSwiftApis\\n@main\\nstruct WriteData: AsyncParsableCommand {\\n @Option(name: .shortAndLong, help: \"The name or id of the bucket destination.\")\\n private var bucket: String\\n @Option(name: .shortAndLong, help: \"The name or id of the organization destination.\")\\n private var org: String\\n @Option(name: .shortAndLong, help: \"Authentication token.\")\\n private var token: String\\n @Option(name: .shortAndLong, help: \"HTTP address of InfluxDB.\")\\n private var url: String\\n}\\nextension WriteData {\\n mutating func run() async throws {\\n  //\\n  // Initialize Client with default Bucket and Organization\\n  //\\n  let client = InfluxDBClient(\\n      url: url,\\n      token: token,\\n      options: InfluxDBClient.InfluxDBOptions(bucket: bucket, org: org))\\n  //\\n  // Record defined as Data Point\\n  //\\n  let recordPoint = InfluxDBClient\\n      .Point(\"demo\")\\n      .addTag(key: \"type\", value: \"point\")\\n      .addField(key: \"value\", value: .int(2))\\n  //\\n  // Record defined as Data Point with Timestamp\\n  //\\n  let recordPointDate = InfluxDBClient\\n      .Point(\"demo\")\\n      .addTag(key: \"type\", value: \"point-timestamp\")\\n      .addField(key: \"value\", value: .int(2))\\n      .time(time: .date(Date()))\\n  try await client.makeWriteAPI().write(points: [recordPoint, recordPointDate])\\n  print(\"Written data:\\\\n\\\\n\\\\([recordPoint, recordPointDate].map { \"\\\\t- \\\\($0)\" }.joined(separator: \"\\\\n\"))\")\\n  print(\"\\\\nSuccess!\")\\n  client.close()\\n }\\n}\\n         \\nCopy\\n\\n```\\nc\\n```\\n         import {InfluxDBClient} from \\'@influxdata/influxdb3-client\\'\\nimport {tableFromArrays} from \\'apache-arrow\\';\\nconst database = process.env.INFLUX_DATABASE;\\nconst token = process.env.INFLUX_TOKEN;\\nconst host = \"https://us-east-1-1.aws.cloud2.influxdata.com\";\\nasync function main() {\\n  const client = new InfluxDBClient({host, token})\\n  const query = `\\n  SELECT\\n   room,\\n   DATE_BIN(INTERVAL \\'1 day\\', time) AS _time,\\n   AVG(temp) AS temp,\\n   AVG(hum) AS hum,\\n   AVG(co) AS co\\n  FROM home\\n  WHERE time >= now() - INTERVAL \\'90 days\\'\\n  GROUP BY room, _time\\n  ORDER BY _time\\n  `\\n  const result = await client.query(query, database)\\n  const data = {room: [], day: [], temp: []}\\n  for await (const row of result) {\\n   data.day.push(new Date(row._time).toISOString())\\n   data.room.push(row.room)\\n   data.temp.push(row.temp)\\n  }\\n  console.table([...tableFromArrays(data)])\\n  client.close()\\n}\\nmain()\\n         \\nCopy\\n\\n```\\nc\\n```\\n         import {InfluxDBClient} from \\'@influxdata/influxdb3-client\\'\\nconst database = process.env.INFLUX_DATABASE;\\nconst token = process.env.INFLUX_TOKEN;\\nconst host = \"https://us-east-1-1.aws.cloud2.influxdata.com\";\\nasync function main() {\\n  const client = new InfluxDBClient({host, token})\\n  const record = \"home,room=Living\\\\\\\\ Room temp=22.2,hum=36.4,co=17i\"\\n  await client.write(record, database)\\n  client.close()\\n}\\nmain()\\n         \\nCopy\\n\\n```\\nc\\n```\\n         package com.influxdb3.examples;\\nimport com.influxdb.v3.client.InfluxDBClient;\\nimport java.util.stream.Stream;\\npublic final class Query {\\n  private Query() {\\n    //not called\\n  }\\n  /**\\n   * @throws Exception\\n   */\\n  public static void main() throws Exception {\\n    final String hostUrl = \"https://us-east-1-1.aws.cloud2.influxdata.com\";\\n    final char[] authToken = (System.getenv(\"INFLUX_TOKEN\")).toCharArray();\\n    final String database = System.getenv(\"INFLUX_DATABASE\");\\n    try (InfluxDBClient client = InfluxDBClient.getInstance(hostUrl, authToken, database)) {\\n      String sql = \"\"\"\\n        SELECT\\n          room,\\n          DATE_BIN(INTERVAL \\'1 day\\', time) AS _time,\\n          AVG(temp) AS temp, AVG(hum) AS hum, AVG(co) AS co\\n        FROM home\\n        WHERE time >= now() - INTERVAL \\'90 days\\'\\n        GROUP BY room, _time\\n        ORDER BY _time\"\"\";\\n      String layoutHeading = \"| %-16s | %-12s | %-6s |%n\";\\n      System.out.printf(\"--------------------------------------------------------%n\");\\n      System.out.printf(layoutHeading, \"day\", \"room\", \"temp\");\\n      System.out.printf(\"--------------------------------------------------------%n\");\\n      String layout = \"| %-16s | %-12s | %.2f |%n\";\\n      try (Stream stream = client.query(sql)) {\\n        stream.forEach(row -> System.out.printf(layout, row[1], row[0], row[2]));\\n      }\\n    }\\n  }\\n}\\n         \\nCopy\\n\\n```\\nc\\n```\\n         package com.influxdb3.examples;\\nimport com.influxdb.v3.client.InfluxDBClient;\\npublic final class Write {\\n  public static void main() throws Exception {\\n    final String hostUrl = \"https://us-east-1-1.aws.cloud2.influxdata.com\";\\n    final char[] authToken = (System.getenv(\"INFLUX_TOKEN\")).toCharArray();\\n    final String database = System.getenv(\"INFLUX_DATABASE\");\\n    try (InfluxDBClient client = InfluxDBClient.getInstance(hostUrl, authToken, database)) {\\n      String record = \"home,room=Living\\\\\\\\ Room temp=22.2,hum=36.4,co=17i\";\\n      System.out.printf(\"Write record: %s%n\", record);\\n      client.writeRecord(record);\\n    }\\n  }\\n}\\n         \\nCopy\\n\\n```\\nc\\n```\\n         InfluxDB2::Client.use(\\'https://localhost:8086\\', \\'my-token\\', org: \\'my-org\\') do |client|\\n result = client\\n  .create_query_api\\n  .query_raw(query: \\'from(bucket:\"my-bucket\") |> range(start: 1970-01-01) |> last()\\')\\n puts result\\nend\\n         \\nCopy\\n\\n```\\nc\\n```\\n         InfluxDB2::Client.use(\\'https://localhost:8086\\', \\'my-token\\',\\n           bucket: \\'my-bucket\\',\\n           org: \\'my-org\\',\\n           precision: InfluxDB2::WritePrecision::NANOSECOND) do |client|\\n write_api = client.create_write_api\\n write_api.write(data: \\'h2o,location=west value=33i 15\\')\\nend\\n         \\nCopy\\n\\n```\\nc\\n```\\n         package example\\nimport org.apache.pekko.actor.ActorSystem\\nimport org.apache.pekko.stream.scaladsl.Sink\\nimport com.influxdb.client.scala.InfluxDBClientScalaFactory\\nimport com.influxdb.query.FluxRecord\\nimport scala.concurrent.Await\\nimport scala.concurrent.duration.Duration\\nobject InfluxDB2ScalaExample {\\n implicit val system: ActorSystem = ActorSystem(\"it-tests\")\\n def main(args: Array[String]): Unit = {\\n  val influxDBClient = InfluxDBClientScalaFactory\\n   .create(\"http://localhost:8086\", \"my-token\".toCharArray, \"my-org\")\\n  val fluxQuery = (\"from(bucket: \\\\\"my-bucket\\\\\")\\\\n\"\\n   + \" |> range(start: -1d)\"\\n   + \" |> filter(fn: (r) => (r[\\\\\"_measurement\\\\\"] == \\\\\"cpu\\\\\" and r[\\\\\"_field\\\\\"] == \\\\\"usage_system\\\\\"))\")\\n  //Result is returned as a stream\\n  val results = influxDBClient.getQueryScalaApi().query(fluxQuery)\\n  //Example of additional result stream processing on client side\\n  val sink = results\\n   //filter on client side using `filter` built-in operator\\n   .filter(it => \"cpu0\" == it.getValueByKey(\"cpu\"))\\n   //take first 20 records\\n   .take(20)\\n   //print results\\n   .runWith(Sink.foreachFluxRecord‚ü®45‚ü©\\n   ))\\n  // wait to finish\\n  Await.result(sink, Duration.Inf)\\n  influxDBClient.close()\\n  system.terminate()\\n }\\n}\\n         \\nCopy\\n\\n```\\nc\\n```\\n           \\npackage com.influxdb.client.scala.internal\\nimport org.apache.pekko.Done\\nimport org.apache.pekko.stream.scaladsl.{Flow, Keep, Sink, Source}\\nimport com.influxdb.client.InfluxDBClientOptions\\nimport com.influxdb.client.domain.WritePrecision\\nimport com.influxdb.client.internal.{AbstractWriteBlockingClient, AbstractWriteClient}\\nimport com.influxdb.client.scala.WriteScalaApi\\nimport com.influxdb.client.service.WriteService\\nimport com.influxdb.client.write.{Point, WriteParameters}\\nimport javax.annotation.Nonnull\\nimport scala.collection.immutable.ListMap\\nimport scala.concurrent.Future\\nimport scala.jdk.CollectionConverters._\\nclass WriteScalaApiImpl(@Nonnull service: WriteService, @Nonnull options: InfluxDBClientOptions)\\n extends AbstractWriteBlockingClient(service, options) with WriteScalaApi {\\n override def writeRecord(precision: Option[WritePrecision], bucket: Option[String], org: Option[String]): Sink[String, Future[Done]] = {\\n  Flow[String]\\n   .map(record => Seq(new AbstractWriteClient.BatchWriteDataRecord(record)))\\n   .toMat(Sink.foreach(batch => writeHttp(precision, bucket, org, batch)))(Keep.right)\\n }\\n override def writeRecords(precision: Option[WritePrecision], bucket: Option[String], org: Option[String]): Sink[Seq[String], Future[Done]] = {\\n  writeRecords(toWriteParameters(precision, bucket, org))\\n }\\n override def writeRecords(parameters: WriteParameters): Sink[Seq[String], Future[Done]] = {\\n  Flow[Seq[String]]\\n   .map(records => records.map(record => new AbstractWriteClient.BatchWriteDataRecord(record)))\\n   .toMat(Sink.foreach(batch => writeHttp(parameters, batch)))(Keep.right)\\n }\\n\\n override def writePoint(bucket: Option[String], org: Option[String]): Sink[Point, Future[Done]] = {\\n  Flow[Point]\\n   .map(point => (point.getPrecision, Seq(new AbstractWriteClient.BatchWriteDataPoint(point, options))))\\n   .toMat(Sink.foreach(batch => writeHttp(Some(batch._1), bucket, org, batch._2)))(Keep.right)\\n }\\n override def writePoints(bucket: Option[String], org: Option[String]): Sink[Seq[Point], Future[Done]] = {\\n  writePoints(new WriteParameters(bucket.orNull, org.orNull, null, null))\\n }\\n override def writePoints(parameters: WriteParameters): Sink[Seq[Point], Future[Done]] = {\\n  Flow[Seq[Point]]\\n   // create ordered Map\\n   .map(records => records.foldRight(ListMap.empty[WritePrecision, Seq[Point]]) {\\n    case (point, map) => map.updated(point.getPrecision, point +: map.getOrElse(point.getPrecision, Seq()))\\n   }.toList.reverse)\\n   .map(grouped => grouped.map(group => (group._1, group._2.map(point => new AbstractWriteClient.BatchWriteDataPoint(point, options)))))\\n   .flatMapConcat(batches => Source(batches))\\n   .toMat(Sink.foreach(batch => writeHttp(parameters.copy(batch._1, options), batch._2)))(Keep.right)\\n }\\n override def writeMeasurementM‚ü®46‚ü©: Sink[M, Future[Done]] = {\\n  Flow[M]\\n   .map(measurement => {\\n    val parameters = toWriteParameters(precision, bucket, org)\\n    Seq(toMeasurementBatch(measurement, parameters.precisionSafe(options)))\\n   })\\n   .toMat(Sink.foreach(batch => writeHttp(precision, bucket, org, batch)))(Keep.right)\\n }\\n override def writeMeasurementsM‚ü®46‚ü©: Sink[Seq[M], Future[Done]] = {\\n  writeMeasurements(toWriteParameters(precision, bucket, org))\\n }\\n override def writeMeasurementsM‚ü®47‚ü©: Sink[Seq[M], Future[Done]] = {\\n  Flow[Seq[M]]\\n   .map(records => records.map(record => toMeasurementBatch(record, parameters.precisionSafe(options))))\\n   .toMat(Sink.foreach(batch => writeHttp(parameters, batch)))(Keep.right)\\n }\\n private def writeHttp(precision: Option[WritePrecision], bucket: Option[String], org: Option[String], batch: Seq[AbstractWriteClient.BatchWriteData]): Done = {\\n  writeHttp(toWriteParameters(precision, bucket, org), batch)\\n }\\n private def writeHttp(parameters: WriteParameters, batch: Seq[AbstractWriteClient.BatchWriteData]): Done = {\\n  write(parameters, batch.toList.asJava.stream())\\n  Done.done()\\n }\\n private def toWriteParameters(precision: Option[WritePrecision], bucket: Option[String], org: Option[String]): WriteParameters = {\\n  val parameters = new WriteParameters(bucket.orNull, org.orNull, precision.orNull, null)\\n  parameters.check(options)\\n  parameters\\n }\\n}\\n \\n\\n         \\nCopy\\n\\n```\\nc\\n```\\n         package influxdbv3\\nimport (\\n \"context\"\\n \"fmt\"\\n \"io\"\\n \"os\"\\n \"text/tabwriter\"\\n \"github.com/apache/arrow/go/v12/arrow\"\\n \"github.com/InfluxCommunity/influxdb3-go/influx\"\\n)\\nfunc QuerySQL() error {\\n url := \"https://us-east-1-1.aws.cloud2.influxdata.com\"\\n token := os.Getenv(\"INFLUX_TOKEN\")\\n database := os.Getenv(\"INFLUX_DATABASE\")\\n\\t\\n client, err := influx.New(influx.Configs{\\n\\tHostURL: url,\\n\\tAuthToken: token,\\n })\\n defer func (client *influx.Client) {\\n\\terr := client.Close()\\n\\tif err != nil {\\n\\t\\tpanic(err)\\n\\t}\\n }(client)\\n query := `\\n  SELECT\\n\\t room,\\n\\t DATE_BIN(INTERVAL \\'1 day\\', time) AS _time,\\n\\t AVG(temp) AS temp,\\n\\t AVG(hum) AS hum,\\n\\t AVG(co) AS co\\n\\tFROM home\\n\\tWHERE time >= now() - INTERVAL \\'90 days\\'\\n\\tGROUP BY room, _time\\n\\tORDER BY _time\\n`\\n iterator, err := client.Query(context.Background(), database, query)\\n if err != nil {\\n  panic(err)\\n }\\n w := tabwriter.NewWriter(io.Discard, 4, 4, 1, \\' \\', 0)\\n w.Init(os.Stdout, 0, 8, 0, \\'\\\\t\\', 0)\\n fmt.Fprintln(w, \"day\\\\troom\\\\ttemp\")\\n for iterator.Next() {\\n\\trow := iterator.Value()\\n\\tday := (row[\"_time\"].(arrow.Timestamp)).ToTime(arrow.TimeUnit(arrow.Nanosecond))\\n\\tfmt.Fprintf(w, \"%s\\\\t%s\\\\t%.2f\\\\n\", day, row[\"room\"], row[\"temp\"])\\n }\\n w.Flush()\\n return nil\\n}\\n         \\nCopy\\n\\n```\\nc\\n```\\n         package influxdbv3\\nimport (\\n \"context\"\\n \"os\"\\n \"fmt\"\\n \"github.com/InfluxCommunity/influxdb3-go/influx\"\\n)\\nfunc WriteLineProtocol() error {\\n url := \"https://us-east-1-1.aws.cloud2.influxdata.com\"\\n token := os.Getenv(\"INFLUX_TOKEN\")\\n database := os.Getenv(\"INFLUX_DATABASE\")\\n\\t\\n client, err := influx.New(influx.Configs{\\n\\tHostURL: url,\\n\\tAuthToken: token,\\n })\\n defer func (client *influx.Client) {\\n\\terr := client.Close()\\n\\tif err != nil {\\n\\t\\tpanic(err)\\n\\t}\\n }(client)\\n record := \"home,room=Living\\\\\\\\ Room temp=22.2,hum=36.4,co=17i\"\\n fmt.Println(\"Writing record: \", record)\\n err = client.Write(context.Background(), database, []byte(record))\\n if err != nil {\\n  panic(err)\\n }\\n return nil\\n}\\n         \\nCopy\\n\\n```\\nc\\n```\\n         using System;\\nusing System.Threading.Tasks;\\nusing InfluxDB3.Client;\\nusing InfluxDB3.Client.Query;\\nnamespace InfluxDBv3;\\npublic class Query\\n{\\n static async Task QuerySQL()\\n {\\n  const string hostUrl = \"https://us-east-1-1.aws.cloud2.influxdata.com\";\\n  string? database = System.Environment.GetEnvironmentVariable(\"INFLUX_DATABASE\");\\n  string? authToken = System.Environment.GetEnvironmentVariable(\"INFLUX_TOKEN\");\\n  using var client = new InfluxDBClient(hostUrl, authToken: authToken, database: database);\\n \\n  const string sql = @\"\\n   SELECT\\n    room,\\n    DATE_BIN(INTERVAL \\'1 day\\', time) AS _time,\\n    AVG(temp) AS temp,\\n    AVG(hum) AS hum,\\n    AVG(co) AS co\\n   FROM home\\n   WHERE time >= now() - INTERVAL \\'90 days\\'\\n   GROUP BY room, _time\\n   ORDER BY _time\\n  \";\\n  Console.WriteLine(\"{0,-30}{1,-15}{2,-15}\", \"day\", \"room\", \"temp\");\\n  await foreach (var row in client.Query(query: sql))\\n  {\\n   Console.WriteLine(\"{0,-30}{1,-15}{2,-15}\", row[1], row[0], row[2]);\\n  }\\n  Console.WriteLine();\\n }\\n}\\n         \\nCopy\\n\\n```\\nc\\n```\\n         using System;\\nusing System.Threading.Tasks;\\nusing InfluxDB3.Client;\\nusing InfluxDB3.Client.Query;\\nnamespace InfluxDBv3;\\npublic class Write\\n{\\n public static async Task WriteLineProtocol()\\n {\\n  const string hostUrl = \"https://us-east-1-1.aws.cloud2.influxdata.com\";\\n  string? database = System.Environment.GetEnvironmentVariable(\"INFLUX_DATABASE\");\\n  string? authToken = System.Environment.GetEnvironmentVariable(\"INFLUX_TOKEN\");\\n  using var client = new InfluxDBClient(hostUrl, authToken: authToken, database: database);\\n  const string record = \"home,room=Living\\\\\\\\ Room temp=22.2,hum=36.4,co=17i\";\\n  Console.WriteLine(\"Write record: {0,-30}\", record);\\n  await client.WriteRecordAsync(record: record);\\n }\\n}\\n\\n         \\nCopy\\n\\n```\\nc\\n```\\n         client <- InfluxDBClient$new(url = \"http://localhost:8086\",\\n               token = \"my-token\",\\n               org = \"my-org\")\\n              \\ndata <- client$query(\\'from(bucket: \"my-bucket\") |> range(start: -1h) |> drop(columns: [\"_start\", \"_stop\"])\\')\\ndata\\n         \\nCopy\\n\\n```\\nc\\n```\\n         client <- InfluxDBClient$new(url = \"http://localhost:8086\",\\n               token = \"my-token\",\\n               org = \"my-org\")\\ndata <- ...\\nresponse <- client$write(data, bucket = \"my-bucket\", precision = \"us\",\\n             measurementCol = \"name\",\\n             tagCols = c(\"region\", \"sensor_id\"),\\n             fieldCols = c(\"altitude\", \"temperature\"),\\n             timeCol = \"time\")\\n         \\nCopy\\n\\n```\\nc\\nRead Documentation for v2 ‚ü®48‚ü© Read Documentation for v3 ‚ü®49‚ü©\\n## Loved by developers, trusted by enterprises\\n  * ![](https://images.ctfassets.net/o7xu9whrs0u9/1TRqQQkfNQZgutTJpyiRi2/d1ac892959d307e8ae8e84cfb322ab50/Loft-Orbital-logo.jpg)\\n  * ![](https://images.ctfassets.net/o7xu9whrs0u9/6sU6VV4Xw7HScyLgTp0C1O/6527f80fcb226b70bab138f579c5fd1e/Capital-One-logo-2.png)\\n  * ![](https://images.ctfassets.net/o7xu9whrs0u9/1V4Q2lqtnqbtrtRfDUez8N/ee4664483f75cd2ffa4bbcdfe6cfd1f9/terega-logo.png)\\n  * ![](https://images.ctfassets.net/o7xu9whrs0u9/DcavnNg4MPKE6bB29vzbs/f672258bee9de62f5792d09ac1b176e3/Volvo-logo.jpg)\\n  * ![](https://images.ctfassets.net/o7xu9whrs0u9/1H5zjgYO8fZ98o3Xykq4id/dc3afa4073139a9788ec50c875c346f7/WOW-logo.jpg)\\n  * ![](https://images.ctfassets.net/o7xu9whrs0u9/fG3xyHVfkrlf2cqUt321Q/f4fa23852f4bf3aa230dfc6876cb1309/majik-systems_logo.jpg)\\n  * ![](https://images.ctfassets.net/o7xu9whrs0u9/2QBQvye3hk4AhjQL4HoSvW/01ac7878e708a5d9cad23b3405c61ba2/juniz-logo.svg)\\n\\n\\n### 500M+\\nMetrics collected daily\\n### Mission-critical monitoring\\nReal-time data access for query\\nLOFT ORBITAL\\n### Space Made Simple: How Loft Orbital Delivers Unparalleled Speed-to-Space with InfluxDB Cloud\\nRead Case Study ‚ü®50‚ü©\\n### 65M+\\ndaly events processed\\n### 45x\\nmore resource efficient\\nCAPITAL ONE\\n### \"InfluxDB is a high-speed read and write database. The data is written in real-time, you can read it in real-time, and while reading, you can apply your machine learning model. So, in real-time, you can forecast and detect anomalies.\"\\n**Rajeev Tomer** Sr. Manager of Data Engineering\\nRead Case Study ‚ü®51‚ü©\\n### 50%\\nlower total cost of ownership\\n### 100K\\nreal-time metrics with simplified deployment\\nTER√âGA\\n### Ter√©ga Replaced Its Legacy Data Historian with InfluxDB\\n**Lorem ipsum** Lorem ipsum dolor sit amet consectetur.\\nRead Case Study ‚ü®52‚ü©\\n### 65M+\\ndaly events processed\\n### 45x\\nmore resource efficient\\nVOLVO\\n### ‚ÄúWe decided, from a monitoring perspective, that we are... going with a best of breed setup. So, we put the best tools in place, like InfluxDB for metrics monitoring.‚Äù\\n**Daniel Putz** DevOps Enablement\\nRead Case Study ‚ü®53‚ü©\\n### 65M+\\ndaly events processed\\n### 45x\\nmore resource efficient\\nWIDEOPENWEST\\n### \"I was blown away with how easy it was to install and configure InfluxDB. The clustering was easy. The documentation was great, and the support has been second to none.\"\\n**Dylan Shorter** Engineer III, Software and Product Integration Engineering\\nRead Case Study ‚ü®54‚ü©\\n### 45%\\nLess equipment downtime\\n### 10%\\nReduced waste\\nMAJIK SYSTEMS\\n### From Reactive to Proactive: How MAJiK Systems Embraced Predictive Maintenance with InfluxDB and Time Series Data\\n**Dylan Shorter** Engineer III, Software and Product Integration Engineering\\nRead Case Study ‚ü®55‚ü©\\n### 65M+\\ndaly events processed\\n### 45x\\nmore resource efficient\\nJU:NIZ ENERGY\\n### ‚ÄúWith InfluxDB Cloud Dedicated, the great thing is that we don\\'t need to think about data storage costs or usage anymore because data storage gets way cheaper.‚Äù\\n**Ricardo Kissinger** Head of IT Infrastructure and IT Security \\nRead Case Study ‚ü®56‚ü©\\n## InfluxDB is a G2 Leader in Time Series\\n‚ÄúInfluxDB is a strong database built specifically for time series data. It has made working with such data seamless and easy.‚Äù ‚Äî Verified G2 reviewer\\nRead reviews ‚ü®57‚ü©\\n![G2 - Users Most Likely To Recommend‚ü®58‚ü©]\\n![G2 - Leader Winter 2024‚ü®59‚ü©]\\n![G2-MomentumLeader-Winter-2024‚ü®60‚ü©]\\n![G2 Mid-Market Leader‚ü®61‚ü©]\\n![G2 - Best Usability‚ü®62‚ü©]\\n![G2 - Best Relationship‚ü®62‚ü©]\\nINDUSTRIES\\n## Time series analytics for every industry\\nToday, InfluxDB deployments span multiple industries, with customers running at scale in any environment‚Äîpublic and private cloud, on-premises, and at the edge. \\nManufacturing\\nEnergy and Utilities\\nTelecommunications\\nConsumer IoT\\nIndustrial IoT\\nAerospace\\n## Manufacturing\\nAnalyze production data streams in real-time to identify bottlenecks, prevent downtime, and power predictive maintenance for your industrial equipment.\\nLearn More ‚ü®63‚ü©\\n## Energy and Utilities\\nMonitor, optimize, and manage renewable energy and traditional power systems to achieve smart grid balancing and optimization. Forecast and predict maintenance needs for renewable energy sources, such as wind turbines and solar farms. \\nLearn More ‚ü®64‚ü©\\n## Telecommunications\\nAnalyze network performance and usage patterns in telecommunication infrastructure. Improve quality of service, optimize infrastructure resources, and reduce operational costs.\\nLearn More ‚ü®65‚ü©\\n## Consumer IoT \\nUse real-time monitoring and analytics to optimize energy consumption and improve quality of life.\\nLearn More ‚ü®66‚ü©\\n## Industrial IoT\\nOptimize operational processes with real-time insights from industrial equipment and sensors.\\nLearn More ‚ü®67‚ü©\\n## Aerospace\\nGet real-time insights from satellites, networks, and every stage of the launch operation process. Reduce errors and accelerate time to market in this mission-critical space.\\nLearn More ‚ü®68‚ü©\\n## Manufacturing\\nAnalyze production data streams in real-time to identify bottlenecks, prevent downtime and power predictive maintenance for your industrial equipment.\\nLearn More ‚ü®63‚ü©\\n## Energy and Utilities\\nMonitor, optimize, and manage renewable energy and traditional power systems to achieve smart grid balancing and optimization. Forecast and predict maintenance needs for your renewable energy sources such as wind turbines and solar farms. \\nLearn More ‚ü®64‚ü©\\n## Telecommunications\\nAnalyze network performance and usage patterns in telecommunication infrastructure. Improve quality of service, optimize infrastructure resources, and reduce operational costs.\\nLearn More ‚ü®65‚ü©\\n## Consumer IoT \\nUse real-time monitoring and analytics to optimize energy consumption and improve quality of life.\\nLearn More ‚ü®66‚ü©\\n## Industrial IoT\\nOptimize operational processes with real-time insights from industrial equipment and sensors.\\nLearn More ‚ü®67‚ü©\\n## Aerospace\\nGet real-time insights from satellites, networks, and every stage of the launch operation process. Reduce errors and accelerate time to market in this mission-critical space.\\nLearn More ‚ü®68‚ü©\\n## Analyze time series data from any workload\\n## Real-Time Analytics\\nQuery data immediately upon arrival for real-time insights across systems and applications\\nLearn More ‚ü®69‚ü©\\n![code‚ü®70‚ü©]\\n## Network and Device Telemetry\\nMonitor and control devices and sensors in IoT, network, and field deployments.\\nLearn More ‚ü®71‚ü©\\n![code‚ü®72‚ü©]\\n## Modern Data Historian\\nUnleash and transform on-site industrial OT data in the manufacturing plant and on the factory floor.\\nLearn More ‚ü®73‚ü©\\n![code‚ü®74‚ü©]\\n## Machine Learning and AI\\nShare real-time data with open ML/AI tools to create predictive analytics for automated, intelligent applications and systems.\\nLearn More ‚ü®75‚ü©\\n![ai‚ü®76‚ü©]\\n## Real-Time Analytics\\nQuery data immediately upon arrival for real-time insights across systems and applications.\\nLearn More ‚ü®69‚ü©\\n![code‚ü®77‚ü©]\\n## Network & Device Telemetry\\nMonitor and control devices and sensors in IoT, network, and field deployments. \\nLearn More ‚ü®71‚ü©\\n![code‚ü®78‚ü©]\\n## Modern Data Historian\\nUnleash and transform on-site industrial OT data in the manufacturing plant and on the factory floor.\\nLearn More ‚ü®73‚ü©\\n![code‚ü®79‚ü©]\\n## Machine Learning & AI\\nShare real-time data with open ML/AI tools to create predictive analytics for intelligent applications and systems.\\nLearn More ‚ü®75‚ü©\\n![ai‚ü®80‚ü©]\\n## Start building now\\nGet started in minutes for free. Upgrade anytime to get $250 in credit for your project.\\nGet InfluxDB‚ü®81‚ü© Find the right product ‚ü®82‚ü©\\n![InfluxData logo‚ü®2‚ü©]\\n##### Product & Solutions\\n  * InfluxDB‚ü®13‚ü©\\n  * InfluxDB Cloud Serverless‚ü®83‚ü©\\n  * InfluxDB Cloud Dedicated‚ü®84‚ü©\\n  * InfluxDB Clustered‚ü®85‚ü©\\n  * InfluxDB Comparison‚ü®86‚ü©\\n  * Integrations‚ü®35‚ü©\\n  * Data Lake / Warehouse‚ü®87‚ü©\\n  * Data Collector‚ü®88‚ü©\\n  * Pricing‚ü®11‚ü©\\n  * Use Cases‚ü®89‚ü©\\n  * Time Series Data‚ü®90‚ü©\\n  * Time Series Database‚ü®91‚ü©\\n  * Time Series Forecasting‚ü®92‚ü©\\n  * Data Warehousing‚ü®87‚ü©\\n  * Network Monitoring‚ü®93‚ü©\\n\\n\\n##### Developers\\n  * Guides‚ü®94‚ü©\\n  * Blog‚ü®95‚ü©\\n  * Customers‚ü®96‚ü©\\n  * Support‚ü®97‚ü©\\n  * Webinars‚ü®94‚ü©\\n  * Documentation‚ü®98‚ü©\\n  * Events & Live Training‚ü®99‚ü©\\n  * InfluxDB University‚ü®100‚ü©\\n  * Community‚ü®101‚ü©\\n  * InfluxDB OSS‚ü®10‚ü©\\n  * Telegraf‚ü®88‚ü©\\n  * AWS‚ü®102‚ü©\\n  * Product Integrations‚ü®35‚ü©\\n  * Glossary‚ü®103‚ü©\\n\\n\\n##### Company\\n  * About‚ü®104‚ü©\\n  * Careers‚ü®105‚ü©\\n  * Partners‚ü®106‚ü©\\n  * Newsroom‚ü®107‚ü©\\n  * Contact Us‚ü®108‚ü©\\n  * Customers‚ü®96‚ü©\\n\\n\\n##### Sign up for the InfluxData newsletter\\n548 Market St, PMB 77953San Francisco, California 94104\\n##### Follow Us\\n ‚ü®109‚ü©  ![twitter‚ü®110‚ü© ](https://influxdata.com/<https:/twitter.com/influxdb>)  ‚ü®111‚ü©  ‚ü®112‚ü©  ‚ü®113‚ü©\\n¬© 2025 InfluxData Inc. All Rights Reserved. \\nLegal‚ü®114‚ü© Security‚ü®115‚ü© Cookie Policy‚ü®116‚ü© Comparison‚ü®117‚ü©\\n' references_markdown='\\n\\n## References\\n\\n‚ü®1‚ü© https://influxdata.com/<#content>: Skip to content\\n‚ü®2‚ü© https://influxdata.com/images/influxdata_full_white-f14e8966.svg:  ![logo\\n‚ü®3‚ü© https://www.influxdata.com/images/influxdata_full_navy-a7ca2ff4.svg:  ![logo\\n‚ü®4‚ü© https://influxdata.com/</products/influxdb-cloud/>: Fully Managed\\n‚ü®5‚ü© https://influxdata.com/images/gr-arrow-f1ef722d.svg:  InfluxDB Cloud Serverless ![arrow\\n‚ü®6‚ü© https://influxdata.com/</products/influxdb-3-enterprise/>:  InfluxDB 3 Enterprise ALPHA \\n‚ü®7‚ü© https://images.ctfassets.net/o7xu9whrs0u9/5jg5ny55E5TGxRZ3qXE953/972a5eb5e31e9dbcdf4fbf34f5079c69/icons8-electronics.svg:  ![icon\\n‚ü®8‚ü© https://images.ctfassets.net/o7xu9whrs0u9/20KtkkDq0zlSoYAfYRMns/815c8fecdd26d4cd3a9ca12786ca75aa/icon-journey.svg:  ![icon\\n‚ü®9‚ü© https://images.ctfassets.net/o7xu9whrs0u9/4ylr5sWS3lVaaoHzZ3uqMB/e5d30fe9c4652c34ac6fc7119968df87/icons-workflow.svg:  ![icon\\n‚ü®10‚ü© https://influxdata.com/</products/influxdb/>:  InfluxDB OSS ALPHA \\n‚ü®11‚ü© https://influxdata.com/</influxdb-pricing/>:  Pricing \\n‚ü®12‚ü© https://influxdata.com/</contact-sales/>:  Contact Us \\n‚ü®13‚ü© https://influxdata.com/</get-influxdb/>:  Start Now \\n‚ü®14‚ü© https://influxdata.com/</blog/amazon-timestream-influxdb-read-replicas/>: Learn More \\n‚ü®15‚ü© https://influxdata.com/</blog/influxdb3-open-source-public-alpha-jan-27>: Learn More\\n‚ü®16‚ü© https://images.ctfassets.net/o7xu9whrs0u9/4iAxow4OmfCgKqhPXxV4Zp/f45135d83b967c3e09224c1993ccaf09/tesla-logo.png: Logo 1\\n‚ü®17‚ü© https://images.ctfassets.net/o7xu9whrs0u9/23mcsmtwSLhHVevn3sI0CT/38018bf7bb7a61f31149867029b698c6/Honeywell-logo.png: Logo 1\\n‚ü®18‚ü© https://images.ctfassets.net/o7xu9whrs0u9/37PKOBf6wN3WSNkt76J00/9bb4e64a7b0cd1ec5718101067fcd272/intuit-logo-1.png: Logo 1\\n‚ü®19‚ü© https://images.ctfassets.net/o7xu9whrs0u9/5xsw9qWvmGJE87Iisf1wPj/62073b98e1c2a2e20354c92eb1383cf1/nvidia-logo.png: nvidia\\n‚ü®20‚ü© https://images.ctfassets.net/o7xu9whrs0u9/6sU6VV4Xw7HScyLgTp0C1O/6527f80fcb226b70bab138f579c5fd1e/Capital-One-logo-2.png: Capital-One\\n‚ü®21‚ü© https://images.ctfassets.net/o7xu9whrs0u9/5orMeJlnN0Qkq49TkfOWJo/bdb9441af5af5fdcffd4fac6314bd50b/ibm-logo.png: accenture\\n‚ü®22‚ü© https://images.ctfassets.net/o7xu9whrs0u9/2XJwEwQQFyRt5J4nqCXHQM/d88815b4a5120e1f2e0573fc7613cc80/siemence-logo.png: siemence\\n‚ü®23‚ü© https://images.ctfassets.net/o7xu9whrs0u9/36ozeV4yYSt2rGjp1NKUxf/1bdeeecf434dd5cadb0af4771ad97082/salesforce-logo.png: salesforce\\n‚ü®24‚ü© https://images.ctfassets.net/o7xu9whrs0u9/4vaSq5WKwTlgWTxeDaSpSO/7b70daa7c9c677e963fa8e7472dc46c8/ptc-logo.png: PTC\\n‚ü®25‚ü© https://images.ctfassets.net/o7xu9whrs0u9/6KwshpKe2UAKN1V1OWCseg/0226a1e50b2b63d3ab944174883af333/citrix-logo-new.png: citrix\\n‚ü®26‚ü© https://images.ctfassets.net/o7xu9whrs0u9/56Y00XftW2RnPmQPdrsjhx/d0e38fc9a5f6ef6512b345cda7ceae83/mulesoft-logo.png: MuleSoft\\n‚ü®27‚ü© https://images.ctfassets.net/o7xu9whrs0u9/7vIWOBJPomIhF44RF7KIuJ/f10b12438fc99eb0cd625fe67ed2030c/icons-rotation.svg: 046-abstract shape-hl\\n‚ü®28‚ü© https://images.ctfassets.net/o7xu9whrs0u9/6Jmh507gQ1XKLH9d6URyu3/68c0527828478181c1cdb31398bea11e/cabinet.svg: icon-sql\\n‚ü®29‚ü© https://influxdata.com/<https:/www.influxdata.com/get-influxdb/>: See ways to get started \\n‚ü®30‚ü© https://images.ctfassets.net/o7xu9whrs0u9/4qE3t6JQWHMBcfeZbZgqZq/213e7ef9b150f356709774ca3862165a/icon-pie_chart.svg: 046-abstract shape-hl\\n‚ü®31‚ü© https://images.ctfassets.net/o7xu9whrs0u9/4ATyk8p1BD6TIn91I1eY72/63df388ece3ec7d4b499c61de016c94c/icon-sheets.svg: 046-abstract shape-hl\\n‚ü®32‚ü© https://images.ctfassets.net/o7xu9whrs0u9/2Al1gGTM0gi9hqH9k8bKuJ/a28852d4d10903b5e03123a4655267e5/icon-sql.svg: icon-sql\\n‚ü®33‚ü© https://images.ctfassets.net/o7xu9whrs0u9/5PubM7CweO2Vexag6c2LZ4/f6a786ce5f3af2c68de187139a2e1582/icon-looking-glass.svg: icon-journey\\n‚ü®34‚ü© https://images.ctfassets.net/o7xu9whrs0u9/5EsNpLJpz3jSnfHJMQYJIT/922a32d49f9b66b0d8ad9b443a82ccf9/icon__infinite.svg: 046-abstract shape-hl\\n‚ü®35‚ü© https://influxdata.com/</products/integrations/>: See All Integrations\\n‚ü®36‚ü© https://influxdata.com/images/home/python-8dfd7e58.png: Python\\n‚ü®37‚ü© https://influxdata.com/images/home/swift-585ceff4.png: Swift\\n‚ü®38‚ü© https://influxdata.com/images/home/js-bce7444a.png: JavaScript\\n‚ü®39‚ü© https://influxdata.com/images/home/java-48cc7e45.png: Java\\n‚ü®40‚ü© https://influxdata.com/images/home/ruby-1926e8fa.png: Ruby\\n‚ü®41‚ü© https://influxdata.com/images/home/scala-4557ff11.png: Scala\\n‚ü®42‚ü© https://influxdata.com/images/home/go-leng-55e8bffc.png: Go\\n‚ü®43‚ü© https://influxdata.com/images/home/csharp-3e3c2a3e.png: C Sharp\\n‚ü®44‚ü© https://influxdata.com/images/home/rlang-bbb152f4.png: R\\n‚ü®45‚ü© https://influxdata.com/it => println(s\"Measurement: ${it.getMeasurement}, value: ${it.getValue}\": FluxRecord\\n‚ü®46‚ü© precision: Option[WritePrecision], bucket: Option[String], org: Option[String]: M\\n‚ü®47‚ü© parameters: WriteParameters: M\\n‚ü®48‚ü© https://influxdata.com/<https:/docs.influxdata.com/influxdb/v2/api-guide/client-libraries/>: Read Documentation for v2 \\n‚ü®49‚ü© https://influxdata.com/<https:/docs.influxdata.com/influxdb/cloud-serverless/reference/client-libraries/v3/#client-libraries-for-influxdb-v3>: Read Documentation for v3 \\n‚ü®50‚ü© https://influxdata.com/</customer/loft-orbital/>: Read Case Study \\n‚ü®51‚ü© https://influxdata.com/</customer/capital-one/>: Read Case Study \\n‚ü®52‚ü© https://influxdata.com/</customer/terega/>: Read Case Study \\n‚ü®53‚ü© https://influxdata.com/</customer/volvo/>: Read Case Study \\n‚ü®54‚ü© https://influxdata.com/</customer/wideopenwest/>: Read Case Study \\n‚ü®55‚ü© https://influxdata.com/</customer/majik/>: Read Case Study \\n‚ü®56‚ü© https://influxdata.com/</customer/juniz/>: Read Case Study \\n‚ü®57‚ü© https://influxdata.com/<https:/www.g2.com/products/influxdata-influxdb/reviews>: Read reviews \\n‚ü®58‚ü© https://images.ctfassets.net/o7xu9whrs0u9/1sVMNGJqukua4VX161BnZs/cf1cb5a656afc1c0c074e20a36640da0/TimeSeriesIntelligence_UsersMostLikelyToRecommend_Nps.svg: G2 - Users Most Likely To Recommend\\n‚ü®59‚ü© https://images.ctfassets.net/o7xu9whrs0u9/1gyd43bpGAdZGWOWgBaNCS/e4735282d1bafca847edaff0f7815e0a/TimeSeriesDatabases_Leader_Leader.svg: G2 - Leader Winter 2024\\n‚ü®60‚ü© https://images.ctfassets.net/o7xu9whrs0u9/3XAq1sduZ7GwVj2uIOs3VW/90906aa97995defb768a62018abbbf11/TimeSeriesDatabases_MomentumLeader_Leader.svg: G2-MomentumLeader-Winter-2024\\n‚ü®61‚ü© https://images.ctfassets.net/o7xu9whrs0u9/bc1colOmlLlVPVGJzzXAT/d4c3712e3aaf7558b468ba32c0b7e13f/TimeSeriesIntelligence_Leader_Mid-Market_Leader.svg: G2 Mid-Market Leader\\n‚ü®62‚ü© https://images.ctfassets.net/o7xu9whrs0u9/70HiaaF2VVgCsY6QxaNSHd/8006dfba1a8b21a5a925b7b85e18d474/TimeSeriesDatabases_BestUsability_Total.svg: G2 - Best Usability\\n‚ü®63‚ü© https://influxdata.com/</solutions/by-industries/manufacturing/>: Learn More \\n‚ü®64‚ü© https://influxdata.com/</solutions/by-industries/energy-and-utilities/>: Learn More \\n‚ü®65‚ü© https://influxdata.com/</solutions/by-industries/telecommunications/>: Learn More \\n‚ü®66‚ü© https://influxdata.com/</solutions/consumer-iot/>: Learn More \\n‚ü®67‚ü© https://influxdata.com/</solutions/industrial-iot/>: Learn More \\n‚ü®68‚ü© https://influxdata.com/</solutions/by-industries/aerospace-and-satellites/>: Learn More \\n‚ü®69‚ü© https://influxdata.com/</real-time-workloads/>: Learn More \\n‚ü®70‚ü© https://images.ctfassets.net/o7xu9whrs0u9/4FIKs9d3n3c6jXGZOQ8jxb/74ba6ba19fc2b4224723d0b2753b89e5/real-time-analytics.svg: code\\n‚ü®71‚ü© https://influxdata.com/</telemetry-workloads/>: Learn More \\n‚ü®72‚ü© https://images.ctfassets.net/o7xu9whrs0u9/pJWpvaZ0VEWzh6gVgo7wP/8be83d66d0a292ddf37bf61f0ea28b40/telemetry.svg: code\\n‚ü®73‚ü© https://influxdata.com/</historian-workloads/>: Learn More \\n‚ü®74‚ü© https://images.ctfassets.net/o7xu9whrs0u9/5kkFiUZgZZq81koJMB2Yf7/74580a3ef800629c0afd6375d9ab711e/data-historian.svg: code\\n‚ü®75‚ü© https://influxdata.com/</ml-ai-workloads/>: Learn More \\n‚ü®76‚ü© https://images.ctfassets.net/o7xu9whrs0u9/5sGS3szG7zWkxEVR7axQyS/c6da478f63503d59062fd50d1f56fd92/machine-learning.svg: ai\\n‚ü®77‚ü© https://images.ctfassets.net/o7xu9whrs0u9/4JlI4opSxChoIW2XvNaO8m/6c6d01b3fc665e5b3788ced9669a71e7/real-time-01.svg: code\\n‚ü®78‚ü© https://images.ctfassets.net/o7xu9whrs0u9/5ml3nEc67Obh55dLNiNfF4/b70b6de0b103f6cb4d5e480a5c8671fa/telemetry-01.svg: code\\n‚ü®79‚ü© https://images.ctfassets.net/o7xu9whrs0u9/26kKFMCTPkhiaqvprdhvMl/2fe4d2bc7f4be71ec2b070737376373c/data-historian-01.svg: code\\n‚ü®80‚ü© https://images.ctfassets.net/o7xu9whrs0u9/RnkNZRjLfo4yyzLhQ6qo0/74df2b01ad5a673879ed135d6e2b7a44/ml-01.svg: ai\\n‚ü®81‚ü© https://influxdata.com/<https:/cloud2.influxdata.com/signup>: Get InfluxDB\\n‚ü®82‚ü© https://influxdata.com/<https:/www.influxdata.com/products/influxdb-overview/#overview>: Find the right product \\n‚ü®83‚ü© https://influxdata.com/</products/influxdb-cloud/serverless/>: InfluxDB Cloud Serverless\\n‚ü®84‚ü© https://influxdata.com/</products/influxdb-cloud/dedicated/>: InfluxDB Cloud Dedicated\\n‚ü®85‚ü© https://influxdata.com/</products/influxdb-clustered/>: InfluxDB Clustered\\n‚ü®86‚ü© https://influxdata.com/</lp/oss-vs-new-engine/>: InfluxDB Comparison\\n‚ü®87‚ü© https://influxdata.com/</glossary/data-warehouse/>: Data Lake / Warehouse\\n‚ü®88‚ü© https://influxdata.com/</time-series-platform/telegraf/>: Data Collector\\n‚ü®89‚ü© https://influxdata.com/</solutions/>: Use Cases\\n‚ü®90‚ü© https://influxdata.com/</what-is-time-series-data/>: Time Series Data\\n‚ü®91‚ü© https://influxdata.com/</time-series-database/>: Time Series Database\\n‚ü®92‚ü© https://influxdata.com/</time-series-forecasting-methods/>: Time Series Forecasting\\n‚ü®93‚ü© https://influxdata.com/</solutions/network-monitoring/>: Network Monitoring\\n‚ü®94‚ü© https://influxdata.com/</_resources/>: Guides\\n‚ü®95‚ü© https://influxdata.com/</blog/>: Blog\\n‚ü®96‚ü© https://influxdata.com/</customers/>: Customers\\n‚ü®97‚ü© https://influxdata.com/<https:/support.influxdata.com/>: Support\\n‚ü®98‚ü© https://influxdata.com/<https:/docs.influxdata.com/>: Documentation\\n‚ü®99‚ü© https://influxdata.com/</events/>: Events & Live Training\\n‚ü®100‚ü© https://influxdata.com/<https:/university.influxdata.com/>: InfluxDB University\\n‚ü®101‚ü© https://influxdata.com/<https:/community.influxdata.com/>: Community\\n‚ü®102‚ü© https://influxdata.com/</influxdb-cloud-on-aws/>: AWS\\n‚ü®103‚ü© https://influxdata.com/</glossary/>: Glossary\\n‚ü®104‚ü© https://influxdata.com/</about/>: About\\n‚ü®105‚ü© https://influxdata.com/</careers/>: Careers\\n‚ü®106‚ü© https://influxdata.com/</partners/>: Partners\\n‚ü®107‚ü© https://influxdata.com/</newsroom/>: Newsroom\\n‚ü®108‚ü© https://influxdata.com/</general-inquiries/>: Contact Us\\n‚ü®109‚ü© https://influxdata.com/<https:/www.youtube.com/@influxdata8893>:  \\n‚ü®110‚ü© https://images.ctfassets.net/o7xu9whrs0u9/4fDx6xWWz9MAxYFYIhJ84g/6207b0255e0be642061d121447477740/logo.svg:  ![twitter\\n‚ü®111‚ü© https://influxdata.com/<https:/www.linkedin.com/company/influxdb/>:  \\n‚ü®112‚ü© https://influxdata.com/<https:/github.com/influxdata/influxdb>:  \\n‚ü®113‚ü© https://influxdata.com/</slack>:  \\n‚ü®114‚ü© https://influxdata.com/</legal/ >: Legal\\n‚ü®115‚ü© https://influxdata.com/</security/ >: Security\\n‚ü®116‚ü© https://influxdata.com/</legal/cookie-policy/>: Cookie Policy\\n‚ü®117‚ü© https://influxdata.com/</comparison/>: Comparison\\n' fit_markdown='' fit_html=''",
  "generated_description": "InfluxData is a dynamic company at the forefront of time series data management, founded in 2012 in San Francisco and notable for developing InfluxDB, a powerful open-source platform designed specifically for analyzing time series data. This platform caters primarily to applications in DevOps and Internet of Things (IoT), positioning itself as a cornerstone for industries needing real-time data processing capabilities.\n\n**Mission and Vision**: InfluxData's mission is clear: it aims to simplify the process of building and operating time series applications. Their tools allow developers to collect, analyze, and act on data‚Äîfrom sensors, devices, or even human inputs‚Äîfaster and more efficiently than ever before.\n\n**Key Offerings**: InfluxData provides a range of products tailored for flexibility and control:\n- **InfluxDB Cloud**: Fully managed services, both in Serverless and Dedicated forms, allowing users to scale effortlessly in the cloud.\n- **Self-Managed Solutions**: For organizations that desire complete control, InfluxData offers Clustered versions of InfluxDB that can be implemented on-premises or in hybrid environments.\n\n**Use Cases**: The applications of InfluxData‚Äôs technology are broad and impactful, including:\n- Real-time analytics for infrastructure and application monitoring\n- Network and device telemetry for IoT systems\n- Predictive maintenance through advanced analytics\n- Machine Learning and AI project support\n\n**Clientele**: With a customer base that includes tech giants like Autodesk, Cisco, and eBay, InfluxData has proven its reliability and efficacy in the marketplace, translating complex data into actionable insights across numerous industries.\n\n**Team and Culture**: Backed by a robust team of around 210 employees and advice from prominent partners like Y Combinator (where they were part of Batch W13), InfluxData represents a solid blend of innovative technology and skilled talent.\n\n**Marketplace Position**: As of 2023, InfluxData stands as a leader in the time series database arena, boasting over a billion downloads of InfluxDB and a thriving open-source ecosystem with over 1 million active instances.\n\nTo learn more and explore how InfluxData can empower your time series applications, check out their website at [InfluxData](https://www.influxdata.com). If you‚Äôre looking to dive into the world of time series analytics, they have the tools and resources to get you started swiftly and effectively."
}