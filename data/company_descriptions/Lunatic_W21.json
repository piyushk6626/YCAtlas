{
  "links": "https://www.ycombinator.com/companies/lunatic",
  "name": "Lunatic",
  "headline": "Operating System for server-side apps",
  "batch": "W21",
  "description": "At the core of the company there is Lunatic, a runtime for developing low latency, robust and distributed networking applications. It can be used for web applications, game servers, video and voice chat, or other apps requiring low latency runtimes. Lunatic borrows many proven ideas from Go and Erlang, but also uses WebAssembly to make it easier targetable from existing languages, allowing teams to leverage already existing code and libraries.",
  "activity_status": "Active",
  "website": "https://lunatic.solutions/",
  "founded_date": 2020.0,
  "team_size": 2.0,
  "location": "Vienna, Austria",
  "group_partner": null,
  "group_partner_yc": null,
  "company_linkedin": null,
  "company_twitter": null,
  "tags": "industry:developer-tools; industry:saas; industry:open-source",
  "founders": [
    {
      "name": "Bernard Kolobara, Founder",
      "description": "Bernard is the co-founder and CEO of Lunatic. \n\nPrior to Lunatic, Bernard worked at CERN where he developed monitoring tools for a cluster of 1,000+ servers. He also manages 2 online communities around an open source distributed ledger technology with more than 6,000 registered users.",
      "linkedin": "https://www.linkedin.com/in/bkolobara/"
    },
    {
      "name": "Hrvoje Bandov, Founder",
      "description": "Hrvoje previously co-founded an innovative insurance-tech company Amodo where he served as a system architect. For the last few years, he has been working as a contractor on various back-end projects including a platform for running real-time web-based multiplayer games.",
      "linkedin": "https://hr.linkedin.com/in/hrvoje-bandov-2b699773"
    }
  ],
  "status": true,
  "markdown": "raw_markdown=\"[![lunatic-logo-moon](https://lunatic.solutions/logo.svg)**lunatic**.solutions](https://lunatic.solutions/</>)\\n[Documentation](https://lunatic.solutions/</docs>)[Blog](https://lunatic.solutions/</blog>)[FAQ](https://lunatic.solutions/</faq>)\\n[![github-icon](https://lunatic.solutions/_next/static/media/github-icon.95c8cec0.svg)](https://lunatic.solutions/<https:/github.com/lunatic-solutions/lunatic>)[![discord-icon](https://lunatic.solutions/_next/static/media/discord-icon.e1660d9a.svg)](https://lunatic.solutions/<https:/discord.gg/b7zDqpXpB4>)[![twitter-icon](https://lunatic.solutions/_next/static/media/x-icon.20bcda05.svg)](https://lunatic.solutions/<https:/twitter.com/lunatic_runtime>)\\n[![lunatic-logo-moon](https://lunatic.solutions/logo.svg)**lunatic**.solutions](https://lunatic.solutions/</>)![hamburger-icon](https://lunatic.solutions/hamburger-icon.svg)\\n![discord-icon](https://lunatic.solutions/lunatic-icon-white.svg)![close-icon](https://lunatic.solutions/close-icon.svg)\\n[FAQ](https://lunatic.solutions/</faq>)[Blog](https://lunatic.solutions/</blog>)[Documentation](https://lunatic.solutions/</docs>)\\n[![discord-icon](https://lunatic.solutions/github-purple-icon.svg)](https://lunatic.solutions/<https:/github.com/lunatic-solutions/lunatic>)[![discord-icon](https://lunatic.solutions/discord-purple-icon.svg)](https://lunatic.solutions/<https:/discord.gg/b7zDqpXpB4>)[![discord-icon](https://lunatic.solutions/x-purple-icon.svg)](https://lunatic.solutions/<https:/twitter.com/>)\\n© 2023, Lunatic Inc.\\n# Create distributed services with ease\\n**Lunatic is a WebAssembly runtime inspired by Erlang.** It provides isolated, lightweight processes for massive concurrency and fault tolerance. Easily create distributed clusters with secure connections between nodes.\\n[Get started](https://lunatic.solutions/</docs>)\\n![Placeholder big](https://lunatic.solutions/placeholder-big.png)\\n## Features\\n### ![lunatic-logo-moon](https://lunatic.solutions/_next/static/media/opensource.60ba6a2f.svg)Open-Source\\nLunatic is developed under dual Apache/MIT license. Join our growing community and contribute to the project.\\n### ![lunatic-logo-moon](https://lunatic.solutions/_next/static/media/performance-icon.40892cbb.svg)Performance\\nWrite performant high-throughput, low-latency services. Lunatic leverages the performance of JIT compiled Wasm.\\n### ![lunatic-logo-moon](https://lunatic.solutions/_next/static/media/security-icon.b653cb40.svg)Security\\nWasm was designed to run in untrusted environments. Limit each process capabilities using the Lunatic API.\\n### ![lunatic-logo-moon](https://lunatic.solutions/_next/static/media/fault-tolerance-icon.5de5a1ed.svg)Fault-Tolerance\\nMonitor failing processes by creating supervision trees inspired by Erlang.\\n### ![lunatic-logo-moon](https://lunatic.solutions/_next/static/media/portable-icon.c1fb0c13.svg)Portable\\nCompile once to WebAssembly and run on different architectures and operating systems.\\n### ![lunatic-logo-moon](https://lunatic.solutions/_next/static/media/distributed-icon.7d6b7032.svg)Distributed\\nEasily create a securely connected cluster of Lunatic nodes.\\n## Distributed\\n### Lunatic nodes are connected via QUIC and authenticated with mTLS. Join a new node with a single command.\\n[Find out more](https://lunatic.solutions/</docs>)\\n![Illustration showing various geometric shapes connected](https://lunatic.solutions/_next/static/media/distributed-system-icon.7642246d.svg)\\n## FAQ\\n### What is Lunatic?\\nLunatic is a universal runtime for fast, robust, and scalable server-side applications. It's inspired by Erlang and can be used from any language that compiles to [WebAssembly](https://lunatic.solutions/<https:/webassembly.org/>).\\n### What is Erlang?\\nErlang is a programming language and platform developed by Ericsson. It's used to build massively scalable and highly available real-time systems. Almost all [Internet traffic](https://lunatic.solutions/<https:/www.erlang-solutions.com/blog/which-companies-are-using-erlang-and-why-mytopdogstatus/>) is going through routers and switches controlled by Erlang. The technology allowed WhatsApp to [scale to 1B users](https://lunatic.solutions/<https:/www.wired.com/2015/09/whatsapp-serves-900-million-users-50-engineers/>) with just a handful of engineers.\\n### How can Lunatic help with security?\\nWebAssebmly was initially developed to run in the browser and provides extremely strong sandboxing on multiple levels. Lunatic's processes inherit this property. Each process has its own stack, heap, and even syscalls. If one process fails, it will not affect the rest of the system. This allows you to create very powerful and fault-tolerant abstraction. This is also true for some other runtimes, but Lunatic goes one step further and makes it possible to use C bindings directly in your app without any fear. If the C code contains any security vulnerabilities or crashes, those issues will only affect the process currently executing the code. The only requirement is that the C code can be compiled to WebAssembly. It's possible to give per process fine-grained access to resources (filesystem, memory, network connections, etc.). This is enforced on the syscall level. If you are unsure about one of your dependencies' security, you can call it from a process without any permissions and completely isolate it.\\n### Does async code benefit from Lunatic?\\nAll code running on Lunatic is by default async. Processes are scheduled by a work-stealing executor on worker threads. If one of the processes is waiting on I/O or other events, it will be moved off the worker thread until the data is ready. You can write your code in a linear/blocking manner, but Lunatic will make sure it never blocks while waiting. Lunatic gives you some other properties that can't be easily achieved with async code. Processes are preemptively scheduled and if one process decides to go rogue by hitting an unexpected code path, it will never permanently block the thread and the rest of the system will stay responsive.\\n### Which programming languages are supported?\\nAll languages that can be compiled to [WebAssembly (Wasm)](https://lunatic.solutions/<https:/en.wikipedia.org/wiki/WebAssembly>) can be run on Lunatic.\\n### Why is it called Lunatic?\\nBernard was originally working on a programming language that compiled to Lua, so he named it Lunatic. Later he decided to write a runtime for the language and called it Lunatic VM. We ended up with an actor-based language-agnostic runtime, but the original name was kept though it does not have any connections to Lua anymore.\\n#### Let`s connect\\n## Join our community\\n[![github-icon](https://lunatic.solutions/github-purple-icon.svg)](https://lunatic.solutions/<https:/github.com/lunatic-solutions/lunatic>)[![discord-icon](https://lunatic.solutions/discord-purple-icon.svg)](https://lunatic.solutions/<https:/discord.gg/b7zDqpXpB4>)[![twitter-icon](https://lunatic.solutions/x-purple-icon.svg)](https://lunatic.solutions/<https:/twitter.com/>)\\n## Newsletter\\n[![lunatic-logo-moon-white](https://lunatic.solutions/logo-white.svg)**lunatic**.solutions](https://lunatic.solutions/</>)\\n[Documentation](https://lunatic.solutions/</docs>)[FAQ](https://lunatic.solutions/</faq>)[Blog](https://lunatic.solutions/</blog>)\\n[GitHub](https://lunatic.solutions/<https:/github.com/lunatic-solutions/lunatic>)[Discord](https://lunatic.solutions/<https:/discord.gg/b7zDqpXpB4>)[Twitter](https://lunatic.solutions/<https:/twitter.com/lunatic_runtime>)\\n[![github-icon](https://lunatic.solutions/github-purple-icon.svg)](https://lunatic.solutions/<https:/github.com/lunatic-solutions/lunatic>)[![discord-icon](https://lunatic.solutions/discord-purple-icon.svg)](https://lunatic.solutions/<https:/discord.gg/b7zDqpXpB4>)[![twitter-icon](https://lunatic.solutions/x-purple-icon.svg)](https://lunatic.solutions/<https:/twitter.com/lunatic_runtime>)\\n### If you have any questions or want to collaborate don’t hasitate to contact us at info@lunatic.solutions\\n© 2023, Lunatic Inc.\\n\" markdown_with_citations=\"![lunatic-logo-moon⟨1⟩**lunatic**.solutions](https://lunatic.solutions/</>)\\nDocumentation⟨2⟩Blog⟨3⟩FAQ⟨4⟩\\n![github-icon⟨5⟩](https://lunatic.solutions/<https:/github.com/lunatic-solutions/lunatic>)![discord-icon⟨6⟩](https://lunatic.solutions/<https:/discord.gg/b7zDqpXpB4>)![twitter-icon⟨7⟩](https://lunatic.solutions/<https:/twitter.com/lunatic_runtime>)\\n![lunatic-logo-moon⟨1⟩**lunatic**.solutions](https://lunatic.solutions/</>)![hamburger-icon⟨8⟩]\\n![discord-icon⟨9⟩]![close-icon⟨10⟩]\\nFAQ⟨4⟩Blog⟨3⟩Documentation⟨2⟩\\n![discord-icon⟨11⟩](https://lunatic.solutions/<https:/github.com/lunatic-solutions/lunatic>)![discord-icon⟨12⟩](https://lunatic.solutions/<https:/discord.gg/b7zDqpXpB4>)![discord-icon⟨13⟩](https://lunatic.solutions/<https:/twitter.com/>)\\n© 2023, Lunatic Inc.\\n# Create distributed services with ease\\n**Lunatic is a WebAssembly runtime inspired by Erlang.** It provides isolated, lightweight processes for massive concurrency and fault tolerance. Easily create distributed clusters with secure connections between nodes.\\nGet started⟨2⟩\\n![Placeholder big⟨14⟩]\\n## Features\\n### ![lunatic-logo-moon⟨15⟩]Open-Source\\nLunatic is developed under dual Apache/MIT license. Join our growing community and contribute to the project.\\n### ![lunatic-logo-moon⟨16⟩]Performance\\nWrite performant high-throughput, low-latency services. Lunatic leverages the performance of JIT compiled Wasm.\\n### ![lunatic-logo-moon⟨17⟩]Security\\nWasm was designed to run in untrusted environments. Limit each process capabilities using the Lunatic API.\\n### ![lunatic-logo-moon⟨18⟩]Fault-Tolerance\\nMonitor failing processes by creating supervision trees inspired by Erlang.\\n### ![lunatic-logo-moon⟨19⟩]Portable\\nCompile once to WebAssembly and run on different architectures and operating systems.\\n### ![lunatic-logo-moon⟨20⟩]Distributed\\nEasily create a securely connected cluster of Lunatic nodes.\\n## Distributed\\n### Lunatic nodes are connected via QUIC and authenticated with mTLS. Join a new node with a single command.\\nFind out more⟨2⟩\\n![Illustration showing various geometric shapes connected⟨21⟩]\\n## FAQ\\n### What is Lunatic?\\nLunatic is a universal runtime for fast, robust, and scalable server-side applications. It's inspired by Erlang and can be used from any language that compiles to WebAssembly⟨22⟩.\\n### What is Erlang?\\nErlang is a programming language and platform developed by Ericsson. It's used to build massively scalable and highly available real-time systems. Almost all Internet traffic⟨23⟩ is going through routers and switches controlled by Erlang. The technology allowed WhatsApp to scale to 1B users⟨24⟩ with just a handful of engineers.\\n### How can Lunatic help with security?\\nWebAssebmly was initially developed to run in the browser and provides extremely strong sandboxing on multiple levels. Lunatic's processes inherit this property. Each process has its own stack, heap, and even syscalls. If one process fails, it will not affect the rest of the system. This allows you to create very powerful and fault-tolerant abstraction. This is also true for some other runtimes, but Lunatic goes one step further and makes it possible to use C bindings directly in your app without any fear. If the C code contains any security vulnerabilities or crashes, those issues will only affect the process currently executing the code. The only requirement is that the C code can be compiled to WebAssembly. It's possible to give per process fine-grained access to resources (filesystem, memory, network connections, etc.). This is enforced on the syscall level. If you are unsure about one of your dependencies' security, you can call it from a process without any permissions and completely isolate it.\\n### Does async code benefit from Lunatic?\\nAll code running on Lunatic is by default async. Processes are scheduled by a work-stealing executor on worker threads. If one of the processes is waiting on I/O or other events, it will be moved off the worker thread until the data is ready. You can write your code in a linear/blocking manner, but Lunatic will make sure it never blocks while waiting. Lunatic gives you some other properties that can't be easily achieved with async code. Processes are preemptively scheduled and if one process decides to go rogue by hitting an unexpected code path, it will never permanently block the thread and the rest of the system will stay responsive.\\n### Which programming languages are supported?\\nAll languages that can be compiled to WebAssembly (Wasm)⟨25⟩ can be run on Lunatic.\\n### Why is it called Lunatic?\\nBernard was originally working on a programming language that compiled to Lua, so he named it Lunatic. Later he decided to write a runtime for the language and called it Lunatic VM. We ended up with an actor-based language-agnostic runtime, but the original name was kept though it does not have any connections to Lua anymore.\\n#### Let`s connect\\n## Join our community\\n![github-icon⟨11⟩](https://lunatic.solutions/<https:/github.com/lunatic-solutions/lunatic>)![discord-icon⟨12⟩](https://lunatic.solutions/<https:/discord.gg/b7zDqpXpB4>)![twitter-icon⟨13⟩](https://lunatic.solutions/<https:/twitter.com/>)\\n## Newsletter\\n![lunatic-logo-moon-white⟨26⟩**lunatic**.solutions](https://lunatic.solutions/</>)\\nDocumentation⟨2⟩FAQ⟨4⟩Blog⟨3⟩\\nGitHub⟨27⟩Discord⟨28⟩Twitter⟨29⟩\\n![github-icon⟨11⟩](https://lunatic.solutions/<https:/github.com/lunatic-solutions/lunatic>)![discord-icon⟨12⟩](https://lunatic.solutions/<https:/discord.gg/b7zDqpXpB4>)![twitter-icon⟨13⟩](https://lunatic.solutions/<https:/twitter.com/lunatic_runtime>)\\n### If you have any questions or want to collaborate don’t hasitate to contact us at info@lunatic.solutions\\n© 2023, Lunatic Inc.\\n\" references_markdown='\\n\\n## References\\n\\n⟨1⟩ https://lunatic.solutions/logo.svg: ![lunatic-logo-moon\\n⟨2⟩ https://lunatic.solutions/</docs>: Documentation\\n⟨3⟩ https://lunatic.solutions/</blog>: Blog\\n⟨4⟩ https://lunatic.solutions/</faq>: FAQ\\n⟨5⟩ https://lunatic.solutions/_next/static/media/github-icon.95c8cec0.svg: ![github-icon\\n⟨6⟩ https://lunatic.solutions/_next/static/media/discord-icon.e1660d9a.svg: ![discord-icon\\n⟨7⟩ https://lunatic.solutions/_next/static/media/x-icon.20bcda05.svg: ![twitter-icon\\n⟨8⟩ https://lunatic.solutions/hamburger-icon.svg: hamburger-icon\\n⟨9⟩ https://lunatic.solutions/lunatic-icon-white.svg: discord-icon\\n⟨10⟩ https://lunatic.solutions/close-icon.svg: close-icon\\n⟨11⟩ https://lunatic.solutions/github-purple-icon.svg: ![discord-icon\\n⟨12⟩ https://lunatic.solutions/discord-purple-icon.svg: ![discord-icon\\n⟨13⟩ https://lunatic.solutions/x-purple-icon.svg: ![discord-icon\\n⟨14⟩ https://lunatic.solutions/placeholder-big.png: Placeholder big\\n⟨15⟩ https://lunatic.solutions/_next/static/media/opensource.60ba6a2f.svg: lunatic-logo-moon\\n⟨16⟩ https://lunatic.solutions/_next/static/media/performance-icon.40892cbb.svg: lunatic-logo-moon\\n⟨17⟩ https://lunatic.solutions/_next/static/media/security-icon.b653cb40.svg: lunatic-logo-moon\\n⟨18⟩ https://lunatic.solutions/_next/static/media/fault-tolerance-icon.5de5a1ed.svg: lunatic-logo-moon\\n⟨19⟩ https://lunatic.solutions/_next/static/media/portable-icon.c1fb0c13.svg: lunatic-logo-moon\\n⟨20⟩ https://lunatic.solutions/_next/static/media/distributed-icon.7d6b7032.svg: lunatic-logo-moon\\n⟨21⟩ https://lunatic.solutions/_next/static/media/distributed-system-icon.7642246d.svg: Illustration showing various geometric shapes connected\\n⟨22⟩ https://lunatic.solutions/<https:/webassembly.org/>: WebAssembly\\n⟨23⟩ https://lunatic.solutions/<https:/www.erlang-solutions.com/blog/which-companies-are-using-erlang-and-why-mytopdogstatus/>: Internet traffic\\n⟨24⟩ https://lunatic.solutions/<https:/www.wired.com/2015/09/whatsapp-serves-900-million-users-50-engineers/>: scale to 1B users\\n⟨25⟩ https://lunatic.solutions/<https:/en.wikipedia.org/wiki/WebAssembly>: WebAssembly (Wasm)\\n⟨26⟩ https://lunatic.solutions/logo-white.svg: ![lunatic-logo-moon-white\\n⟨27⟩ https://lunatic.solutions/<https:/github.com/lunatic-solutions/lunatic>: GitHub\\n⟨28⟩ https://lunatic.solutions/<https:/discord.gg/b7zDqpXpB4>: Discord\\n⟨29⟩ https://lunatic.solutions/<https:/twitter.com/lunatic_runtime>: Twitter\\n' fit_markdown='' fit_html=''",
  "generated_description": "### Lunatic - The Future of Server-Side Applications\n\n**Founded:** 2020  \n**Location:** Vienna, Austria  \n**Team Size:** 2  \n**Y Combinator Batch:** W21  \n\n---\n\n**Mission Statement:**  \nLunatic is dedicated to creating powerful operating systems specifically designed for server-side applications.\n\n---\n\n**What is Lunatic?**  \nAt its core, Lunatic is a WebAssembly runtime inspired by Erlang, aimed at building low-latency, robust, and distributed networking applications. Think gaming servers, web apps, or video chat platforms—anything that needs speed and reliability. By leveraging WebAssembly, Lunatic allows developers to use existing codebases and libraries from various programming languages, making it an attractive option for teams looking to enhance their projects.\n\n---\n\n**Key Features:**\n\n- **Open Source:** Built under a dual Apache/MIT license, fostering collaboration and community contributions.\n  \n- **Performance:** Utilizes JIT-compiled WebAssembly for high-throughput and low-latency services.\n\n- **Security:** Each process runs in a sandboxed environment, minimizing risks associated with untrusted code.\n\n- **Fault Tolerance:** Monitors processes through supervision trees, inspired by Erlang to ensure system resilience.\n\n- **Portability:** Compile once and run anywhere—supporting different architectures and operating systems.\n\n- **Distributed Capabilities:** Nodes can easily connect via QUIC with mTLS authentication, allowing for seamless scaling.\n\n---\n\n**Ideal Use Cases:**  \nLunatic shines in scenarios that require massive concurrency and high fault tolerance, making it suitable for real-time systems where reliability is non-negotiable. Whether you're working with traditional web applications or modern gaming services, Lunatic provides the robust foundation you need.\n\n---\n\n**Community and Support:**  \nJoin Lunatic's community to collaborate on development, access extensive documentation, and stay connected through [GitHub](https://lunatic.solutions/<https:/github.com/lunatic-solutions/lunatic>), [Discord](https://lunatic.solutions/<https:/discord.gg/b7zDqpXpB4>), and [Twitter](https://lunatic.solutions/<https:/twitter.com/lunatic_runtime>).\n\n---\n\n**Final Thoughts:**  \nLunatic is not just a runtime; it's a community-driven project aiming to redefine how developers approach server-side applications. If you're looking to build the next scalable service, Lunatic could very well be your go-to solution. Check out more on their [website](https://lunatic.solutions/).\n\n---\n\nIn a nutshell, Lunatic combines the proven excellence of Erlang's principles with the modern flexibility of WebAssembly, creating a compelling option for developers eager to tackle the complexities of distributed service architectures. If you want to stay ahead of the curve in server-side development, this is definitely worth a look."
}